{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/@supabase/supabase-js/dist/module/lib/version.js","../../node_modules/@supabase/supabase-js/dist/module/lib/constants.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/version.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/cookies.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueApi.js","../../node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","../../node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/types.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestTransformBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestFilterBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestQueryBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/PostgrestRpcBuilder.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/version.js","../../node_modules/@supabase/postgrest-js/dist/module/lib/constants.js","../../node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","../../node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","../../node_modules/@supabase/realtime-js/dist/module/lib/constants.js","../../node_modules/@supabase/realtime-js/dist/module/lib/timer.js","../../node_modules/@supabase/realtime-js/dist/module/lib/push.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeSubscription.js","../../node_modules/es5-ext/global.js","../../node_modules/websocket/lib/browser.js","../../node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","../../node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseRealtimeClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/SupabaseQueryBuilder.js","../../node_modules/@supabase/storage-js/dist/module/lib/fetch.js","../../node_modules/@supabase/storage-js/dist/module/lib/version.js","../../node_modules/@supabase/storage-js/dist/module/lib/constants.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageBucketApi.js","../../node_modules/@supabase/storage-js/dist/module/lib/StorageFileApi.js","../../node_modules/@supabase/storage-js/dist/module/SupabaseStorageClient.js","../../node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","../../node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","../../node_modules/@supabase/supabase-js/dist/module/index.js","../../node_modules/svelte/store/index.mjs","../../src/supa.js","../../node_modules/tinro/dist/tinro_lib.js","../../node_modules/tinro/cmp/Route.svelte","../../src/pages/Login.svelte","../../src/pages/Interface.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.2' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// generated by genversion\nexport const version = '1.28.2';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\n//# sourceMappingURL=constants.js.map","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'text/plain;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return params;\n};\nfunction _handleRequest(fetcher = crossFetch, method, url, options, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options);\n    });\n}\nexport function post(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, body);\n    });\n}\nexport function put(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, body);\n    });\n}\nexport function remove(fetcher, url, body, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","// generated by genversion\nexport const version = '1.21.7';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 60 * 1000;\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const COOKIE_OPTIONS = {\n    name: 'sb:token',\n    lifetime: 60 * 60 * 8,\n    domain: '',\n    path: '/',\n    sameSite: 'lax',\n};\n//# sourceMappingURL=constants.js.map","/**\n * Serialize data into a cookie header.\n */\nfunction serialize(name, val, options) {\n    const opt = options || {};\n    const enc = encodeURIComponent;\n    /* eslint-disable-next-line no-control-regex */\n    const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n    if (typeof enc !== 'function') {\n        throw new TypeError('option encode is invalid');\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError('argument name is invalid');\n    }\n    const value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError('argument val is invalid');\n    }\n    let str = name + '=' + value;\n    if (null != opt.maxAge) {\n        const maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError('option maxAge is invalid');\n        }\n        str += '; Max-Age=' + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError('option domain is invalid');\n        }\n        str += '; Domain=' + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError('option path is invalid');\n        }\n        str += '; Path=' + opt.path;\n    }\n    if (opt.expires) {\n        if (typeof opt.expires.toUTCString !== 'function') {\n            throw new TypeError('option expires is invalid');\n        }\n        str += '; Expires=' + opt.expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += '; HttpOnly';\n    }\n    if (opt.secure) {\n        str += '; Secure';\n    }\n    if (opt.sameSite) {\n        const sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch (sameSite) {\n            case 'lax':\n                str += '; SameSite=Lax';\n                break;\n            case 'strict':\n                str += '; SameSite=Strict';\n                break;\n            case 'none':\n                str += '; SameSite=None';\n                break;\n            default:\n                throw new TypeError('option sameSite is invalid');\n        }\n    }\n    return str;\n}\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req) {\n    if (!req || !req.headers || !req.headers.host) {\n        throw new Error('The \"host\" request header is not available');\n    }\n    const host = (req.headers.host.indexOf(':') > -1 && req.headers.host.split(':')[0]) || req.headers.host;\n    if (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n        return false;\n    }\n    return true;\n}\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie, secure) {\n    var _a, _b, _c;\n    return serialize(cookie.name, cookie.value, {\n        maxAge: cookie.maxAge,\n        expires: new Date(Date.now() + cookie.maxAge * 1000),\n        httpOnly: true,\n        secure,\n        path: (_a = cookie.path) !== null && _a !== void 0 ? _a : '/',\n        domain: (_b = cookie.domain) !== null && _b !== void 0 ? _b : '',\n        sameSite: (_c = cookie.sameSite) !== null && _c !== void 0 ? _c : 'lax',\n    });\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookies(req, res, cookies) {\n    const strCookies = cookies.map((c) => serializeCookie(c, isSecureEnvironment(req)));\n    const previousCookies = res.getHeader('Set-Cookie');\n    if (previousCookies) {\n        if (previousCookies instanceof Array) {\n            Array.prototype.push.apply(strCookies, previousCookies);\n        }\n        else if (typeof previousCookies === 'string') {\n            strCookies.push(previousCookies);\n        }\n    }\n    res.setHeader('Set-Cookie', strCookies);\n}\n/**\n * Set one or more cookies.\n */\nexport function setCookie(req, res, cookie) {\n    setCookies(req, res, [cookie]);\n}\nexport function deleteCookie(req, res, name) {\n    setCookie(req, res, {\n        name,\n        value: '',\n        maxAge: -1,\n    });\n}\n//# sourceMappingURL=cookies.js.map","export function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './lib/fetch';\nimport { COOKIE_OPTIONS } from './lib/constants';\nimport { setCookie, deleteCookie } from './lib/cookies';\nimport { expiresAt } from './lib/helpers';\nexport default class GoTrueApi {\n    constructor({ url = '', headers = {}, cookieOptions, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.cookieOptions = Object.assign(Object.assign({}, COOKIE_OPTIONS), cookieOptions);\n        this.fetch = fetch;\n    }\n    /**\n     * Creates a new user.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param attributes The data you want to create the user with.\n     * @param jwt A valid JWT. Must be a full-access API key (e.g. service_role key).\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/users`, attributes, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                return { data: data.users, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Creates a new user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     *\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUpWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString = '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/signup${queryString}`, { email, password, data: options.data }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their email address.\n     * @param email The email address of the user.\n     * @param password The password of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    signInWithEmail(email, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '?grant_type=password';\n                if (options.redirectTo) {\n                    queryString += '&redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { email, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Signs up a new user using their phone number and a password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     * @param data Optional user metadata.\n     */\n    signUpWithPhone(phone, password, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/signup`, { phone, password, data: options.data }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Logs in an existing user using their phone number and password.\n     * @param phone The phone number of the user.\n     * @param password The password of the user.\n     */\n    signInWithPhone(phone, password) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const queryString = '?grant_type=password';\n                const data = yield post(this.fetch, `${this.url}/token${queryString}`, { phone, password }, { headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a magic login link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    sendMagicLinkEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/magiclink${queryString}`, { email }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a mobile OTP via SMS. Will register the account if it doesn't already exist\n     * @param phone The user's phone number WITH international prefix\n     */\n    sendMobileOTP(phone) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/otp`, { phone }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Send User supplied Mobile OTP to be verified\n     * @param phone The user's phone number WITH international prefix\n     * @param token token that user was sent to their mobile phone\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyMobileOTP(phone, token, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                const data = yield post(this.fetch, `${this.url}/verify`, { phone, token, type: 'sms', redirect_to: options.redirectTo }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/invite${queryString}`, { email, data: options.data }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sends a reset request to an email address.\n     * @param email The email address of the user.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const headers = Object.assign({}, this.headers);\n                let queryString = '';\n                if (options.redirectTo) {\n                    queryString += '?redirect_to=' + encodeURIComponent(options.redirectTo);\n                }\n                const data = yield post(this.fetch, `${this.url}/recover${queryString}`, { email }, { headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Create a temporary object with all configured headers and\n     * adds the Authorization token to be used on request methods\n     * @param jwt A valid, logged-in JWT.\n     */\n    _createRequestHeaders(jwt) {\n        const headers = Object.assign({}, this.headers);\n        headers['Authorization'] = `Bearer ${jwt}`;\n        return headers;\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield post(this.fetch, `${this.url}/logout`, {}, { headers: this._createRequestHeaders(jwt), noResolveJson: true });\n                return { error: null };\n            }\n            catch (e) {\n                return { error: e };\n            }\n        });\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    /**\n     * Gets the user details.\n     * @param jwt A valid, logged-in JWT.\n     */\n    getUser(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/user`, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     * @param jwt A valid, logged-in JWT.\n     * @param attributes The data you want to update.\n     */\n    updateUser(jwt, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/user`, attributes, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     *\n     * @param uid The user uid you want to remove.\n     * @param jwt A valid JWT. Must be a full-access API key (e.g. service_role key).\n     */\n    deleteUser(uid, jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/admin/users/${uid}`, {}, {\n                    headers: this._createRequestHeaders(jwt),\n                });\n                return { user: data, data, error: null };\n            }\n            catch (e) {\n                return { user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/token?grant_type=refresh_token`, { refresh_token: refreshToken }, { headers: this.headers });\n                const session = Object.assign({}, data);\n                if (session.expires_in)\n                    session.expires_at = expiresAt(data.expires_in);\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Set/delete the auth cookie based on the AuthChangeEvent.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    setAuthCookie(req, res) {\n        if (req.method !== 'POST') {\n            res.setHeader('Allow', 'POST');\n            res.status(405).end('Method Not Allowed');\n        }\n        const { event, session } = req.body;\n        if (!event)\n            throw new Error('Auth event missing!');\n        if (event === 'SIGNED_IN') {\n            if (!session)\n                throw new Error('Auth session missing!');\n            setCookie(req, res, {\n                name: this.cookieOptions.name,\n                value: session.access_token,\n                domain: this.cookieOptions.domain,\n                maxAge: this.cookieOptions.lifetime,\n                path: this.cookieOptions.path,\n                sameSite: this.cookieOptions.sameSite,\n            });\n        }\n        if (event === 'SIGNED_OUT')\n            deleteCookie(req, res, this.cookieOptions.name);\n        res.status(200).json({});\n    }\n    /**\n     * Get user by reading the cookie from the request.\n     * Works for Next.js & Express (requires cookie-parser middleware).\n     */\n    getUserByCookie(req) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!req.cookies) {\n                    throw new Error('Not able to parse cookies! When using Express make sure the cookie-parser middleware is in use!');\n                }\n                if (!req.cookies[this.cookieOptions.name]) {\n                    throw new Error('No cookie found!');\n                }\n                const token = req.cookies[this.cookieOptions.name];\n                const { user, error } = yield this.getUser(token);\n                if (error)\n                    throw error;\n                return { token, user, data: user, error: null };\n            }\n            catch (e) {\n                return { token: null, user: null, data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Generates links to be sent via email or other.\n     * @param type The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     * @param email The user's email.\n     * @param password User password. For signup only.\n     * @param data Optional user metadata. For signup only.\n     * @param redirectTo The link type (\"signup\" or \"magiclink\" or \"recovery\" or \"invite\").\n     */\n    generateLink(type, email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/admin/generate_link`, {\n                    type,\n                    email,\n                    password: options.password,\n                    data: options.data,\n                    redirect_to: options.redirectTo,\n                }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueApi from './GoTrueApi';\nimport { isBrowser, getParameterByName, uuid } from './lib/helpers';\nimport { GOTRUE_URL, DEFAULT_HEADERS, STORAGE_KEY } from './lib/constants';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    multiTab: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param options.url The URL of the GoTrue server.\n     * @param options.headers Any additional headers to send to the GoTrue server.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.localStorage Provide your own local storage implementation to use instead of the browser's local storage.\n     * @param options.multiTab Set to \"false\" if you want to disable multi-tab/window events.\n     * @param options.cookieOptions\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.currentUser = null;\n        this.currentSession = null;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.multiTab = settings.multiTab;\n        this.localStorage = settings.localStorage || globalThis.localStorage;\n        this.api = new GoTrueApi({\n            url: settings.url,\n            headers: settings.headers,\n            cookieOptions: settings.cookieOptions,\n            fetch: settings.fetch,\n        });\n        this._recoverSession();\n        this._recoverAndRefresh();\n        this._listenForMultiTabEvents();\n        if (settings.detectSessionInUrl && isBrowser() && !!getParameterByName('access_token')) {\n            // Handle the OAuth redirect\n            this.getSessionFromUrl({ storeSession: true }).then(({ error }) => {\n                if (error) {\n                    console.error('Error getting session from URL.', error);\n                }\n            });\n        }\n    }\n    /**\n     * Creates a new user.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param phone The user's phone number.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param data Optional user metadata.\n     */\n    signUp({ email, password, phone }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = phone && password\n                    ? yield this.api.signUpWithPhone(phone, password, {\n                        data: options.data,\n                    })\n                    : yield this.api.signUpWithEmail(email, password, {\n                        redirectTo: options.redirectTo,\n                        data: options.data,\n                    });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on sign up.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in an existing user, or login via a third-party provider.\n     * @type UserCredentials\n     * @param email The user's email address.\n     * @param password The user's password.\n     * @param refreshToken A valid refresh token that was returned on login.\n     * @param provider One of the providers supported by GoTrue.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param scopes A space-separated list of scopes granted to the OAuth application.\n     */\n    signIn({ email, phone, password, refreshToken, provider }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                if (email && !password) {\n                    const { error } = yield this.api.sendMagicLinkEmail(email, {\n                        redirectTo: options.redirectTo,\n                    });\n                    return { user: null, session: null, error };\n                }\n                if (email && password) {\n                    return this._handleEmailSignIn(email, password, {\n                        redirectTo: options.redirectTo,\n                    });\n                }\n                if (phone && !password) {\n                    const { error } = yield this.api.sendMobileOTP(phone);\n                    return { user: null, session: null, error };\n                }\n                if (phone && password) {\n                    return this._handlePhoneSignIn(phone, password);\n                }\n                if (refreshToken) {\n                    // currentSession and currentUser will be updated to latest on _callRefreshToken using the passed refreshToken\n                    const { error } = yield this._callRefreshToken(refreshToken);\n                    if (error)\n                        throw error;\n                    return {\n                        user: this.currentUser,\n                        session: this.currentSession,\n                        error: null,\n                    };\n                }\n                if (provider) {\n                    return this._handleProviderSignIn(provider, {\n                        redirectTo: options.redirectTo,\n                        scopes: options.scopes,\n                    });\n                }\n                throw new Error(`You must provide either an email, phone number or a third-party provider.`);\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     * @param phone The user's phone number.\n     * @param token The user's password.\n     * @param redirectTo A URL or mobile address to send the user to after they are confirmed.\n     */\n    verifyOTP({ phone, token }, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this._removeSession();\n                const { data, error } = yield this.api.verifyMobileOTP(phone, token, options);\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                let session = null;\n                let user = null;\n                if (data.access_token) {\n                    session = data;\n                    user = session.user;\n                    this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                if (data.id) {\n                    user = data;\n                }\n                return { user, session, error: null };\n            }\n            catch (e) {\n                return { user: null, session: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `user()` will return the user data, if there is a logged in user.\n     *\n     * For server-side management, you can get a user through `auth.api.getUserByCookie()`\n     */\n    user() {\n        return this.currentUser;\n    }\n    /**\n     * Returns the session data, if there is an active session.\n     */\n    session() {\n        return this.currentSession;\n    }\n    /**\n     * Force refreshes the session including the user data in case it was updated in a different session.\n     */\n    refreshSession() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                // currentSession and currentUser will be updated to latest on _callRefreshToken\n                const { error } = yield this._callRefreshToken();\n                if (error)\n                    throw error;\n                return { data: this.currentSession, user: this.currentUser, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    update(attributes) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!((_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token))\n                    throw new Error('Not logged in.');\n                const { user, error } = yield this.api.updateUser(this.currentSession.access_token, attributes);\n                if (error)\n                    throw error;\n                if (!user)\n                    throw Error('Invalid user data.');\n                const session = Object.assign(Object.assign({}, this.currentSession), { user });\n                this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED');\n                return { data: user, user, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, error: e };\n            }\n        });\n    }\n    /**\n     * Sets the session data from refresh_token and returns current Session and Error\n     * @param refresh_token a JWT token\n     */\n    setSession(refresh_token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error) {\n                    return { session: null, error: error };\n                }\n                this._saveSession(data);\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { session: data, error: null };\n            }\n            catch (e) {\n                return { error: e, session: null };\n            }\n        });\n    }\n    /**\n     * Overrides the JWT on the current client. The JWT will then be sent in all subsequent network requests.\n     * @param access_token a jwt access token\n     */\n    setAuth(access_token) {\n        this.currentSession = Object.assign(Object.assign({}, this.currentSession), { access_token, token_type: 'bearer', user: null });\n        return this.currentSession;\n    }\n    /**\n     * Gets the session data from a URL string\n     * @param options.storeSession Optionally store the session in the browser\n     */\n    getSessionFromUrl(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new Error('No browser detected.');\n                const error_description = getParameterByName('error_description');\n                if (error_description)\n                    throw new Error(error_description);\n                const provider_token = getParameterByName('provider_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new Error('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new Error('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new Error('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new Error('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { user, error } = yield this.api.getUser(access_token);\n                if (error)\n                    throw error;\n                const session = {\n                    provider_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user: user,\n                };\n                if (options === null || options === void 0 ? void 0 : options.storeSession) {\n                    this._saveSession(session);\n                    const recoveryMode = getParameterByName('type');\n                    this._notifyAllSubscribers('SIGNED_IN');\n                    if (recoveryMode === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY');\n                    }\n                }\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: session, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a \"SIGNED_OUT\" event.\n     *\n     * For server-side management, you can disable sessions by passing a JWT through to `auth.api.signOut(JWT: string)`\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessToken = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.access_token;\n            this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT');\n            if (accessToken) {\n                const { error } = yield this.api.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @returns {Subscription} A subscription object which can be used to unsubscribe itself.\n     */\n    onAuthStateChange(callback) {\n        try {\n            const id = uuid();\n            const subscription = {\n                id,\n                callback,\n                unsubscribe: () => {\n                    this.stateChangeEmitters.delete(id);\n                },\n            };\n            this.stateChangeEmitters.set(id, subscription);\n            return { data: subscription, error: null };\n        }\n        catch (e) {\n            return { data: null, error: e };\n        }\n    }\n    _handleEmailSignIn(email, password, options = {}) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithEmail(email, password, {\n                    redirectTo: options.redirectTo,\n                });\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if (((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.confirmed_at) || ((_b = data === null || data === void 0 ? void 0 : data.user) === null || _b === void 0 ? void 0 : _b.email_confirmed_at)) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handlePhoneSignIn(phone, password) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield this.api.signInWithPhone(phone, password);\n                if (error || !data)\n                    return { data: null, user: null, session: null, error };\n                if ((_a = data === null || data === void 0 ? void 0 : data.user) === null || _a === void 0 ? void 0 : _a.phone_confirmed_at) {\n                    this._saveSession(data);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n                return { data, user: data.user, session: data, error: null };\n            }\n            catch (e) {\n                return { data: null, user: null, session: null, error: e };\n            }\n        });\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this.api.getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n        });\n        try {\n            // try to open on the browser\n            if (isBrowser()) {\n                window.location.href = url;\n            }\n            return { provider, url, data: null, session: null, user: null, error: null };\n        }\n        catch (e) {\n            // fallback to returning the URL\n            if (url)\n                return { provider, url, data: null, session: null, user: null, error: null };\n            return { data: null, user: null, session: null, error: e };\n        }\n    }\n    /**\n     * Attempts to get the session from LocalStorage\n     * Note: this should never be async (even for React Native), as we need it to return immediately in the constructor.\n     */\n    _recoverSession() {\n        var _a;\n        try {\n            const json = isBrowser() && ((_a = this.localStorage) === null || _a === void 0 ? void 0 : _a.getItem(STORAGE_KEY));\n            if (!json || typeof json !== 'string') {\n                return null;\n            }\n            const data = JSON.parse(json);\n            const { currentSession, expiresAt } = data;\n            const timeNow = Math.round(Date.now() / 1000);\n            if (expiresAt >= timeNow && (currentSession === null || currentSession === void 0 ? void 0 : currentSession.user)) {\n                this._saveSession(currentSession);\n                this._notifyAllSubscribers('SIGNED_IN');\n            }\n        }\n        catch (error) {\n            console.log('error', error);\n        }\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const json = isBrowser() && (yield this.localStorage.getItem(STORAGE_KEY));\n                if (!json) {\n                    return null;\n                }\n                const data = JSON.parse(json);\n                const { currentSession, expiresAt } = data;\n                const timeNow = Math.round(Date.now() / 1000);\n                if (expiresAt < timeNow) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            yield this._removeSession();\n                        }\n                    }\n                    else {\n                        this._removeSession();\n                    }\n                }\n                else if (!currentSession || !currentSession.user) {\n                    console.log('Current session is missing data.');\n                    this._removeSession();\n                }\n                else {\n                    // should be handled on _recoverSession method already\n                    // But we still need the code here to accommodate for AsyncStorage e.g. in React native\n                    this._saveSession(currentSession);\n                    this._notifyAllSubscribers('SIGNED_IN');\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return null;\n            }\n        });\n    }\n    _callRefreshToken(refresh_token) {\n        var _a;\n        if (refresh_token === void 0) { refresh_token = (_a = this.currentSession) === null || _a === void 0 ? void 0 : _a.refresh_token; }\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!refresh_token) {\n                    throw new Error('No current session.');\n                }\n                const { data, error } = yield this.api.refreshAccessToken(refresh_token);\n                if (error)\n                    throw error;\n                if (!data)\n                    throw Error('Invalid session data.');\n                this._saveSession(data);\n                this._notifyAllSubscribers('TOKEN_REFRESHED');\n                this._notifyAllSubscribers('SIGNED_IN');\n                return { data, error: null };\n            }\n            catch (e) {\n                return { data: null, error: e };\n            }\n        });\n    }\n    _notifyAllSubscribers(event) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, this.currentSession));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        this.currentSession = session;\n        this.currentUser = session.user;\n        const expiresAt = session.expires_at;\n        if (expiresAt) {\n            const timeNow = Math.round(Date.now() / 1000);\n            const expiresIn = expiresAt - timeNow;\n            const refreshDurationBeforeExpires = expiresIn > 60 ? 60 : 0.5;\n            this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n        }\n        // Do we need any extra check before persist session\n        // access_token or user ?\n        if (this.persistSession && session.expires_at) {\n            this._persistSession(this.currentSession);\n        }\n    }\n    _persistSession(currentSession) {\n        const data = { currentSession, expiresAt: currentSession.expires_at };\n        isBrowser() && this.localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentSession = null;\n            this.currentUser = null;\n            if (this.refreshTokenTimer)\n                clearTimeout(this.refreshTokenTimer);\n            isBrowser() && (yield this.localStorage.removeItem(STORAGE_KEY));\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => this._callRefreshToken(), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    /**\n     * Listens for changes to LocalStorage and updates the current session.\n     */\n    _listenForMultiTabEvents() {\n        if (!this.multiTab || !isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            // console.debug('Auth multi-tab support is disabled.')\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('storage', (e) => {\n                var _a;\n                if (e.key === STORAGE_KEY) {\n                    const newSession = JSON.parse(String(e.newValue));\n                    if ((_a = newSession === null || newSession === void 0 ? void 0 : newSession.currentSession) === null || _a === void 0 ? void 0 : _a.access_token) {\n                        this._recoverAndRefresh();\n                        this._notifyAllSubscribers('SIGNED_IN');\n                    }\n                    else {\n                        this._removeSession();\n                        this._notifyAllSubscribers('SIGNED_OUT');\n                    }\n                }\n            });\n        }\n        catch (error) {\n            console.error('_listenForMultiTabEvents', error);\n        }\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        Object.assign(this, builder);\n        this.fetch = builder.fetch || crossFetch;\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (typeof this.schema === 'undefined') {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        let res = this.fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            if (res.ok) {\n                const isReturnMinimal = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.split(',').includes('return=minimal');\n                if (this.method !== 'HEAD' && !isReturnMinimal) {\n                    const text = yield res.text();\n                    if (!text) {\n                        // discard `text`\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = text;\n                    }\n                    else {\n                        data = JSON.parse(text);\n                    }\n                }\n                const countHeader = (_b = this.headers['Prefer']) === null || _b === void 0 ? void 0 : _b.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_c = res.headers.get('content-range')) === null || _c === void 0 ? void 0 : _c.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                error = yield res.json();\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status: res.status,\n                statusText: res.statusText,\n                body: data,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                body: null,\n                count: null,\n                status: 400,\n                statusText: 'Bad Request',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=types.js.map","import { PostgrestBuilder } from './types';\n/**\n * Post-filters (transforms)\n */\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     */\n    select(columns = '*') {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        return this;\n    }\n    /**\n     * Orders the result with the specified `column`.\n     *\n     * @param column  The column to order on.\n     * @param ascending  If `true`, the result will be in ascending order.\n     * @param nullsFirst  If `true`, `null`s appear first.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    order(column, { ascending = true, nullsFirst = false, foreignTable, } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'order' : `${foreignTable}.order`;\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}.${nullsFirst ? 'nullsfirst' : 'nullslast'}`);\n        return this;\n    }\n    /**\n     * Limits the result with the specified `count`.\n     *\n     * @param count  The maximum no. of rows to limit to.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limits the result to rows within the specified range, inclusive.\n     *\n     * @param from  The starting index from which to limit the result, inclusive.\n     * @param to  The last index to which to limit the result, inclusive.\n     * @param foreignTable  The foreign table to use (for foreign columns).\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Sets the AbortSignal for the fetch request.\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Retrieves only one row from the result. Result must be one row (e.g. using\n     * `limit`), otherwise this will result in an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Retrieves at most one row from the result. Result must be at most one row\n     * (e.g. using `eq` on a UNIQUE column), otherwise this will result in an\n     * error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        const _this = new PostgrestTransformBuilder(this);\n        _this.then = ((onfulfilled, onrejected) => this.then((res) => {\n            var _a, _b;\n            if ((_b = (_a = res.error) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.includes('Results contain 0 rows')) {\n                return onfulfilled({\n                    error: null,\n                    data: null,\n                    count: res.count,\n                    status: 200,\n                    statusText: 'OK',\n                    body: null,\n                });\n            }\n            return onfulfilled(res);\n        }, onrejected));\n        return _this;\n    }\n    /**\n     * Set the response type to CSV.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    constructor() {\n        super(...arguments);\n        /** @deprecated Use `contains()` instead. */\n        this.cs = this.contains;\n        /** @deprecated Use `containedBy()` instead. */\n        this.cd = this.containedBy;\n        /** @deprecated Use `rangeLt()` instead. */\n        this.sl = this.rangeLt;\n        /** @deprecated Use `rangeGt()` instead. */\n        this.sr = this.rangeGt;\n        /** @deprecated Use `rangeGte()` instead. */\n        this.nxl = this.rangeGte;\n        /** @deprecated Use `rangeLte()` instead. */\n        this.nxr = this.rangeLte;\n        /** @deprecated Use `rangeAdjacent()` instead. */\n        this.adj = this.rangeAdjacent;\n        /** @deprecated Use `overlaps()` instead. */\n        this.ov = this.overlaps;\n    }\n    /**\n     * Finds all rows which doesn't satisfy the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    not(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows satisfying at least one of the filters.\n     *\n     * @param filters  The filters to use, separated by commas.\n     * @param foreignTable  The foreign table to use (if `column` is a foreign column).\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'or' : `${foreignTable}.or`;\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` exactly matches the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    eq(column, value) {\n        this.url.searchParams.append(`${column}`, `eq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` doesn't match the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    neq(column, value) {\n        this.url.searchParams.append(`${column}`, `neq.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gt(column, value) {\n        this.url.searchParams.append(`${column}`, `gt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is greater than or\n     * equal to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    gte(column, value) {\n        this.url.searchParams.append(`${column}`, `gte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than the\n     * specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lt(column, value) {\n        this.url.searchParams.append(`${column}`, `lt.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is less than or equal\n     * to the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    lte(column, value) {\n        this.url.searchParams.append(`${column}`, `lte.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case sensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    like(column, pattern) {\n        this.url.searchParams.append(`${column}`, `like.${pattern}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value in the stated `column` matches the supplied\n     * `pattern` (case insensitive).\n     *\n     * @param column  The column to filter on.\n     * @param pattern  The pattern to filter with.\n     */\n    ilike(column, pattern) {\n        this.url.searchParams.append(`${column}`, `ilike.${pattern}`);\n        return this;\n    }\n    /**\n     * A check for exact equality (null, true, false), finds all rows whose\n     * value on the stated `column` exactly match the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    is(column, value) {\n        this.url.searchParams.append(`${column}`, `is.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose value on the stated `column` is found on the\n     * specified `values`.\n     *\n     * @param column  The column to filter on.\n     * @param values  The values to filter with.\n     */\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(`${column}`, `in.(${cleanedValues})`);\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column`\n     * contains the values specified in `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(`${column}`, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose json, array, or range value on the stated `column` is\n     * contained by the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(`${column}`, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(`${column}`, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to the\n     * left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLt(column, range) {\n        this.url.searchParams.append(`${column}`, `sl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is strictly to\n     * the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGt(column, range) {\n        this.url.searchParams.append(`${column}`, `sr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the left of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeGte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxl.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` does not extend\n     * to the right of the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeLte(column, range) {\n        this.url.searchParams.append(`${column}`, `nxr.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose range value on the stated `column` is adjacent to\n     * the specified `range`.\n     *\n     * @param column  The column to filter on.\n     * @param range  The range to filter with.\n     */\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(`${column}`, `adj.${range}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose array or range value on the stated `column` overlaps\n     * (has a value in common) with the specified `value`.\n     *\n     * @param column  The column to filter on.\n     * @param value  The value to filter with.\n     */\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(`${column}`, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(`${column}`, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    /**\n     * Finds all rows whose text or tsvector value on the stated `column` matches\n     * the tsquery in `query`.\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     * @param type  The type of tsquery conversion to use on `query`.\n     */\n    textSearch(column, query, { config, type = null, } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` instead.\n     */\n    fts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `fts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * plainto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'plain'` instead.\n     */\n    plfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `plfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * phraseto_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'phrase'` instead.\n     */\n    phfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `phfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose tsvector value on the stated `column` matches\n     * websearch_to_tsquery(`query`).\n     *\n     * @param column  The column to filter on.\n     * @param query  The Postgres tsquery string to filter with.\n     * @param config  The text search configuration to use.\n     *\n     * @deprecated Use `textSearch()` with `type: 'websearch'` instead.\n     */\n    wfts(column, query, { config } = {}) {\n        const configPart = typeof config === 'undefined' ? '' : `(${config})`;\n        this.url.searchParams.append(`${column}`, `wfts${configPart}.${query}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose `column` satisfies the filter.\n     *\n     * @param column  The column to filter on.\n     * @param operator  The operator to filter with.\n     * @param value  The value to filter with.\n     */\n    filter(column, operator, value) {\n        this.url.searchParams.append(`${column}`, `${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Finds all rows whose columns match the specified `query` object.\n     *\n     * @param query  The object to filter with, with column names as keys mapped\n     *               to their filter values.\n     */\n    match(query) {\n        Object.keys(query).forEach((key) => {\n            this.url.searchParams.append(`${key}`, `eq.${query[key]}`);\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        super({ fetch });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Performs vertical filtering with SELECT.\n     *\n     * @param columns  The columns to retrieve, separated by commas.\n     * @param head  When set to true, select will void data.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    select(columns = '*', { head = false, count = null, } = {}) {\n        this.method = 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = columns\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        if (head) {\n            this.method = 'HEAD';\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    insert(values, { upsert = false, onConflict, returning = 'representation', count = null, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [`return=${returning}`];\n        if (upsert)\n            prefersHeaders.push('resolution=merge-duplicates');\n        if (upsert && onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPSERT into the table.\n     *\n     * @param values  The values to insert.\n     * @param onConflict  By specifying the `on_conflict` query parameter, you can make UPSERT work on a column(s) that has a UNIQUE constraint.\n     * @param returning  By default the new record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     * @param ignoreDuplicates  Specifies if duplicate rows should be ignored and not inserted.\n     */\n    upsert(values, { onConflict, returning = 'representation', count = null, ignoreDuplicates = false, } = {}) {\n        this.method = 'POST';\n        const prefersHeaders = [\n            `resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`,\n            `return=${returning}`,\n        ];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs an UPDATE on the table.\n     *\n     * @param values  The values to update.\n     * @param returning  By default the updated record is returned. Set this to 'minimal' if you don't need this value.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    update(values, { returning = 'representation', count = null, } = {}) {\n        this.method = 'PATCH';\n        const prefersHeaders = [`return=${returning}`];\n        this.body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n    /**\n     * Performs a DELETE on the table.\n     *\n     * @param returning  If `true`, return the deleted row(s) in the response.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    delete({ returning = 'representation', count = null, } = {}) {\n        this.method = 'DELETE';\n        const prefersHeaders = [`return=${returning}`];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","import { PostgrestBuilder } from './types';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestRpcBuilder extends PostgrestBuilder {\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        super({ fetch });\n        this.url = new URL(url);\n        this.headers = Object.assign({}, headers);\n        this.schema = schema;\n    }\n    /**\n     * Perform a function call.\n     */\n    rpc(params, { head = false, count = null, } = {}) {\n        if (head) {\n            this.method = 'HEAD';\n            if (params) {\n                Object.entries(params).forEach(([name, value]) => {\n                    this.url.searchParams.append(name, value);\n                });\n            }\n        }\n        else {\n            this.method = 'POST';\n            this.body = params;\n        }\n        if (count) {\n            if (this.headers['Prefer'] !== undefined)\n                this.headers['Prefer'] += `,count=${count}`;\n            else\n                this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder(this);\n    }\n}\n//# sourceMappingURL=PostgrestRpcBuilder.js.map","// generated by genversion\nexport const version = '0.35.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './lib/PostgrestQueryBuilder';\nimport PostgrestRpcBuilder from './lib/PostgrestRpcBuilder';\nimport { DEFAULT_HEADERS } from './lib/constants';\nexport default class PostgrestClient {\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url  URL of the PostgREST endpoint.\n     * @param headers  Custom headers.\n     * @param schema  Postgres schema to switch to.\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Authenticates the request with JWT.\n     *\n     * @param token  The JWT token to use.\n     */\n    auth(token) {\n        this.headers['Authorization'] = `Bearer ${token}`;\n        return this;\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table  The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.url}/${table}`;\n        return new PostgrestQueryBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head  When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const url = `${this.url}/rpc/${fn}`;\n        return new PostgrestRpcBuilder(url, {\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n        }).rpc(params, { head, count });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\n//# sourceMappingURL=constants.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n        });\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket.makeRef();\n        this.refEvent = this.channel.replyEventName(this.ref);\n        this.channel.on(this.refEvent, (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        });\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel.trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel.off(this.refEvent);\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nexport default class RealtimeSubscription {\n    constructor(topic, params = {}, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = [];\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this.rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this.onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket.remove(this);\n        });\n        this.onError((reason) => {\n            if (this.isLeaving() || this.isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this.isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n            this.trigger(this.replyEventName(ref), payload);\n        });\n    }\n    rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this.rejoin();\n        }\n    }\n    subscribe(timeout = this.timeout) {\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            this.joinedOnce = true;\n            this.rejoin(timeout);\n            return this.joinPush;\n        }\n    }\n    onClose(callback) {\n        this.on(CHANNEL_EVENTS.close, callback);\n    }\n    onError(callback) {\n        this.on(CHANNEL_EVENTS.error, (reason) => callback(reason));\n    }\n    on(event, callback) {\n        this.bindings.push({ event, callback });\n    }\n    off(event) {\n        this.bindings = this.bindings.filter((bind) => bind.event !== event);\n    }\n    canPush() {\n        return this.socket.isConnected() && this.isJoined();\n    }\n    push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this.canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Leaves the channel\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        let onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this.trigger(CHANNEL_EVENTS.close, 'leave', this.joinRef());\n        };\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        let leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n        leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose());\n        leavePush.send();\n        if (!this.canPush()) {\n            leavePush.trigger('ok', {});\n        }\n        return leavePush;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     */\n    onMessage(event, payload, ref) {\n        return payload;\n    }\n    isMember(topic) {\n        return this.topic === topic;\n    }\n    joinRef() {\n        return this.joinPush.ref;\n    }\n    sendJoin(timeout) {\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    rejoin(timeout = this.timeout) {\n        if (this.isLeaving()) {\n            return;\n        }\n        this.sendJoin(timeout);\n    }\n    trigger(event, payload, ref) {\n        let { close, error, leave, join } = CHANNEL_EVENTS;\n        let events = [close, error, leave, join];\n        if (ref && events.indexOf(event) >= 0 && ref !== this.joinRef()) {\n            return;\n        }\n        let handledPayload = this.onMessage(event, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        this.bindings\n            .filter((bind) => {\n            // Bind all events if the user specifies a wildcard.\n            if (bind.event === '*') {\n                return event === (payload === null || payload === void 0 ? void 0 : payload.type);\n            }\n            else {\n                return bind.event === event;\n            }\n        })\n            .map((bind) => bind.callback(handledPayload, ref));\n    }\n    replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    isErrored() {\n        return this.state === CHANNEL_STATES.errored;\n    }\n    isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n}\n//# sourceMappingURL=RealtimeSubscription.js.map","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, } from './lib/constants';\nimport Timer from './lib/timer';\nimport RealtimeSubscription from './RealtimeSubscription';\nimport { w3cwebsocket as WebSocket } from 'websocket';\nimport Serializer from './lib/serializer';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.longpollerTimeout The maximum timeout of a long poll AJAX request. Defaults to 20s (double the server long poll timer).\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = WebSocket;\n        this.heartbeatIntervalMs = 30000;\n        this.longpollerTimeout = 20000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        if (options === null || options === void 0 ? void 0 : options.longpollerTimeout)\n            this.longpollerTimeout = options.longpollerTimeout;\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            yield this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this.endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            // this.conn.timeout = this.longpollerTimeout // TYPE ERROR\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this.onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        return new Promise((resolve, _reject) => {\n            try {\n                if (this.conn) {\n                    this.conn.onclose = function () { }; // noop\n                    if (code) {\n                        this.conn.close(code, reason || '');\n                    }\n                    else {\n                        this.conn.close();\n                    }\n                    this.conn = null;\n                    // remove open handles\n                    this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n                    this.reconnectTimer.reset();\n                }\n                resolve({ error: null, data: true });\n            }\n            catch (error) {\n                resolve({ error: error, data: false });\n            }\n        });\n    }\n    /**\n     * Logs the message. Override `this.logger` for specialized logging.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Registers a callback for connection state change event.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket opened.\"))\n     */\n    onOpen(callback) {\n        this.stateChangeCallbacks.open.push(callback);\n    }\n    /**\n     * Registers a callbacks for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen(() => console.log(\"Socket closed.\"))\n     */\n    onClose(callback) {\n        this.stateChangeCallbacks.close.push(callback);\n    }\n    /**\n     * Registers a callback for connection state change events.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onOpen((error) => console.log(\"An error occurred\"))\n     */\n    onError(callback) {\n        this.stateChangeCallbacks.error.push(callback);\n    }\n    /**\n     * Calls a function any time a message is received.\n     * @param callback A function to be called when the event occurs.\n     *\n     * @example\n     *    socket.onMessage((message) => console.log(message))\n     */\n    onMessage(callback) {\n        this.stateChangeCallbacks.message.push(callback);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return 'connecting';\n            case SOCKET_STATES.open:\n                return 'open';\n            case SOCKET_STATES.closing:\n                return 'closing';\n            default:\n                return 'closed';\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === 'open';\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     */\n    remove(channel) {\n        this.channels = this.channels.filter((c) => c.joinRef() !== channel.joinRef());\n    }\n    channel(topic, chanParams = {}) {\n        let chan = new RealtimeSubscription(topic, chanParams, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    push(data) {\n        let { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            callback();\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if (ref && ref === this.pendingHeartbeatRef) {\n                this.pendingHeartbeatRef = null;\n            }\n            else if (event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this._resetHeartbeat();\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel.isMember(topic))\n                .forEach((channel) => channel.trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /**\n     * Returns the URL of the websocket.\n     */\n    endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     */\n    makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        try {\n            this.channels.forEach((channel) => channel.joinedOnce &&\n                channel.isJoined() &&\n                channel.push(CHANNEL_EVENTS.access_token, {\n                    access_token: token,\n                }));\n        }\n        catch (error) {\n            console.log('error', error);\n            console.log('error', error);\n            console.log('error', error);\n        }\n    }\n    _onConnOpen() {\n        this.log('transport', `connected to ${this.endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this._resetHeartbeat();\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel.trigger(CHANNEL_EVENTS.error));\n    }\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    _resetHeartbeat() {\n        this.pendingHeartbeatRef = null;\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n    }\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this.makeRef();\n        this.setAuth(this.accessToken);\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","import { Transformers } from '@supabase/realtime-js';\nexport class SupabaseRealtimeClient {\n    constructor(socket, headers, schema, tableName) {\n        const chanParams = {};\n        const topic = tableName === '*' ? `realtime:${schema}` : `realtime:${schema}:${tableName}`;\n        const userToken = headers['Authorization'].split(' ')[1];\n        if (userToken) {\n            chanParams['user_token'] = userToken;\n        }\n        this.subscription = socket.channel(topic, chanParams);\n    }\n    getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n    /**\n     * The event you want to listen to.\n     *\n     * @param event The event\n     * @param callback A callback function that is called whenever the event occurs.\n     */\n    on(event, callback) {\n        this.subscription.on(event, (payload) => {\n            let enrichedPayload = {\n                schema: payload.schema,\n                table: payload.table,\n                commit_timestamp: payload.commit_timestamp,\n                eventType: payload.type,\n                new: {},\n                old: {},\n            };\n            enrichedPayload = Object.assign(Object.assign({}, enrichedPayload), this.getPayloadRecords(payload));\n            callback(enrichedPayload);\n        });\n        return this;\n    }\n    /**\n     * Enables the subscription.\n     */\n    subscribe(callback = () => { }) {\n        this.subscription.onError((e) => callback('SUBSCRIPTION_ERROR', e));\n        this.subscription.onClose(() => callback('CLOSED'));\n        this.subscription\n            .subscribe()\n            .receive('ok', () => callback('SUBSCRIBED'))\n            .receive('error', (e) => callback('SUBSCRIPTION_ERROR', e))\n            .receive('timeout', () => callback('RETRYING_AFTER_TIMEOUT'));\n        return this.subscription;\n    }\n}\n//# sourceMappingURL=SupabaseRealtimeClient.js.map","import { PostgrestQueryBuilder } from '@supabase/postgrest-js';\nimport { SupabaseRealtimeClient } from './SupabaseRealtimeClient';\nexport class SupabaseQueryBuilder extends PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, realtime, table, fetch, }) {\n        super(url, { headers, schema, fetch });\n        this._subscription = new SupabaseRealtimeClient(realtime, headers, schema, table);\n        this._realtime = realtime;\n    }\n    /**\n     * Subscribe to realtime changes in your databse.\n     * @param event The database event which you would like to receive updates for, or you can use the special wildcard `*` to listen to all changes.\n     * @param callback A callback that will handle the payload that is sent whenever your database changes.\n     */\n    on(event, callback) {\n        if (!this._realtime.isConnected()) {\n            this._realtime.connect();\n        }\n        return this._subscription.on(event, callback);\n    }\n}\n//# sourceMappingURL=SupabaseQueryBuilder.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => {\n    if (typeof error.json !== 'function') {\n        return reject(error);\n    }\n    error.json().then((err) => {\n        return reject({\n            message: _getErrorMessage(err),\n            status: (error === null || error === void 0 ? void 0 : error.status) || 500,\n        });\n    });\n};\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher = crossFetch, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return resolve(result);\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","// generated by genversion\nexport const version = '0.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, put, remove } from './fetch';\nimport { DEFAULT_HEADERS } from './constants';\nexport class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = fetch;\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing product.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data: data.name, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Updates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { get, post, remove } from './fetch';\nimport fetch from 'cross-fetch';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = fetch;\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const _path = this._getFinalPath(path);\n                const res = yield fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    // const data = await res.json()\n                    // temporary fix till backend is updated to the latest storage-api version\n                    return { data: { Key: _path }, error: null };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     * @param fileOptions HTTP headers.\n     * `cacheControl`: string, the `Cache-Control: max-age=<seconds>` seconds value.\n     * `contentType`: string, the `Content-Type` header value. Should be specified if using a `fileBody` that is neither `Blob` nor `File` nor `FormData`, otherwise will default to `text/plain;charset=UTF-8`.\n     * `upsert`: boolean, whether to perform an upsert.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file, optionally renaming it at the same time.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Create signed url to download file without requiring permissions. This URL can be valid for a set number of seconds.\n     *\n     * @param path The file path to be downloaded, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     */\n    createSignedUrl(path, expiresIn) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const signedURL = `${this.url}${data.signedURL}`;\n                data = { signedURL };\n                return { data, error: null, signedURL };\n            }\n            catch (error) {\n                return { data: null, error, signedURL: null };\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Retrieve URLs for assets in public buckets\n     *\n     * @param path The file path to be downloaded, including the path and file name. For example `folder/image.png`.\n     */\n    getPublicUrl(path) {\n        try {\n            const _path = this._getFinalPath(path);\n            const publicURL = `${this.url}/object/public/${_path}`;\n            const data = { publicURL };\n            return { data, error: null, publicURL };\n        }\n        catch (error) {\n            return { data: null, error, publicURL: null };\n        }\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to be deletes, including the path and file name. For example [`folder/image.png`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(id: string): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await get(`${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<{ data: Metadata | null; error: Error | null }> {\n    //   try {\n    //     const data = await post(`${this.url}/metadata/${id}`, { ...meta }, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     return { data: null, error }\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     * @param options Search options, including `limit`, `offset`, and `sortBy`.\n     * @param parameters Fetch parameters, currently only supports `signal`, which is an AbortController's signal\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","import { StorageBucketApi, StorageFileApi } from './lib';\nexport class SupabaseStorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=SupabaseStorageClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from './lib/constants';\nimport { stripTrailingSlash } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nimport { SupabaseQueryBuilder } from './lib/SupabaseQueryBuilder';\nimport { SupabaseStorageClient } from '@supabase/storage-js';\nimport { PostgrestClient } from '@supabase/postgrest-js';\nimport { RealtimeClient } from '@supabase/realtime-js';\nconst DEFAULT_OPTIONS = {\n    schema: 'public',\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.headers Any additional headers to send with each network request.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.fetch A custom fetch implementation.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        supabaseUrl = stripTrailingSlash(supabaseUrl);\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.restUrl = `${supabaseUrl}/rest/v1`;\n        this.realtimeUrl = `${supabaseUrl}/realtime/v1`.replace('http', 'ws');\n        this.authUrl = `${supabaseUrl}/auth/v1`;\n        this.storageUrl = `${supabaseUrl}/storage/v1`;\n        this.schema = settings.schema;\n        this.fetch = settings.fetch;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), options === null || options === void 0 ? void 0 : options.headers);\n        this.auth = this._initSupabaseAuthClient(settings);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        // In the future we might allow the user to pass in a logger to receive these events.\n        // this.realtime.onOpen(() => console.log('OPEN'))\n        // this.realtime.onClose(() => console.log('CLOSED'))\n        // this.realtime.onError((e: Error) => console.log('Socket error', e))\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this._getAuthHeaders(), this.fetch);\n    }\n    /**\n     * Perform a table operation.\n     *\n     * @param table The table name to operate on.\n     */\n    from(table) {\n        const url = `${this.restUrl}/${table}`;\n        return new SupabaseQueryBuilder(url, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            realtime: this.realtime,\n            table,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param params  The parameters to pass to the function call.\n     * @param head   When set to true, no data will be returned.\n     * @param count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, params, { head = false, count = null, } = {}) {\n        const rest = this._initPostgRESTClient();\n        return rest.rpc(fn, params, { head, count });\n    }\n    /**\n     * Removes an active subscription and returns the number of open connections.\n     *\n     * @param subscription The subscription you want to remove.\n     */\n    removeSubscription(subscription) {\n        return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._closeSubscription(subscription);\n                const openSubscriptions = this.getSubscriptions().length;\n                if (!openSubscriptions) {\n                    const { error } = yield this.realtime.disconnect();\n                    if (error)\n                        return resolve({ error });\n                }\n                return resolve({ error: null, data: { openSubscriptions } });\n            }\n            catch (error) {\n                return resolve({ error });\n            }\n        }));\n    }\n    _closeSubscription(subscription) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!subscription.isClosed()) {\n                yield this._closeChannel(subscription);\n            }\n        });\n    }\n    /**\n     * Returns an array of all your subscriptions.\n     */\n    getSubscriptions() {\n        return this.realtime.channels;\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, localStorage, headers, fetch, }) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, headers), authHeaders),\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            localStorage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign(Object.assign({}, options === null || options === void 0 ? void 0 : options.params), { apikey: this.supabaseKey }) }));\n    }\n    _initPostgRESTClient() {\n        return new PostgrestClient(this.restUrl, {\n            headers: this._getAuthHeaders(),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    _getAuthHeaders() {\n        var _a, _b;\n        const headers = this.headers;\n        const authBearer = (_b = (_a = this.auth.session()) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : this.supabaseKey;\n        headers['apikey'] = this.supabaseKey;\n        headers['Authorization'] = `Bearer ${authBearer}`;\n        return headers;\n    }\n    _closeChannel(subscription) {\n        return new Promise((resolve, reject) => {\n            subscription\n                .unsubscribe()\n                .receive('ok', () => {\n                this.realtime.remove(subscription);\n                return resolve(true);\n            })\n                .receive('error', (e) => reject(e));\n        });\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","// helpers.ts\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\n//# sourceMappingURL=helpers.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport * from '@supabase/realtime-js';\n/**\n * Creates a new Supabase Client.\n */\nconst createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\nexport { createClient, SupabaseClient, };\n//# sourceMappingURL=index.js.map","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { createClient } from '@supabase/supabase-js'\r\nimport { writable } from 'svelte/store'\r\n\r\nconst supabaseUrl = __api.env.APIURL\r\nconst supabaseAnonKey = __api.env.APIKEY\r\n\r\nconst supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\n// Usermanegement\r\nconst userStore = writable(supabase.auth.currentUser)\r\n\r\nsupabase.auth.onAuthStateChange((event, session) => {\r\n  if (event == 'SIGNED_IN') {\r\n    userStore.set(session.user)\r\n  } else if (event == 'SIGNED_OUT') {\r\n    userStore.set(null)\r\n  }\r\n})\r\n\r\nexport default {\r\n\tget user() {\r\n\t\treturn userStore\r\n\t},\r\n\tget supabase() {\r\n\t\treturn supabase;\r\n\t},\r\n\tasync get(id) {\r\n\t\tconst {body, error} = await supabase\r\n\t\t  .from('profiles')\r\n\t\t  .select('id, email, okencoin')\r\n\t\t  .eq('id', id)\r\n\t\t  .single()\r\n  \r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\treturn body\r\n\t  },\r\n\tasync getbyemail(email) {\r\n\tconst {body, error} = await supabase\r\n\t\t.from('profiles')\r\n\t\t.select('id, email, okencoin')\r\n\t\t.eq('email', email)\r\n\t\t.single()\r\n\r\n\t\tif (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\treturn body\r\n\t},\r\n\tsignInDiscord() {\r\n\t\treturn supabase.auth.signIn({\r\n\t\t\tprovider: 'discord',\r\n\t\t});\r\n\t},\r\n\tsignOut() {\r\n\t\treturn supabase.auth.signOut()\r\n\t},\r\n}","import{getContext as C}from\"svelte\";import{writable as F}from\"svelte/store\";function p(e,a=!1){return e=e.slice(e.startsWith(\"/#\")?2:0,e.endsWith(\"/*\")?-2:void 0),e.startsWith(\"/\")||(e=\"/\"+e),e===\"/\"&&(e=\"\"),a&&!e.endsWith(\"/\")&&(e+=\"/\"),e}function d(e,a){e=p(e,!0),a=p(a,!0);let r=[],n={},t=!0,c=e.split(\"/\").map(s=>s.startsWith(\":\")?(r.push(s.slice(1)),\"([^\\\\/]+)\"):s).join(\"\\\\/\"),o=a.match(new RegExp(`^${c}$`));return o||(t=!1,o=a.match(new RegExp(`^${c}`))),o?(r.forEach((s,h)=>n[s]=o[h+1]),{exact:t,params:n,part:o[0].slice(0,-1)}):null}function x(e,a,r){if(r===\"\")return e;if(r[0]===\"/\")return r;let n=o=>o.split(\"/\").filter(s=>s!==\"\"),t=n(e),c=a?n(a):[];return\"/\"+c.map((o,s)=>t[s]).join(\"/\")+\"/\"+r}function m(e,a,r,n){let t=[a,\"data-\"+a].reduce((c,o)=>{let s=e.getAttribute(o);return r&&e.removeAttribute(o),s===null?c:s},!1);return!n&&t===\"\"?!0:t||n||!1}function S(e){let a=e.split(\"&\").map(r=>r.split(\"=\")).reduce((r,n)=>{let t=n[0];if(!t)return r;let c=n.length>1?n[n.length-1]:!0;return typeof c==\"string\"&&c.includes(\",\")&&(c=c.split(\",\")),r[t]===void 0?r[t]=[c]:r[t].push(c),r},{});return Object.entries(a).reduce((r,n)=>(r[n[0]]=n[1].length>1?n[1]:n[1][0],r),{})}function v(e){return Object.entries(e).map(([a,r])=>r?r===!0?a:`${a}=${Array.isArray(r)?r.join(\",\"):r}`:null).filter(a=>a).join(\"&\")}function w(e,a){return e?a+e:\"\"}function k(e){throw new Error(\"[Tinro] \"+e)}var i={HISTORY:1,HASH:2,MEMORY:3,OFF:4,run(e,a,r,n){return e===this.HISTORY?a&&a():e===this.HASH?r&&r():n&&n()},getDefault(){return!window||window.location.pathname===\"srcdoc\"?this.MEMORY:this.HISTORY}};import\"svelte/store\";var R,M,$,b=\"\",l=A();function A(){let e=i.getDefault(),a,r=o=>window.onhashchange=window.onpopstate=R=null,n=o=>a&&a(y(e)),t=o=>{o&&(e=o),r(),e!==i.OFF&&i.run(e,s=>window.onpopstate=n,s=>window.onhashchange=n)&&n()},c=o=>{let s=Object.assign(y(e),o);return s.path+w(v(s.query),\"?\")+w(s.hash,\"#\")};return{mode:t,get:o=>y(e),go(o,s){E(e,o,s),n()},start(o){a=o,t()},stop(){a=null,t(i.OFF)},set(o){this.go(c(o),!o.path)},methods(){return _(this)},base:o=>b=o}}function E(e,a,r){!r&&(M=$);let n=t=>history[`${r?\"replace\":\"push\"}State`]({},\"\",t);i.run(e,t=>n(b+a),t=>n(`#${a}`),t=>R=a)}function y(e){let a=window.location,r=i.run(e,t=>(b?a.pathname.replace(b,\"\"):a.pathname)+a.search+a.hash,t=>String(a.hash.slice(1)||\"/\"),t=>R||\"/\"),n=r.match(/^([^?#]+)(?:\\?([^#]+))?(?:\\#(.+))?$/);return $=r,{url:r,from:M,path:n[1]||\"\",query:S(n[2]||\"\"),hash:n[3]||\"\"}}function _(e){let a=()=>e.get().query,r=o=>e.set({query:o}),n=o=>r(o(a())),t=()=>e.get().hash,c=o=>e.set({hash:o});return{hash:{get:t,set:c,clear:()=>c(\"\")},query:{replace:r,clear:()=>r(\"\"),get(o){return o?a()[o]:a()},set(o,s){n(h=>(h[o]=s,h))},delete(o){n(s=>(s[o]&&delete s[o],s))}}}}var f=T();function T(){let{subscribe:e}=F(l.get(),a=>{l.start(a);let r=P(l.go);return()=>{l.stop(),r()}});return{subscribe:e,goto:l.go,params:Q,meta:O,useHashNavigation:a=>l.mode(a?i.HASH:i.HISTORY),mode:{hash:()=>l.mode(i.HASH),history:()=>l.mode(i.HISTORY),memory:()=>l.mode(i.MEMORY)},base:l.base,location:l.methods()}}function Y(e){let a,r,n,t,c=()=>{a=m(e,\"href\").replace(/^\\/#|[?#].*$|\\/$/g,\"\"),r=m(e,\"exact\",!0),n=m(e,\"active-class\",!0,\"active\")},o=()=>{let s=d(a,t);s&&(s.exact&&r||!r)?e.classList.add(n):e.classList.remove(n)};return c(),{destroy:f.subscribe(s=>{t=s.path,o()}),update:()=>{c(),o()}}}function P(e){let a=r=>{let n=r.target.closest(\"a[href]\"),t=n&&m(n,\"target\",!1,\"_self\"),c=n&&m(n,\"tinro-ignore\"),o=r.ctrlKey||r.metaKey||r.altKey||r.shiftKey;if(t==\"_self\"&&!c&&!o&&n){let s=n.getAttribute(\"href\").replace(/^\\/#/,\"\");/^\\/\\/|^[a-zA-Z]+:/.test(s)||(r.preventDefault(),e(s.startsWith(\"/\")?s:n.href.replace(window.location.origin,\"\")))}};return addEventListener(\"click\",a),()=>removeEventListener(\"click\",a)}function Q(){return C(\"tinro\").meta.params}import{hasContext as U,getContext as H,setContext as W,onMount as z,tick as D}from\"svelte\";import{writable as I}from\"svelte/store\";var g=\"tinro\",K=j({pattern:\"\",matched:!0});function q(e){let a=H(g)||K;(a.exact||a.fallback)&&k(`${e.fallback?\"<Route fallback>\":`<Route path=\"${e.path}\">`}  can't be inside ${a.fallback?\"<Route fallback>\":`<Route path=\"${a.path||\"/\"}\"> with exact path`}`);let r=e.fallback?\"fallbacks\":\"childs\",n=I({}),t=j({fallback:e.fallback,parent:a,update(c){t.exact=!c.path.endsWith(\"/*\"),t.pattern=p(`${t.parent.pattern||\"\"}${c.path}`),t.redirect=c.redirect,t.firstmatch=c.firstmatch,t.breadcrumb=c.breadcrumb,t.match()},register:()=>(t.parent[r].add(t),async()=>{t.parent[r].delete(t),t.parent.activeChilds.delete(t),t.router.un&&t.router.un(),t.parent.match()}),show:()=>{e.onShow(),!t.fallback&&t.parent.activeChilds.add(t)},hide:()=>{e.onHide(),t.parent.activeChilds.delete(t)},match:async()=>{t.matched=!1;let{path:c,url:o,from:s,query:h}=t.router.location,u=d(t.pattern,c);if(!t.fallback&&u&&t.redirect&&(!t.exact||t.exact&&u.exact)){let L=x(c,t.parent.pattern,t.redirect);return f.goto(L,!0)}t.meta=u&&{from:s,url:o,query:h,match:u.part,pattern:t.pattern,breadcrumbs:t.parent.meta&&t.parent.meta.breadcrumbs.slice()||[],params:u.params,subscribe:n.subscribe},t.breadcrumb&&t.meta&&t.meta.breadcrumbs.push({name:t.breadcrumb,path:u.part}),n.set(t.meta),u&&!t.fallback&&(!t.exact||t.exact&&u.exact)&&(!t.parent.firstmatch||!t.parent.matched)?(e.onMeta(t.meta),t.parent.matched=!0,t.show()):t.hide(),u&&t.showFallbacks()}});return W(g,t),z(()=>t.register()),t}function O(){return U(g)?H(g).meta:k(\"meta() function must be run inside any `<Route>` child component only\")}function j(e){let a={router:{},exact:!1,pattern:null,meta:null,parent:null,fallback:!1,redirect:!1,firstmatch:!1,breadcrumb:null,matched:!1,childs:new Set,activeChilds:new Set,fallbacks:new Set,async showFallbacks(){if(!this.fallback&&(await D(),this.childs.size>0&&this.activeChilds.size==0||this.childs.size==0&&this.fallbacks.size>0)){let r=this;for(;r.fallbacks.size==0;)if(r=r.parent,!r)return;r&&r.fallbacks.forEach(n=>{if(n.redirect){let t=x(\"/\",n.parent.pattern,n.redirect);f.goto(t,!0)}else n.show()})}},start(){this.router.un||(this.router.un=f.subscribe(r=>{this.router.location=r,this.pattern!==null&&this.match()}))},match(){this.showFallbacks()}};return Object.assign(a,e),a.start(),a}export{Y as active,q as createRouteObject,O as meta,f as router};\n","<script>\n\n    import {createRouteObject} from './../dist/tinro_lib';\n\n    export let path = '/*';\n    export let fallback = false;\n    export let redirect = false;\n    export let firstmatch = false;\n    export let breadcrumb = null;\n\n    let showContent = false;\n    let params = {}; /* DEPRECATED */\n    let meta = {};\n\n    const route = createRouteObject({\n        fallback,\n        onShow(){showContent=true},\n        onHide(){showContent=false},\n        onMeta(newmeta){\n            meta=newmeta;\n            params = meta.params /* DEPRECATED */\n        }\n    });\n\n    $: route.update({\n        path,\n        redirect,\n        firstmatch,\n        breadcrumb,\n    });\n</script>\n\n{#if showContent}\n    <slot {params} {meta}></slot>\n{/if}","<script>\r\n\timport supa from \"../supa\";\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Login</title>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<nav>\r\n\t\t<h1>OkenCoin</h1>\r\n\t</nav>\r\n\t<div>\r\n\t\t<h1>Login / Signin</h1>\r\n\t\t<button on:click={() => {\r\n\t\t\tsupa.signInDiscord();\r\n\t\t}}>Sign In with discord</button>\r\n\t</div>\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\tbackground-color: var(--background-el1);\r\n\t\tcolor: white;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\r\n\t\tdisplay: grid;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tgrid-template-rows: 5% 95%;\r\n\t}\r\n\r\n\tmain nav {\r\n\t\ttext-align: center;\r\n\t}\r\n\r\n\tmain div {\r\n\t\tdisplay: grid;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\ttext-align: center;\r\n\t\tpadding: 10px;\r\n\r\n\t\tbackground-color: var(--background-el2);\r\n\t\tfilter: drop-shadow(0 0 0.55rem var(--background-shadow));\r\n\t}\r\n\r\n\tmain div button {\r\n\t\tbackground-color: #5865F2;\r\n\t\tborder: none;\r\n\t\tcolor: white;\r\n\t\ttext-align: center;\r\n\t\ttext-decoration: none;\r\n\t\tdisplay: inline-block;\r\n\t\tborder-radius: 10px;\r\n\t}\r\n\r\n\tmain div button:hover {\r\n\t\tbackground-color: #747ffa;\r\n\t}\r\n\r\n\tmain div h1 {\r\n\t\ttop: 0px;\r\n\t\tpadding: 40px;\r\n\t\tpadding-top: 0px;\r\n\t}\r\n</style>","<script>\r\n\tconst validateEmail = (email) => {\r\n\t\treturn String(email)\r\n\t\t\t.toLowerCase()\r\n\t\t\t.match(\r\n\t\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n\t\t);\r\n\t};\r\n\t\r\n\timport supa from \"../supa\";\r\n\r\n\tlet email = \"\"\r\n\tlet coins = \"\"\r\n\r\n\tlet user = supa.user;\r\n\tfunction update_data() {\r\n\t\tsupa.get($user.id).then((data) => {\r\n\t\t\temail = data.email;\r\n\t\t\tcoins = data.okencoin;\r\n\t\t});\r\n\t}\r\n\tupdate_data();\r\n\t\r\n\tlet reciver = \"\";\r\n\tlet amount = \"\";\r\n\tlet errorMessage = \"\";\r\n\tasync function sendpayment() {\r\n\t\tlet amount_num = Math.round(parseInt(amount))\r\n\t\tif (!amount_num || amount_num < 1 || !validateEmail(reciver)) {\r\n\t\t\terrorMessage = \"Invalid Amount or email!\"\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\ttry {\r\n\t\t\tlet reciverData = await supa.getbyemail(reciver);\r\n\t\t\tlet reciverBalance = reciverData.okencoin + amount_num;\r\n\r\n\t\t\tlet senderData = await supa.get($user.id);\r\n\t\t\tlet senderBalance = senderData.okencoin - amount_num;\r\n\t\t\tif (senderBalance < 0) {\r\n\t\t\t\terrorMessage = \"You don't have enought Money!\"\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (reciverData.id == senderData.id){\r\n\t\t\t\terrorMessage = \"You can't send yourself money!\";\r\n\t\t\t}\r\n\r\n\t\t\tconst { d1 } = await supa.supabase\r\n\t\t\t\t.from(\"profiles\")\r\n\t\t\t\t.update({okencoin: reciverBalance})\r\n\t\t\t\t.match({email: reciver})\r\n\t\t\tconst { d2 } = await supa.supabase\r\n\t\t\t\t.from(\"profiles\")\r\n\t\t\t\t.update({okencoin: senderBalance})\r\n\t\t\t\t.match({id: $user.id})\r\n\r\n\t\t\tconst { hist } = await supa.supabase\r\n\t\t\t\t.from('transactions')\r\n\t\t\t\t.update(\r\n\t\t\t\t\t{ sender: senderData.id, reciver: reciverData.id, amount:amount }\r\n\t\t\t\t)\r\n\t\t\t\t.match({id: 1});\r\n\r\n\t\t\tcoins = senderBalance.toString()\r\n\t\t} catch (ex) {\r\n\t\t\tconsole.log(ex);\r\n\t\t\terrorMessage = \"There was an error Getting Your Data Try again!\"\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<svelte:head>\r\n  <title>Dashbord</title>\r\n</svelte:head>\r\n\r\n<main>\r\n\t<div class=\"topnav\">\r\n\t\t<h1>OkenCoin</h1>\r\n\t\t<h4>{email}</h4>\r\n\t\t<button on:click={() => {\r\n\t\t\tsupa.signOut();\r\n\t\t}}>Sign Out</button>\r\n\t</div>\r\n\r\n\t<div class=\"interface\">\r\n\t\t<div class=\"stats\">\r\n\t\t\t<h1>{coins}</h1>\r\n\t\t\t<h2> OkenCoins</h2>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"controlls\">\r\n\t\t\t<h1>Account</h1>\r\n\t\t\t<h3>Send</h3>\r\n\r\n\t\t\t<p>Reciver Email</p>\r\n\t\t\t<input type=\"email\" bind:value={reciver}>\r\n\t\t\t<p>Amout</p>\r\n\t\t\t<input type=\"number\" bind:value={amount}>\r\n\t\t\t<button on:click={() => {sendpayment()}}>Send</button>\r\n\t\t\t<p class=\"err\">{errorMessage}</p>\r\n\t\t</div>\r\n\t</div>\r\n</main>\r\n\r\n<style>\r\n\tmain {\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\tbackground-color: var(--background-el1);\r\n\t\tcolor: white;\r\n\t}\r\n\t.err {\r\n\t\tcolor: red;\r\n\t}\r\n\r\n\t.interface {\r\n\t\twidth: 100%;\r\n\t\theight: 500px;\r\n\t\tdisplay: grid;\r\n\t\tgrid-template-columns: 50% 50%;\r\n\t\talign-items: center;\r\n\t\tjustify-items: center;\r\n\t}\r\n\r\n\t.controlls {\r\n\t\tpadding: 20px;\r\n\t\tborder-radius: 20px;\r\n\t\tfilter: drop-shadow(0 0 0.55rem var(--background-shadow));\r\n\t\theight: fit-content;\r\n\t\tbackground-color: var(--background-el2);\r\n\t}\r\n\t.controlls button {\r\n\t\tbackground: none;\r\n\t\tcolor: inherit;\r\n\t\tborder: thick;\r\n\t\tpadding: 0;\r\n\t\tfont: inherit;\r\n\t\tcursor: pointer;\r\n\t\toutline: inherit;\r\n\t}\r\n\r\n\t.topnav {\r\n\t\tbackground-color: var(--background-el2);\r\n\t\theight: auto;\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.topnav h1 {\r\n\t\tfloat: left;\r\n\t\tmargin: 10px;\r\n\t}\r\n\t.topnav h4 {\r\n\t\tfloat: right;\r\n\t\tmargin: 20px;\r\n\t\tmargin-left: auto;\r\n\t}\r\n\t.topnav button {\r\n\t\torder: 1;\r\n\t\tmargin: 10px;\r\n\t\tbackground-color: #d31900;\r\n\t\tborder: none;\r\n\t\tcolor: white;\r\n\t\ttext-align: center;\r\n\t\ttext-decoration: none;\r\n\t\tdisplay: inline-block;\r\n\t\tfont-weight:bold;\r\n\t\tborder-radius: 5px;\r\n\t}\r\n\t.topnav button:hover {\r\n\t\tbackground-color: #e6412c;\r\n\t}\r\n\t.stats {\r\n\t\tfilter: drop-shadow(0 0 0.2rem white);\r\n\t\tdisplay: flex;\r\n\t}\r\n\t.stats h2 {\r\n\t\tfont-size: 20px;\r\n\t\tmargin-top: 13px;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n</style>","<script>\n\timport supa from \"./supa.js\";\n\timport {Route} from 'tinro';\n\t\n\timport Login from './pages/Login.svelte'\n\timport Interface from \"./pages/Interface.svelte\";\n\n\tlet user = supa.user;\n</script>\n\n{#if $user}\n\t<Route path=\"/\">\n\t\t<Interface/>\n\t</Route>\n{:else}\n\t<Route path=\"/\">\n\t\t<Login/>\n\t</Route>\n{/if}\n\n<Route fallback>\n\tEtwas ist schief gelaufen!\n</Route>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","current_component","set_current_component","get_current_component","Error","getContext","key","context","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","schedule_update","then","flush","add_render_callback","flushing","seen_callbacks","Set","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","rest","fill","make_dirty","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","DEFAULT_HEADERS","global","self","__self__","F","fetch","DOMException","prototype","exports","support","Symbol","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","toString","call","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","Headers","headers","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","reject","fileReaderReady","reader","onload","result","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","readAsText","chars","fromCharCode","join","readArrayBufferAsText","formData","decode","json","JSON","parse","oldValue","hasOwnProperty","thisArg","values","entries","methods","Request","method","upcased","url","credentials","mode","signal","toUpperCase","referrer","form","trim","split","bytes","replace","decodeURIComponent","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","constructor","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","send","polyfill","defineProperty","ponyfill","module","__awaiter","_arguments","P","generator","fulfilled","step","apply","_getErrorMessage","msg","error_description","stringify","_handleRequest","fetcher","crossFetch","params","_getRequestParams","noResolveJson","catch","handleError","post","STORAGE_KEY","COOKIE_OPTIONS","lifetime","domain","path","sameSite","serializeCookie","cookie","secure","_a","_b","_c","val","opt","enc","encodeURIComponent","fieldContentRegExp","str","maxAge","isNaN","isFinite","Math","floor","expires","toUTCString","httpOnly","serialize","Date","now","setCookies","req","res","cookies","strCookies","host","endsWith","isSecureEnvironment","previousCookies","getHeader","setHeader","setCookie","expiresAt","expiresIn","round","isBrowser","window","getParameterByName","href","results","RegExp","exec","GoTrueApi","cookieOptions","createUser","attributes","listUsers","users","signUpWithEmail","email","password","queryString","redirectTo","session","expires_in","expires_at","signInWithEmail","signUpWithPhone","phone","signInWithPhone","sendMagicLinkEmail","sendMobileOTP","verifyMobileOTP","token","redirect_to","inviteUserByEmail","resetPasswordForEmail","_createRequestHeaders","jwt","signOut","getUrlForProvider","provider","urlParams","scopes","getUser","user","updateUser","put","deleteUser","uid","remove","refreshAccessToken","refreshToken","refresh_token","setAuthCookie","end","access_token","deleteCookie","getUserByCookie","generateLink","globalThis","configurable","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","autoRefreshToken","persistSession","detectSessionInUrl","multiTab","SupabaseAuthClient","stateChangeEmitters","settings","currentUser","currentSession","localStorage","api","_recoverSession","_recoverAndRefresh","_listenForMultiTabEvents","getSessionFromUrl","storeSession","console","signUp","_removeSession","_saveSession","_notifyAllSubscribers","id","signIn","_handleEmailSignIn","_handlePhoneSignIn","_callRefreshToken","_handleProviderSignIn","verifyOTP","refreshSession","setSession","setAuth","token_type","provider_token","parseInt","recoveryMode","hash","accessToken","onAuthStateChange","random","subscription","confirmed_at","email_confirmed_at","phone_confirmed_at","getItem","log","x","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","setItem","refreshTokenTimer","clearTimeout","removeItem","setTimeout","unref","newSession","newValue","super","PostgrestBuilder","builder","shouldThrowOnError","throwOnError","onfulfilled","onrejected","schema","includes","count","isReturnMinimal","countHeader","match","contentRange","fetchError","details","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","searchParams","order","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","_this","csv","PostgrestFilterBuilder","arguments","cs","contains","cd","containedBy","sl","rangeLt","sr","rangeGt","nxl","rangeGte","nxr","rangeLte","adj","rangeAdjacent","ov","overlaps","not","operator","or","filters","eq","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","cleanedValues","s","textSearch","query","config","typePart","configPart","fts","plfts","phfts","wfts","PostgrestQueryBuilder","URL","head","upsert","onConflict","returning","prefersHeaders","reduce","acc","concat","uniqueColumns","ignoreDuplicates","PostgrestRpcBuilder","rpc","PostgrestClient","auth","table","PostgresTypes","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","Number","lastIdx","closeBrace","arr","valTrim","_","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","Timer","timerCalc","timer","tries","reset","scheduleTimeout","Push","channel","payload","timeout","sent","timeoutTimer","ref","receivedResp","recHooks","refEvent","resend","_cancelRefEvent","_hasReceived","startTimeout","socket","topic","receive","makeRef","replyEventName","on","_cancelTimeout","_matchReceive","trigger","destroy","off","h","RealtimeSubscription","bindings","state","closed","joinedOnce","pushBuffer","joinPush","rejoinTimer","rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","onClose","joinRef","onError","reason","isLeaving","isClosed","errored","isJoining","reply","isConnected","rejoin","close","bind","canPush","isJoined","leaving","leavePush","leave","onMessage","isMember","sendJoin","joining","handledPayload","isErrored","_globalThis","naiveFallback","__global__","require$$0","NativeWebSocket","WebSocket","MozWebSocket","W3CWebSocket","uri","protocols","prop","w3cwebsocket","version","websocket_version","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","RealtimeClient","endPoint","channels","transport","heartbeatIntervalMs","longpollerTimeout","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","websocket","encode","reconnectTimer","disconnect","connect","endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","onConnMessage","onclose","_onConnClose","_reject","clearInterval","kind","onOpen","connectionState","connecting","closing","chanParams","chan","rawMessage","_resetHeartbeat","_appendParams","vsn","newRef","_flushSendBuffer","_triggerChanError","prefix","setInterval","_sendHeartbeat","SupabaseRealtimeClient","tableName","userToken","getPayloadRecords","records","new","old","Transformers.convertChangeData","old_record","enrichedPayload","commit_timestamp","eventType","SupabaseQueryBuilder","realtime","_subscription","_realtime","parameters","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","fileBody","fileOptions","_path","_getFinalPath","Key","upload","move","fromPath","toPath","sourceKey","destinationKey","createSignedUrl","signedURL","download","getPublicUrl","publicURL","paths","prefixes","list","SupabaseStorageClient","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","SupabaseClient","supabaseUrl","supabaseKey","restUrl","realtimeUrl","authUrl","storageUrl","_initSupabaseAuthClient","_initRealtimeClient","storage","_getAuthHeaders","_initPostgRESTClient","removeSubscription","_closeSubscription","openSubscriptions","getSubscriptions","_closeChannel","authHeaders","Authorization","apikey","authBearer","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","supabase","createClient","userStore","async","signInDiscord","startsWith","n","t","S","w","R","M","$","HISTORY","HASH","MEMORY","OFF","getDefault","pathname","y","onhashchange","onpopstate","v","go","history","E","base","A","search","f","closest","ctrlKey","metaKey","altKey","shiftKey","preventDefault","origin","goto","Q","meta","O","useHashNavigation","memory","T","C","g","K","j","matched","q","H","exact","fallback","I","parent","firstmatch","breadcrumb","register","activeChilds","router","un","show","onShow","hide","onHide","u","part","L","breadcrumbs","onMeta","showFallbacks","z","childs","fallbacks","slot_ctx","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","lets","merged","len","max","showContent","route","createRouteObject","newmeta","supa","coins","$user","okencoin","reciver","amount","errorMessage","sendpayment","amount_num","validateEmail","reciverData","getbyemail","reciverBalance","senderData","senderBalance","d1","d2","hist","sender","ex"],"mappings":"gCAAA,SAASA,KAgBT,SAASC,EAAIC,GACT,OAAOA,IAEX,SAASC,IACL,OAAOC,OAAOC,OAAO,MAEzB,SAASC,EAAQC,GACbA,EAAIC,QAAQP,GAEhB,SAASQ,EAAYC,GACjB,MAAwB,mBAAVA,EAElB,SAASC,EAAeC,EAAGC,GACvB,OAAOD,GAAKA,EAAIC,GAAKA,EAAID,IAAMC,GAAOD,GAAkB,iBAANA,GAAgC,mBAANA,EAiChF,SAASE,EAAoBC,EAAWC,EAAOC,GAC3CF,EAAUG,GAAGC,WAAWC,KAb5B,SAAmBJ,KAAUK,GACzB,GAAa,MAATL,EACA,OAAOhB,EAEX,MAAMsB,EAAQN,EAAMO,aAAaF,GACjC,OAAOC,EAAME,YAAc,IAAMF,EAAME,cAAgBF,EAQ1BC,CAAUP,EAAOC,IAQlD,SAASQ,EAAiBC,EAAYC,EAAKC,EAAS1B,GAChD,OAAOwB,EAAW,IAAMxB,EAtE5B,SAAgB2B,EAAKC,GAEjB,IAAK,MAAMC,KAAKD,EACZD,EAAIE,GAAKD,EAAIC,GACjB,OAAOF,EAmEDG,CAAOJ,EAAQD,IAAIM,QAASP,EAAW,GAAGxB,EAAGyB,KAC7CC,EAAQD,IAyOlB,SAASO,EAAOC,EAAQC,GACpBD,EAAOE,YAAYD,GAoDvB,SAASE,EAAOH,EAAQC,EAAMG,GAC1BJ,EAAOK,aAAaJ,EAAMG,GAAU,MAUxC,SAASE,EAAOL,GACZA,EAAKM,WAAWC,YAAYP,GAQhC,SAASQ,EAAQC,GACb,OAAOC,SAASC,cAAcF,GAoBlC,SAASG,EAAKC,GACV,OAAOH,SAASI,eAAeD,GAEnC,SAASE,IACL,OAAOH,EAAK,KAKhB,SAASI,EAAOhB,EAAMiB,EAAOC,EAASC,GAElC,OADAnB,EAAKoB,iBAAiBH,EAAOC,EAASC,GAC/B,IAAMnB,EAAKqB,oBAAoBJ,EAAOC,EAASC,GA8B1D,SAASG,EAAKtB,EAAMuB,EAAWC,GACd,MAATA,EACAxB,EAAKyB,gBAAgBF,GAChBvB,EAAK0B,aAAaH,KAAeC,GACtCxB,EAAK2B,aAAaJ,EAAWC,GAkDrC,SAASI,EAAUJ,GACf,MAAiB,KAAVA,EAAe,MAAQA,EAkIlC,SAASK,EAASjB,EAAMC,GACpBA,EAAO,GAAKA,EACRD,EAAKkB,YAAcjB,IACnBD,EAAKC,KAAOA,GAEpB,SAASkB,EAAgBC,EAAOR,GAC5BQ,EAAMR,MAAiB,MAATA,EAAgB,GAAKA,EA0SvC,IAAIS,EACJ,SAASC,EAAsBvD,GAC3BsD,EAAoBtD,EAExB,SAASwD,IACL,IAAKF,EACD,MAAM,IAAIG,MAAM,oDACpB,OAAOH,EA+BX,SAASI,EAAWC,GAChB,OAAOH,IAAwBrD,GAAGyD,QAAQC,IAAIF,GAmBlD,MAAMG,EAAmB,GAEnBC,EAAoB,GACpBC,EAAmB,GACnBC,EAAkB,GAClBC,EAAmBC,QAAQC,UACjC,IAAIC,GAAmB,EACvB,SAASC,IACAD,IACDA,GAAmB,EACnBH,EAAiBK,KAAKC,IAO9B,SAASC,EAAoBtF,GACzB6E,EAAiB3D,KAAKlB,GAK1B,IAAIuF,GAAW,EACf,MAAMC,EAAiB,IAAIC,IAC3B,SAASJ,IACL,IAAIE,EAAJ,CAEAA,GAAW,EACX,EAAG,CAGC,IAAK,IAAIG,EAAI,EAAGA,EAAIf,EAAiBgB,OAAQD,GAAK,EAAG,CACjD,MAAM7E,EAAY8D,EAAiBe,GACnCtB,EAAsBvD,GACtB+E,EAAO/E,EAAUG,IAIrB,IAFAoD,EAAsB,MACtBO,EAAiBgB,OAAS,EACnBf,EAAkBe,QACrBf,EAAkBiB,KAAlBjB,GAIJ,IAAK,IAAIc,EAAI,EAAGA,EAAIb,EAAiBc,OAAQD,GAAK,EAAG,CACjD,MAAM3E,EAAW8D,EAAiBa,GAC7BF,EAAeM,IAAI/E,KAEpByE,EAAeO,IAAIhF,GACnBA,KAGR8D,EAAiBc,OAAS,QACrBhB,EAAiBgB,QAC1B,KAAOb,EAAgBa,QACnBb,EAAgBe,KAAhBf,GAEJI,GAAmB,EACnBK,GAAW,EACXC,EAAeQ,SAEnB,SAASJ,EAAO5E,GACZ,GAAoB,OAAhBA,EAAGiF,SAAmB,CACtBjF,EAAG4E,SACHxF,EAAQY,EAAGkF,eACX,MAAMC,EAAQnF,EAAGmF,MACjBnF,EAAGmF,MAAQ,EAAE,GACbnF,EAAGiF,UAAYjF,EAAGiF,SAASG,EAAEpF,EAAGS,IAAK0E,GACrCnF,EAAGqF,aAAa/F,QAAQgF,IAiBhC,MAAMgB,EAAW,IAAIb,IACrB,IAAIc,EACJ,SAASC,IACLD,EAAS,CACLE,EAAG,EACHC,EAAG,GACHN,EAAGG,GAGX,SAASI,IACAJ,EAAOE,GACRrG,EAAQmG,EAAOG,GAEnBH,EAASA,EAAOH,EAEpB,SAASQ,EAAcC,EAAOC,GACtBD,GAASA,EAAMnB,IACfY,EAASS,OAAOF,GAChBA,EAAMnB,EAAEoB,IAGhB,SAASE,EAAeH,EAAOC,EAAOvE,EAAQxB,GAC1C,GAAI8F,GAASA,EAAMI,EAAG,CAClB,GAAIX,EAASR,IAAIe,GACb,OACJP,EAASP,IAAIc,GACbN,EAAOG,EAAExF,MAAK,KACVoF,EAASS,OAAOF,GACZ9F,IACIwB,GACAsE,EAAMK,EAAE,GACZnG,QAGR8F,EAAMI,EAAEH,IAkmBhB,SAASK,EAAiBN,GACtBA,GAASA,EAAMH,IAKnB,SAASU,EAAgBvG,EAAWoB,EAAQI,EAAQgF,GAChD,MAAMpB,SAAEA,EAAQqB,SAAEA,EAAQrG,WAAEA,EAAUoF,aAAEA,GAAiBxF,EAAUG,GACnEiF,GAAYA,EAASsB,EAAEtF,EAAQI,GAC1BgF,GAED/B,GAAoB,KAChB,MAAMkC,EAAiBF,EAASG,IAAI1H,GAAK2H,OAAOnH,GAC5CU,EACAA,EAAWC,QAAQsG,GAKnBpH,EAAQoH,GAEZ3G,EAAUG,GAAGsG,SAAW,MAGhCjB,EAAa/F,QAAQgF,GAEzB,SAASqC,EAAkB9G,EAAW+G,GAClC,MAAM5G,EAAKH,EAAUG,GACD,OAAhBA,EAAGiF,WACH7F,EAAQY,EAAGC,YACXD,EAAGiF,UAAYjF,EAAGiF,SAASiB,EAAEU,GAG7B5G,EAAGC,WAAaD,EAAGiF,SAAW,KAC9BjF,EAAGS,IAAM,IAWjB,SAASoG,EAAKhH,EAAWwC,EAASyE,EAAUC,EAAiBC,EAAWC,EAAOC,EAAe/B,EAAQ,EAAE,IACpG,MAAMgC,EAAmBhE,EACzBC,EAAsBvD,GACtB,MAAMG,EAAKH,EAAUG,GAAK,CACtBiF,SAAU,KACVxE,IAAK,KAELwG,MAAAA,EACArC,OAAQ9F,EACRkI,UAAAA,EACAI,MAAOnI,IAEPqH,SAAU,GACVrG,WAAY,GACZoH,cAAe,GACfnC,cAAe,GACfG,aAAc,GACd5B,QAAS,IAAI6D,IAAIjF,EAAQoB,UAAY0D,EAAmBA,EAAiBnH,GAAGyD,QAAU,KAEtFtD,UAAWlB,IACXkG,MAAAA,EACAoC,YAAY,EACZC,KAAMnF,EAAQpB,QAAUkG,EAAiBnH,GAAGwH,MAEhDN,GAAiBA,EAAclH,EAAGwH,MAClC,IAAIC,GAAQ,EAkBZ,GAjBAzH,EAAGS,IAAMqG,EACHA,EAASjH,EAAWwC,EAAQ4E,OAAS,IAAI,CAACvC,EAAGgD,KAAQC,KACnD,MAAMjF,EAAQiF,EAAKhD,OAASgD,EAAK,GAAKD,EAOtC,OANI1H,EAAGS,KAAOuG,EAAUhH,EAAGS,IAAIiE,GAAI1E,EAAGS,IAAIiE,GAAKhC,MACtC1C,EAAGuH,YAAcvH,EAAGoH,MAAM1C,IAC3B1E,EAAGoH,MAAM1C,GAAGhC,GACZ+E,GAxCpB,SAAoB5H,EAAW6E,IACI,IAA3B7E,EAAUG,GAAGmF,MAAM,KACnBxB,EAAiBzD,KAAKL,GACtBsE,IACAtE,EAAUG,GAAGmF,MAAMyC,KAAK,IAE5B/H,EAAUG,GAAGmF,MAAOT,EAAI,GAAM,IAAO,GAAMA,EAAI,GAmC/BmD,CAAWhI,EAAW6E,IAEvBgD,KAET,GACN1H,EAAG4E,SACH6C,GAAQ,EACRrI,EAAQY,EAAGkF,eAEXlF,EAAGiF,WAAW8B,GAAkBA,EAAgB/G,EAAGS,KAC/C4B,EAAQpB,OAAQ,CAChB,GAAIoB,EAAQyF,QAAS,CAEjB,MAAMC,EAvxClB,SAAkBrG,GACd,OAAOsG,MAAMC,KAAKvG,EAAQwG,YAsxCJC,CAAS9F,EAAQpB,QAE/BjB,EAAGiF,UAAYjF,EAAGiF,SAASmD,EAAEL,GAC7BA,EAAMzI,QAAQiC,QAIdvB,EAAGiF,UAAYjF,EAAGiF,SAASS,IAE3BrD,EAAQgG,OACRzC,EAAc/F,EAAUG,GAAGiF,UAC/BmB,EAAgBvG,EAAWwC,EAAQpB,OAAQoB,EAAQhB,OAAQgB,EAAQgE,eAEnEhC,IAEJjB,EAAsB+D,GAkD1B,MAAMmB,EACFC,WACI5B,EAAkB6B,KAAM,GACxBA,KAAKD,SAAWzJ,EAEpB2J,IAAIC,EAAM3I,GACN,MAAMI,EAAaqI,KAAKxI,GAAGG,UAAUuI,KAAUF,KAAKxI,GAAGG,UAAUuI,GAAQ,IAEzE,OADAvI,EAAUD,KAAKH,GACR,KACH,MAAM4I,EAAQxI,EAAUyI,QAAQ7I,IACjB,IAAX4I,GACAxI,EAAU0I,OAAOF,EAAO,IAGpCG,KAAKC,GAtzDT,IAAkBC,EAuzDNR,KAAKS,QAvzDCD,EAuzDkBD,EAtzDG,IAA5B7J,OAAOgK,KAAKF,GAAKrE,UAuzDhB6D,KAAKxI,GAAGuH,YAAa,EACrBiB,KAAKS,MAAMF,GACXP,KAAKxI,GAAGuH,YAAa,ICn2D1B,MCCM4B,EAAkB,CAAE,gBAAiB,0SCFlD,IAAIC,EAAyB,oBAATC,KAAuBA,KAAOb,EAC9Cc,EAAW,WACf,SAASC,IACTf,KAAKgB,OAAQ,EACbhB,KAAKiB,aAAeL,EAAOK,aAG3B,OADAF,EAAEG,UAAYN,EACP,IAAIG,EANI,IAQf,SAAUF,aAEkBM,GAE1B,IAAIC,EACY,oBAAqBP,EADjCO,EAEQ,WAAYP,GAAQ,aAAcQ,OAF1CD,EAIA,eAAgBP,GAChB,SAAUA,GACV,WACE,IAEE,OADA,IAAIS,MACG,EACP,MAAOC,GACP,OAAO,GALX,GANAH,EAcQ,aAAcP,EAdtBO,EAeW,gBAAiBP,EAOhC,GAAIO,EACF,IAAII,EAAc,CAChB,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGEC,EACFC,YAAYC,QACZ,SAASnB,GACP,OAAOA,GAAOgB,EAAYpB,QAAQ1J,OAAOwK,UAAUU,SAASC,KAAKrB,KAAS,GAIhF,SAASsB,EAAc3I,GAIrB,GAHoB,iBAATA,IACTA,EAAO4I,OAAO5I,IAEZ,4BAA4B6I,KAAK7I,GACnC,MAAM,IAAI8I,UAAU,0CAEtB,OAAO9I,EAAK+I,cAGd,SAASC,EAAejI,GAItB,MAHqB,iBAAVA,IACTA,EAAQ6H,OAAO7H,IAEVA,EAIT,SAASkI,EAAYC,GACnB,IAAIC,EAAW,CACbC,KAAM,WACJ,IAAIrI,EAAQmI,EAAMG,QAClB,MAAO,CAACC,UAAgBC,IAAVxI,EAAqBA,MAAOA,KAU9C,OANIkH,IACFkB,EAASjB,OAAOiB,UAAY,WAC1B,OAAOA,IAIJA,EAGT,SAASK,EAAQC,GACf5C,KAAK/B,IAAM,GAEP2E,aAAmBD,EACrBC,EAAQ9L,SAAQ,SAASoD,EAAOf,GAC9B6G,KAAKxH,OAAOW,EAAMe,KACjB8F,MACMR,MAAMqD,QAAQD,GACvBA,EAAQ9L,SAAQ,SAASgM,GACvB9C,KAAKxH,OAAOsK,EAAO,GAAIA,EAAO,MAC7B9C,MACM4C,GACTlM,OAAOqM,oBAAoBH,GAAS9L,SAAQ,SAASqC,GACnD6G,KAAKxH,OAAOW,EAAMyJ,EAAQzJ,MACzB6G,MAgEP,SAASgD,EAASC,GAChB,GAAIA,EAAKC,SACP,OAAO1H,QAAQ2H,OAAO,IAAIlB,UAAU,iBAEtCgB,EAAKC,UAAW,EAGlB,SAASE,EAAgBC,GACvB,OAAO,IAAI7H,SAAQ,SAASC,EAAS0H,GACnCE,EAAOC,OAAS,WACd7H,EAAQ4H,EAAOE,SAEjBF,EAAOG,QAAU,WACfL,EAAOE,EAAOI,WAKpB,SAASC,EAAsBC,GAC7B,IAAIN,EAAS,IAAIO,WACbC,EAAUT,EAAgBC,GAE9B,OADAA,EAAOS,kBAAkBH,GAClBE,EAoBT,SAASE,EAAYC,GACnB,GAAIA,EAAIzL,MACN,OAAOyL,EAAIzL,MAAM,GAEjB,IAAI0L,EAAO,IAAIC,WAAWF,EAAIG,YAE9B,OADAF,EAAKG,IAAI,IAAIF,WAAWF,IACjBC,EAAKI,OAIhB,SAASC,IA0FP,OAzFAtE,KAAKkD,UAAW,EAEhBlD,KAAKuE,UAAY,SAAStB,GAhM5B,IAAoBzC,EAiMhBR,KAAKwE,UAAYvB,EACZA,EAEsB,iBAATA,EAChBjD,KAAKyE,UAAYxB,EACR7B,GAAgBE,KAAKJ,UAAUwD,cAAczB,GACtDjD,KAAK2E,UAAY1B,EACR7B,GAAoBwD,SAAS1D,UAAUwD,cAAczB,GAC9DjD,KAAK6E,cAAgB5B,EACZ7B,GAAwB0D,gBAAgB5D,UAAUwD,cAAczB,GACzEjD,KAAKyE,UAAYxB,EAAKrB,WACbR,GAAuBA,IA5MlBZ,EA4M6CyC,IA3MjD8B,SAAS7D,UAAUwD,cAAclE,IA4M3CR,KAAKgF,iBAAmBjB,EAAYd,EAAKoB,QAEzCrE,KAAKwE,UAAY,IAAIlD,KAAK,CAACtB,KAAKgF,oBACvB5D,IAAwBM,YAAYR,UAAUwD,cAAczB,IAASxB,EAAkBwB,IAChGjD,KAAKgF,iBAAmBjB,EAAYd,GAEpCjD,KAAKyE,UAAYxB,EAAOvM,OAAOwK,UAAUU,SAASC,KAAKoB,GAhBvDjD,KAAKyE,UAAY,GAmBdzE,KAAK4C,QAAQ1H,IAAI,kBACA,iBAAT+H,EACTjD,KAAK4C,QAAQwB,IAAI,eAAgB,4BACxBpE,KAAK2E,WAAa3E,KAAK2E,UAAUzE,KAC1CF,KAAK4C,QAAQwB,IAAI,eAAgBpE,KAAK2E,UAAUzE,MACvCkB,GAAwB0D,gBAAgB5D,UAAUwD,cAAczB,IACzEjD,KAAK4C,QAAQwB,IAAI,eAAgB,qDAKnChD,IACFpB,KAAK2D,KAAO,WACV,IAAIsB,EAAWjC,EAAShD,MACxB,GAAIiF,EACF,OAAOA,EAGT,GAAIjF,KAAK2E,UACP,OAAOnJ,QAAQC,QAAQuE,KAAK2E,WACvB,GAAI3E,KAAKgF,iBACd,OAAOxJ,QAAQC,QAAQ,IAAI6F,KAAK,CAACtB,KAAKgF,oBACjC,GAAIhF,KAAK6E,cACd,MAAM,IAAI/J,MAAM,wCAEhB,OAAOU,QAAQC,QAAQ,IAAI6F,KAAK,CAACtB,KAAKyE,cAI1CzE,KAAKkF,YAAc,WACjB,OAAIlF,KAAKgF,iBACAhC,EAAShD,OAASxE,QAAQC,QAAQuE,KAAKgF,kBAEvChF,KAAK2D,OAAO/H,KAAK8H,KAK9B1D,KAAK1G,KAAO,WACV,IA3FoBqK,EAClBN,EACAQ,EAyFEoB,EAAWjC,EAAShD,MACxB,GAAIiF,EACF,OAAOA,EAGT,GAAIjF,KAAK2E,UACP,OAjGkBhB,EAiGI3D,KAAK2E,UAhG3BtB,EAAS,IAAIO,WACbC,EAAUT,EAAgBC,GAC9BA,EAAO8B,WAAWxB,GACXE,EA8FE,GAAI7D,KAAKgF,iBACd,OAAOxJ,QAAQC,QA5FrB,SAA+BuI,GAI7B,IAHA,IAAIC,EAAO,IAAIC,WAAWF,GACtBoB,EAAQ,IAAI5F,MAAMyE,EAAK9H,QAElBD,EAAI,EAAGA,EAAI+H,EAAK9H,OAAQD,IAC/BkJ,EAAMlJ,GAAK6F,OAAOsD,aAAapB,EAAK/H,IAEtC,OAAOkJ,EAAME,KAAK,IAqFSC,CAAsBvF,KAAKgF,mBAC7C,GAAIhF,KAAK6E,cACd,MAAM,IAAI/J,MAAM,wCAEhB,OAAOU,QAAQC,QAAQuE,KAAKyE,YAI5BrD,IACFpB,KAAKwF,SAAW,WACd,OAAOxF,KAAK1G,OAAOsC,KAAK6J,KAI5BzF,KAAK0F,KAAO,WACV,OAAO1F,KAAK1G,OAAOsC,KAAK+J,KAAKC,QAGxB5F,KA1MT2C,EAAQzB,UAAU1I,OAAS,SAASW,EAAMe,GACxCf,EAAO2I,EAAc3I,GACrBe,EAAQiI,EAAejI,GACvB,IAAI2L,EAAW7F,KAAK/B,IAAI9E,GACxB6G,KAAK/B,IAAI9E,GAAQ0M,EAAWA,EAAW,KAAO3L,EAAQA,GAGxDyI,EAAQzB,UAAkB,OAAI,SAAS/H,UAC9B6G,KAAK/B,IAAI6D,EAAc3I,KAGhCwJ,EAAQzB,UAAUhG,IAAM,SAAS/B,GAE/B,OADAA,EAAO2I,EAAc3I,GACd6G,KAAK1D,IAAInD,GAAQ6G,KAAK/B,IAAI9E,GAAQ,MAG3CwJ,EAAQzB,UAAU5E,IAAM,SAASnD,GAC/B,OAAO6G,KAAK/B,IAAI6H,eAAehE,EAAc3I,KAG/CwJ,EAAQzB,UAAUkD,IAAM,SAASjL,EAAMe,GACrC8F,KAAK/B,IAAI6D,EAAc3I,IAASgJ,EAAejI,IAGjDyI,EAAQzB,UAAUpK,QAAU,SAASS,EAAUwO,GAC7C,IAAK,IAAI5M,KAAQ6G,KAAK/B,IAChB+B,KAAK/B,IAAI6H,eAAe3M,IAC1B5B,EAASsK,KAAKkE,EAAS/F,KAAK/B,IAAI9E,GAAOA,EAAM6G,OAKnD2C,EAAQzB,UAAUR,KAAO,WACvB,IAAI2B,EAAQ,GAIZ,OAHArC,KAAKlJ,SAAQ,SAASoD,EAAOf,GAC3BkJ,EAAM3K,KAAKyB,MAENiJ,EAAYC,IAGrBM,EAAQzB,UAAU8E,OAAS,WACzB,IAAI3D,EAAQ,GAIZ,OAHArC,KAAKlJ,SAAQ,SAASoD,GACpBmI,EAAM3K,KAAKwC,MAENkI,EAAYC,IAGrBM,EAAQzB,UAAU+E,QAAU,WAC1B,IAAI5D,EAAQ,GAIZ,OAHArC,KAAKlJ,SAAQ,SAASoD,EAAOf,GAC3BkJ,EAAM3K,KAAK,CAACyB,EAAMe,OAEbkI,EAAYC,IAGjBjB,IACFuB,EAAQzB,UAAUG,OAAOiB,UAAYK,EAAQzB,UAAU+E,SAqJzD,IAAIC,EAAU,CAAC,SAAU,MAAO,OAAQ,UAAW,OAAQ,OAO3D,SAASC,EAAQzL,EAAOb,GAEtB,IAPuBuM,EACnBC,EAMApD,GADJpJ,EAAUA,GAAW,IACFoJ,KAEnB,GAAIvI,aAAiByL,EAAS,CAC5B,GAAIzL,EAAMwI,SACR,MAAM,IAAIjB,UAAU,gBAEtBjC,KAAKsG,IAAM5L,EAAM4L,IACjBtG,KAAKuG,YAAc7L,EAAM6L,YACpB1M,EAAQ+I,UACX5C,KAAK4C,QAAU,IAAID,EAAQjI,EAAMkI,UAEnC5C,KAAKoG,OAAS1L,EAAM0L,OACpBpG,KAAKwG,KAAO9L,EAAM8L,KAClBxG,KAAKyG,OAAS/L,EAAM+L,OACfxD,GAA2B,MAAnBvI,EAAM8J,YACjBvB,EAAOvI,EAAM8J,UACb9J,EAAMwI,UAAW,QAGnBlD,KAAKsG,IAAMvE,OAAOrH,GAYpB,GATAsF,KAAKuG,YAAc1M,EAAQ0M,aAAevG,KAAKuG,aAAe,eAC1D1M,EAAQ+I,SAAY5C,KAAK4C,UAC3B5C,KAAK4C,QAAU,IAAID,EAAQ9I,EAAQ+I,UAErC5C,KAAKoG,QAjCkBA,EAiCOvM,EAAQuM,QAAUpG,KAAKoG,QAAU,MAhC3DC,EAAUD,EAAOM,cACdR,EAAQ9F,QAAQiG,IAAY,EAAIA,EAAUD,GAgCjDpG,KAAKwG,KAAO3M,EAAQ2M,MAAQxG,KAAKwG,MAAQ,KACzCxG,KAAKyG,OAAS5M,EAAQ4M,QAAUzG,KAAKyG,OACrCzG,KAAK2G,SAAW,MAEK,QAAhB3G,KAAKoG,QAAoC,SAAhBpG,KAAKoG,SAAsBnD,EACvD,MAAM,IAAIhB,UAAU,6CAEtBjC,KAAKuE,UAAUtB,GAOjB,SAASwC,EAAOxC,GACd,IAAI2D,EAAO,IAAIhC,SAYf,OAXA3B,EACG4D,OACAC,MAAM,KACNhQ,SAAQ,SAASiQ,GAChB,GAAIA,EAAO,CACT,IAAID,EAAQC,EAAMD,MAAM,KACpB3N,EAAO2N,EAAMtE,QAAQwE,QAAQ,MAAO,KACpC9M,EAAQ4M,EAAMxB,KAAK,KAAK0B,QAAQ,MAAO,KAC3CJ,EAAKpO,OAAOyO,mBAAmB9N,GAAO8N,mBAAmB/M,QAGxD0M,EAqBT,SAASM,EAASC,EAAUtN,GACrBA,IACHA,EAAU,IAGZmG,KAAKE,KAAO,UACZF,KAAKoH,YAA4B1E,IAAnB7I,EAAQuN,OAAuB,IAAMvN,EAAQuN,OAC3DpH,KAAKqH,GAAKrH,KAAKoH,QAAU,KAAOpH,KAAKoH,OAAS,IAC9CpH,KAAKsH,WAAa,eAAgBzN,EAAUA,EAAQyN,WAAa,KACjEtH,KAAK4C,QAAU,IAAID,EAAQ9I,EAAQ+I,SACnC5C,KAAKsG,IAAMzM,EAAQyM,KAAO,GAC1BtG,KAAKuE,UAAU4C,GAjDjBhB,EAAQjF,UAAUqG,MAAQ,WACxB,OAAO,IAAIpB,EAAQnG,KAAM,CAACiD,KAAMjD,KAAKwE,aAmCvCF,EAAKzC,KAAKsE,EAAQjF,WAgBlBoD,EAAKzC,KAAKqF,EAAShG,WAEnBgG,EAAShG,UAAUqG,MAAQ,WACzB,OAAO,IAAIL,EAASlH,KAAKwE,UAAW,CAClC4C,OAAQpH,KAAKoH,OACbE,WAAYtH,KAAKsH,WACjB1E,QAAS,IAAID,EAAQ3C,KAAK4C,SAC1B0D,IAAKtG,KAAKsG,OAIdY,EAASzD,MAAQ,WACf,IAAI+D,EAAW,IAAIN,EAAS,KAAM,CAACE,OAAQ,EAAGE,WAAY,KAE1D,OADAE,EAAStH,KAAO,QACTsH,GAGT,IAAIC,EAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,KAE5CP,EAASQ,SAAW,SAASpB,EAAKc,GAChC,IAA0C,IAAtCK,EAAiBrH,QAAQgH,GAC3B,MAAM,IAAIO,WAAW,uBAGvB,OAAO,IAAIT,EAAS,KAAM,CAACE,OAAQA,EAAQxE,QAAS,CAACgF,SAAUtB,MAGjEnF,EAAQF,aAAeJ,EAAKI,aAC5B,IACE,IAAIE,EAAQF,aACZ,MAAO4G,GACP1G,EAAQF,aAAe,SAAS6G,EAAS3O,GACvC6G,KAAK8H,QAAUA,EACf9H,KAAK7G,KAAOA,EACZ,IAAIsK,EAAQ3I,MAAMgN,GAClB9H,KAAK+H,MAAQtE,EAAMsE,OAErB5G,EAAQF,aAAaC,UAAYxK,OAAOC,OAAOmE,MAAMoG,WACrDC,EAAQF,aAAaC,UAAU8G,YAAc7G,EAAQF,aAGvD,SAASD,EAAMtG,EAAO2D,GACpB,OAAO,IAAI7C,SAAQ,SAASC,EAAS0H,GACnC,IAAI8E,EAAU,IAAI9B,EAAQzL,EAAO2D,GAEjC,GAAI4J,EAAQxB,QAAUwB,EAAQxB,OAAOyB,QACnC,OAAO/E,EAAO,IAAIhC,EAAQF,aAAa,UAAW,eAGpD,IAAIkH,EAAM,IAAIC,eAEd,SAASC,IACPF,EAAIG,QAGNH,EAAI7E,OAAS,WACX,IAxFgBiF,EAChB3F,EAuFI/I,EAAU,CACZuN,OAAQe,EAAIf,OACZE,WAAYa,EAAIb,WAChB1E,SA3Fc2F,EA2FQJ,EAAIK,yBAA2B,GA1FvD5F,EAAU,IAAID,EAGQ4F,EAAWvB,QAAQ,eAAgB,KACzCF,MAAM,SAAShQ,SAAQ,SAAS2R,GAClD,IAAIC,EAAQD,EAAK3B,MAAM,KACnB9L,EAAM0N,EAAMlG,QAAQqE,OACxB,GAAI7L,EAAK,CACP,IAAId,EAAQwO,EAAMpD,KAAK,KAAKuB,OAC5BjE,EAAQpK,OAAOwC,EAAKd,OAGjB0I,IAgFH/I,EAAQyM,IAAM,gBAAiB6B,EAAMA,EAAIQ,YAAc9O,EAAQ+I,QAAQ1H,IAAI,iBAC3E,IAAI+H,EAAO,aAAckF,EAAMA,EAAIX,SAAWW,EAAIS,aAClDnN,EAAQ,IAAIyL,EAASjE,EAAMpJ,KAG7BsO,EAAI3E,QAAU,WACZL,EAAO,IAAIlB,UAAU,4BAGvBkG,EAAIU,UAAY,WACd1F,EAAO,IAAIlB,UAAU,4BAGvBkG,EAAIW,QAAU,WACZ3F,EAAO,IAAIhC,EAAQF,aAAa,UAAW,gBAG7CkH,EAAIY,KAAKd,EAAQ7B,OAAQ6B,EAAQ3B,KAAK,GAEV,YAAxB2B,EAAQ1B,YACV4B,EAAIa,iBAAkB,EACW,SAAxBf,EAAQ1B,cACjB4B,EAAIa,iBAAkB,GAGpB,iBAAkBb,GAAO/G,IAC3B+G,EAAIc,aAAe,QAGrBhB,EAAQrF,QAAQ9L,SAAQ,SAASoD,EAAOf,GACtCgP,EAAIe,iBAAiB/P,EAAMe,MAGzB+N,EAAQxB,SACVwB,EAAQxB,OAAO3M,iBAAiB,QAASuO,GAEzCF,EAAIgB,mBAAqB,WAEA,IAAnBhB,EAAIiB,YACNnB,EAAQxB,OAAO1M,oBAAoB,QAASsO,KAKlDF,EAAIkB,UAAkC,IAAtBpB,EAAQzD,UAA4B,KAAOyD,EAAQzD,cAIvExD,EAAMsI,UAAW,EAEZzI,EAAKG,QACRH,EAAKG,MAAQA,EACbH,EAAK8B,QAAUA,EACf9B,EAAKsF,QAAUA,EACftF,EAAKqG,SAAWA,GAGlB/F,EAAQwB,QAAUA,EAClBxB,EAAQgF,QAAUA,EAClBhF,EAAQ+F,SAAWA,EACnB/F,EAAQH,MAAQA,EAEhBtK,OAAO6S,eAAepI,EAAS,aAAc,CAAEjH,OAAO,KAItD,IAlhBF,CAmhBG4G,GACHA,EAASE,MAAMwI,UAAW,SAEnB1I,EAASE,MAAMsI,SAGtB,IAAIrR,EAAM6I,GACVK,EAAUlJ,EAAI+I,eACI/I,EAAI+I,MACtBG,QAAgBlJ,EAAI+I,MACpBG,UAAkBlJ,EAAI0K,QACtBxB,UAAkBlJ,EAAIkO,QACtBhF,WAAmBlJ,EAAIiP,SACvBuC,UAAiBtI,iDCziBbuI,EAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YAItE,MAAM0H,GAAoBpC,GAAQA,EAAIqC,KAAOrC,EAAIC,SAAWD,EAAIsC,mBAAqBtC,EAAIpE,OAASkC,KAAKyE,UAAUvC,GAqBjH,SAASwC,GAAeC,EAAUC,EAAYnE,EAAQE,EAAKzM,EAASoJ,GAChE,OAAOyG,EAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIxE,SAAQ,CAACC,EAAS0H,KACzBmH,EAAQhE,EAZM,EAACF,EAAQvM,EAASoJ,KACxC,MAAMuH,EAAS,CAAEpE,OAAAA,EAAQxD,SAAU/I,MAAAA,OAAyC,EAASA,EAAQ+I,UAAY,IACzG,MAAe,QAAXwD,IAGJoE,EAAO5H,QAAUlM,OAAO4B,OAAO,CAAE,eAAgB,4BAA8BuB,MAAAA,OAAyC,EAASA,EAAQ+I,SACzI4H,EAAOvH,KAAO0C,KAAKyE,UAAUnH,IAHlBuH,GASUC,CAAkBrE,EAAQvM,EAASoJ,IAC3CrH,MAAM2H,IACP,IAAKA,EAAO8D,GACR,MAAM9D,EACV,OAAI1J,MAAAA,OAAyC,EAASA,EAAQ6Q,eACnDjP,EACJ8H,EAAOmC,UAEb9J,MAAMrC,GAASkC,EAAQlC,KACvBoR,OAAOlH,GAhCJ,EAACA,EAAON,KACxB,GAA0B,mBAAfM,EAAMiC,KACb,OAAOvC,EAAOM,GAElBA,EAAMiC,OAAO9J,MAAMiM,GACR1E,EAAO,CACV2E,QAASmC,GAAiBpC,GAC1BT,QAAS3D,MAAAA,OAAqC,EAASA,EAAM2D,SAAW,SAyBlDwD,CAAYnH,EAAON,WAI9C,SAASjI,GAAIoP,EAAShE,EAAKzM,GAC9B,OAAO6P,EAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,MAAOhE,EAAKzM,MAG5C,SAASgR,GAAKP,EAAShE,EAAKrD,EAAMpJ,GACrC,OAAO6P,EAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,OAAQhE,EAAKzM,EAASoJ,MCrDtD,MCEMtC,GAAkB,CAAE,gBAAiB,oBAErCmK,GAAc,sBACdC,GAAiB,CAC1B5R,KAAM,WACN6R,SAAU,MACVC,OAAQ,GACRC,KAAM,IACNC,SAAU,OCyEd,SAASC,GAAgBC,EAAQC,GAC7B,IAAIC,EAAIC,EAAIC,EACZ,OAnFJ,SAAmBtS,EAAMuS,EAAK7R,GAC1B,MAAM8R,EAAM9R,GAAW,GACjB+R,EAAMC,mBAENC,EAAqB,wCAC3B,GAAmB,mBAARF,EACP,MAAM,IAAI3J,UAAU,4BAExB,IAAK6J,EAAmB9J,KAAK7I,GACzB,MAAM,IAAI8I,UAAU,4BAExB,MAAM/H,EAAQ0R,EAAIF,GAClB,GAAIxR,IAAU4R,EAAmB9J,KAAK9H,GAClC,MAAM,IAAI+H,UAAU,2BAExB,IAAI8J,EAAM5S,EAAO,IAAMe,EACvB,GAAI,MAAQyR,EAAIK,OAAQ,CACpB,MAAMA,EAASL,EAAIK,OAAS,EAC5B,GAAIC,MAAMD,KAAYE,SAASF,GAC3B,MAAM,IAAI/J,UAAU,4BAExB8J,GAAO,aAAeI,KAAKC,MAAMJ,GAErC,GAAIL,EAAIV,OAAQ,CACZ,IAAKa,EAAmB9J,KAAK2J,EAAIV,QAC7B,MAAM,IAAIhJ,UAAU,4BAExB8J,GAAO,YAAcJ,EAAIV,OAE7B,GAAIU,EAAIT,KAAM,CACV,IAAKY,EAAmB9J,KAAK2J,EAAIT,MAC7B,MAAM,IAAIjJ,UAAU,0BAExB8J,GAAO,UAAYJ,EAAIT,KAE3B,GAAIS,EAAIU,QAAS,CACb,GAAuC,mBAA5BV,EAAIU,QAAQC,YACnB,MAAM,IAAIrK,UAAU,6BAExB8J,GAAO,aAAeJ,EAAIU,QAAQC,cAQtC,GANIX,EAAIY,WACJR,GAAO,cAEPJ,EAAIL,SACJS,GAAO,YAEPJ,EAAIR,SAEJ,OADyC,iBAAjBQ,EAAIR,SAAwBQ,EAAIR,SAASjJ,cAAgByJ,EAAIR,UAEjF,IAAK,MACDY,GAAO,iBACP,MACJ,IAAK,SACDA,GAAO,oBACP,MACJ,IAAK,OACDA,GAAO,kBACP,MACJ,QACI,MAAM,IAAI9J,UAAU,8BAGhC,OAAO8J,EAoBAS,CAAUnB,EAAOlS,KAAMkS,EAAOnR,MAAO,CACxC8R,OAAQX,EAAOW,OACfK,QAAS,IAAII,KAAKA,KAAKC,MAAwB,IAAhBrB,EAAOW,QACtCO,UAAU,EACVjB,OAAAA,EACAJ,KAA6B,QAAtBK,EAAKF,EAAOH,YAAyB,IAAPK,EAAgBA,EAAK,IAC1DN,OAAiC,QAAxBO,EAAKH,EAAOJ,cAA2B,IAAPO,EAAgBA,EAAK,GAC9DL,SAAqC,QAA1BM,EAAKJ,EAAOF,gBAA6B,IAAPM,EAAgBA,EAAK,QAMnE,SAASkB,GAAWC,EAAKC,EAAKC,GACjC,MAAMC,EAAaD,EAAQ7O,KAAKf,GAAMkO,GAAgBlO,EA7B1D,SAA6B0P,GACzB,IAAKA,IAAQA,EAAIhK,UAAYgK,EAAIhK,QAAQoK,KACrC,MAAM,IAAIlS,MAAM,8CAEpB,MAAMkS,EAAQJ,EAAIhK,QAAQoK,KAAK5M,QAAQ,MAAQ,GAAKwM,EAAIhK,QAAQoK,KAAKlG,MAAM,KAAK,IAAO8F,EAAIhK,QAAQoK,KACnG,QAAI,CAAC,YAAa,aAAa5M,QAAQ4M,IAAS,GAAKA,EAAKC,SAAS,WAwBVC,CAAoBN,MACvEO,EAAkBN,EAAIO,UAAU,cAClCD,IACIA,aAA2B3N,MAC3BA,MAAM0B,UAAUxJ,KAAKsS,MAAM+C,EAAYI,GAEP,iBAApBA,GACZJ,EAAWrV,KAAKyV,IAGxBN,EAAIQ,UAAU,aAAcN,GAKzB,SAASO,GAAUV,EAAKC,EAAKxB,GAChCsB,GAAWC,EAAKC,EAAK,CAACxB,ICpHnB,SAASkC,GAAUC,GAEtB,OADgBrB,KAAKsB,MAAMhB,KAAKC,MAAQ,KACvBc,EAQd,MAAME,GAAY,IAAwB,oBAAXC,OAC/B,SAASC,GAAmBzU,EAAMmN,GACrC,IAAIiF,EACCjF,IACDA,GAAkF,QAA1EiF,EAAgB,OAAXoC,aAA8B,IAAXA,YAAoB,EAASA,OAAO/F,gBAA6B,IAAP2D,OAAgB,EAASA,EAAGsC,OAAS,IAEnI1U,EAAOA,EAAK6N,QAAQ,UAAW,QAC/B,MAAgE8G,EAAlD,IAAIC,OAAO,QAAU5U,EAAO,qBAAsC6U,KAAK1H,GACrF,OAAKwH,EAEAA,EAAQ,GAEN7G,mBAAmB6G,EAAQ,GAAG9G,QAAQ,MAAO,MADzC,GAFA,KCnBf,IAAI0C,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YAOvD,MAAM0L,GACjBjG,aAAY1B,IAAEA,EAAM,GAAE1D,QAAEA,EAAU,GAAEsL,cAAEA,EAAalN,MAAEA,IACjDhB,KAAKsG,IAAMA,EACXtG,KAAK4C,QAAUA,EACf5C,KAAKkO,cAAgBxX,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIyS,IAAiBmD,GACtElO,KAAKgB,MAAQA,EAUjBmN,WAAWC,GACP,OAAO1E,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAII,MAAO,CAAEzG,WAHUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,kBAAmB8H,EAAY,CACvExL,QAAS5C,KAAK4C,UAEHa,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OASxC8M,YACI,OAAO3E,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAII,MAAO,CAAEzG,YAHU2B,GAAI8E,KAAKgB,MAAO,GAAGhB,KAAKsG,kBAAmB,CAC1D1D,QAAS5C,KAAK4C,WAEE0L,MAAO7K,MAAO,MAEtC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAcxCgN,gBAAgBC,EAAOC,EAAU5U,EAAU,IACvC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SACvC,IAAI8L,EAAc,GACd7U,EAAQ8U,aACRD,EAAc,gBAAkB7C,mBAAmBhS,EAAQ8U,aAE/D,MAAMpV,QAAasR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,aAAaoI,IAAe,CAAEF,MAAAA,EAAOC,SAAAA,EAAUlV,KAAMM,EAAQN,MAAQ,CAAEqJ,QAAAA,IAC7GgM,EAAUlY,OAAO4B,OAAO,GAAIiB,GAGlC,OAFIqV,EAAQC,aACRD,EAAQE,WAAavB,GAAUhU,EAAKsV,aACjC,CAAEtV,KAAMqV,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAUxCwN,gBAAgBP,EAAOC,EAAU5U,EAAU,IACvC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SACvC,IAAI8L,EAAc,uBACd7U,EAAQ8U,aACRD,GAAe,gBAAkB7C,mBAAmBhS,EAAQ8U,aAEhE,MAAMpV,QAAasR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,YAAYoI,IAAe,CAAEF,MAAAA,EAAOC,SAAAA,GAAY,CAAE7L,QAAAA,IACxFgM,EAAUlY,OAAO4B,OAAO,GAAIiB,GAGlC,OAFIqV,EAAQC,aACRD,EAAQE,WAAavB,GAAUhU,EAAKsV,aACjC,CAAEtV,KAAMqV,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAUxCyN,gBAAgBC,EAAOR,EAAU5U,EAAU,IACvC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SACjCrJ,QAAasR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,aAAc,CAAE2I,MAAAA,EAAOR,SAAAA,EAAUlV,KAAMM,EAAQN,MAAQ,CAAEqJ,QAAAA,IAC/FgM,EAAUlY,OAAO4B,OAAO,GAAIiB,GAGlC,OAFIqV,EAAQC,aACRD,EAAQE,WAAavB,GAAUhU,EAAKsV,aACjC,CAAEtV,KAAMqV,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OASxC2N,gBAAgBD,EAAOR,GACnB,OAAO/E,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SACjC8L,EAAc,uBACdnV,QAAasR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,YAAYoI,IAAe,CAAEO,MAAAA,EAAOR,SAAAA,GAAY,CAAE7L,QAAAA,IACxFgM,EAAUlY,OAAO4B,OAAO,GAAIiB,GAGlC,OAFIqV,EAAQC,aACRD,EAAQE,WAAavB,GAAUhU,EAAKsV,aACjC,CAAEtV,KAAMqV,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OASxC4N,mBAAmBX,EAAO3U,EAAU,IAChC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SACvC,IAAI8L,EAAc,GACd7U,EAAQ8U,aACRD,GAAe,gBAAkB7C,mBAAmBhS,EAAQ8U,aAGhE,MAAO,CAAEpV,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,gBAAgBoI,IAAe,CAAEF,MAAAA,GAAS,CAAE5L,QAAAA,IACzEa,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAQxC6N,cAAcH,GACV,OAAOvF,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SAEvC,MAAO,CAAErJ,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,UAAW,CAAE2I,MAAAA,GAAS,CAAErM,QAAAA,IACrDa,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAUxC8N,gBAAgBJ,EAAOK,EAAOzV,EAAU,IACpC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SAEvC,MAAO,CAAErJ,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,aAAc,CAAE2I,MAAAA,EAAOK,MAAAA,EAAOpP,KAAM,MAAOqP,YAAa1V,EAAQ8U,YAAc,CAAE/L,QAAAA,IAC7Ga,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAUxCiO,kBAAkBhB,EAAO3U,EAAU,IAC/B,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SACvC,IAAI8L,EAAc,GACd7U,EAAQ8U,aACRD,GAAe,gBAAkB7C,mBAAmBhS,EAAQ8U,aAGhE,MAAO,CAAEpV,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,aAAaoI,IAAe,CAAEF,MAAAA,EAAOjV,KAAMM,EAAQN,MAAQ,CAAEqJ,QAAAA,IAC1Fa,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OASxCkO,sBAAsBjB,EAAO3U,EAAU,IACnC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM4C,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SACvC,IAAI8L,EAAc,GACd7U,EAAQ8U,aACRD,GAAe,gBAAkB7C,mBAAmBhS,EAAQ8U,aAGhE,MAAO,CAAEpV,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,cAAcoI,IAAe,CAAEF,MAAAA,GAAS,CAAE5L,QAAAA,IACvEa,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OASxCmO,sBAAsBC,GAClB,MAAM/M,EAAUlM,OAAO4B,OAAO,GAAI0H,KAAK4C,SAEvC,OADAA,EAAuB,cAAI,UAAU+M,IAC9B/M,EAMXgN,QAAQD,GACJ,OAAOjG,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,aADM6K,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,aAAc,GAAI,CAAE1D,QAAS5C,KAAK0P,sBAAsBC,GAAMjF,eAAe,IACrG,CAAEjH,MAAO,MAEpB,MAAOlC,GACH,MAAO,CAAEkC,MAAOlC,OAU5BsO,kBAAkBC,EAAUjW,GACxB,MAAMkW,EAAY,CAAC,YAAYlE,mBAAmBiE,MAOlD,OANIjW,MAAAA,OAAyC,EAASA,EAAQ8U,aAC1DoB,EAAUrY,KAAK,eAAemU,mBAAmBhS,EAAQ8U,gBAEzD9U,MAAAA,OAAyC,EAASA,EAAQmW,SAC1DD,EAAUrY,KAAK,UAAUmU,mBAAmBhS,EAAQmW,WAEjD,GAAGhQ,KAAKsG,iBAAiByJ,EAAUzK,KAAK,OAMnD2K,QAAQN,GACJ,OAAOjG,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMzG,QAAa2B,GAAI8E,KAAKgB,MAAO,GAAGhB,KAAKsG,WAAY,CACnD1D,QAAS5C,KAAK0P,sBAAsBC,KAExC,MAAO,CAAEO,KAAM3W,EAAMA,KAAAA,EAAMkK,MAAO,MAEtC,MAAOlC,GACH,MAAO,CAAE2O,KAAM,KAAM3W,KAAM,KAAMkK,MAAOlC,OASpD4O,WAAWR,EAAKvB,GACZ,OAAO1E,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMzG,QLtQf,SAAa+Q,EAAShE,EAAKrD,EAAMpJ,GACpC,OAAO6P,EAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,MAAOhE,EAAKzM,EAASoJ,MKoQzBmN,CAAIpQ,KAAKgB,MAAO,GAAGhB,KAAKsG,WAAY8H,EAAY,CAC/DxL,QAAS5C,KAAK0P,sBAAsBC,KAExC,MAAO,CAAEO,KAAM3W,EAAMA,KAAAA,EAAMkK,MAAO,MAEtC,MAAOlC,GACH,MAAO,CAAE2O,KAAM,KAAM3W,KAAM,KAAMkK,MAAOlC,OAYpD8O,WAAWC,EAAKX,GACZ,OAAOjG,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMzG,QLtRf,SAAgB+Q,EAAShE,EAAKrD,EAAMpJ,GACvC,OAAO6P,EAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,SAAUhE,EAAKzM,EAASoJ,MKoR5BsN,CAAOvQ,KAAKgB,MAAO,GAAGhB,KAAKsG,mBAAmBgK,IAAO,GAAI,CACxE1N,QAAS5C,KAAK0P,sBAAsBC,KAExC,MAAO,CAAEO,KAAM3W,EAAMA,KAAAA,EAAMkK,MAAO,MAEtC,MAAOlC,GACH,MAAO,CAAE2O,KAAM,KAAM3W,KAAM,KAAMkK,MAAOlC,OAQpDiP,mBAAmBC,GACf,OAAO/G,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMzG,QAAasR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,qCAAsC,CAAEoK,cAAeD,GAAgB,CAAE7N,QAAS5C,KAAK4C,UAC7HgM,EAAUlY,OAAO4B,OAAO,GAAIiB,GAGlC,OAFIqV,EAAQC,aACRD,EAAQE,WAAavB,GAAUhU,EAAKsV,aACjC,CAAEtV,KAAMqV,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAQxCoP,cAAc/D,EAAKC,GACI,SAAfD,EAAIxG,SACJyG,EAAIQ,UAAU,QAAS,QACvBR,EAAIzF,OAAO,KAAKwJ,IAAI,uBAExB,MAAMjX,MAAEA,EAAKiV,QAAEA,GAAYhC,EAAI3J,KAC/B,IAAKtJ,EACD,MAAM,IAAImB,MAAM,uBACpB,GAAc,cAAVnB,EAAuB,CACvB,IAAKiV,EACD,MAAM,IAAI9T,MAAM,yBACpBwS,GAAUV,EAAKC,EAAK,CAChB1T,KAAM6G,KAAKkO,cAAc/U,KACzBe,MAAO0U,EAAQiC,aACf5F,OAAQjL,KAAKkO,cAAcjD,OAC3Be,OAAQhM,KAAKkO,cAAclD,SAC3BE,KAAMlL,KAAKkO,cAAchD,KACzBC,SAAUnL,KAAKkO,cAAc/C,WAGvB,eAAVxR,GFlRL,SAAsBiT,EAAKC,EAAK1T,GACnCmU,GAAUV,EAAKC,EAAK,CAChB1T,KAAAA,EACAe,MAAO,GACP8R,QAAS,IE+QL8E,CAAalE,EAAKC,EAAK7M,KAAKkO,cAAc/U,MAC9C0T,EAAIzF,OAAO,KAAK1B,KAAK,IAMzBqL,gBAAgBnE,GACZ,OAAOlD,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAK4M,EAAIE,QACL,MAAM,IAAIhS,MAAM,mGAEpB,IAAK8R,EAAIE,QAAQ9M,KAAKkO,cAAc/U,MAChC,MAAM,IAAI2B,MAAM,oBAEpB,MAAMwU,EAAQ1C,EAAIE,QAAQ9M,KAAKkO,cAAc/U,OACvC+W,KAAEA,EAAIzM,MAAEA,SAAgBzD,KAAKiQ,QAAQX,GAC3C,GAAI7L,EACA,MAAMA,EACV,MAAO,CAAE6L,MAAAA,EAAOY,KAAAA,EAAM3W,KAAM2W,EAAMzM,MAAO,MAE7C,MAAOlC,GACH,MAAO,CAAE+N,MAAO,KAAMY,KAAM,KAAM3W,KAAM,KAAMkK,MAAOlC,OAYjEyP,aAAa9Q,EAAMsO,EAAO3U,EAAU,IAChC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAQI,MAAO,CAAEzG,WAPUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,0BAA2B,CACnEpG,KAAAA,EACAsO,MAAAA,EACAC,SAAU5U,EAAQ4U,SAClBlV,KAAMM,EAAQN,KACdgW,YAAa1V,EAAQ8U,YACtB,CAAE/L,QAAS5C,KAAK4C,UACJa,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,QCzb5C,IAAImI,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,aCH/D,WACH,GAA0B,iBAAf0O,WAEX,IACIva,OAAO6S,eAAe7S,OAAOwK,UAAW,YAAa,CACjDhG,IAAK,WACD,OAAO8E,MAEXkR,cAAc,IAGlBC,UAAUF,WAAaE,iBAEhBza,OAAOwK,UAAUiQ,UAE5B,MAAO5P,GACiB,oBAATV,OAEPA,KAAKoQ,WAAapQ,ODR9BuQ,GACA,MAAMC,GAAkB,CACpB/K,IJdsB,wBIetBgL,kBAAkB,EAClBC,gBAAgB,EAChBC,oBAAoB,EACpBC,UAAU,EACV7O,QAASjC,IEnBN,MAAM+Q,WFqBE,MAaX1J,YAAYnO,GACRmG,KAAK2R,oBAAsB,IAAI7S,IAC/B,MAAM8S,EAAWlb,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI+Y,IAAkBxX,GACnEmG,KAAK6R,YAAc,KACnB7R,KAAK8R,eAAiB,KACtB9R,KAAKsR,iBAAmBM,EAASN,iBACjCtR,KAAKuR,eAAiBK,EAASL,eAC/BvR,KAAKyR,SAAWG,EAASH,SACzBzR,KAAK+R,aAAeH,EAASG,cAAgBd,WAAWc,aACxD/R,KAAKgS,IAAM,IAAI/D,GAAU,CACrB3H,IAAKsL,EAAStL,IACd1D,QAASgP,EAAShP,QAClBsL,cAAe0D,EAAS1D,cACxBlN,MAAO4Q,EAAS5Q,QAEpBhB,KAAKiS,kBACLjS,KAAKkS,qBACLlS,KAAKmS,2BACDP,EAASJ,oBAAsB9D,MAAiBE,GAAmB,iBAEnE5N,KAAKoS,kBAAkB,CAAEC,cAAc,IAAQzW,MAAK,EAAG6H,MAAAA,MAC/CA,GACA6O,QAAQ7O,MAAM,kCAAmCA,MAcjE8O,QAAO/D,MAAEA,EAAKC,SAAEA,EAAQQ,MAAEA,GAASpV,EAAU,IACzC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACIA,KAAKwS,iBACL,MAAMjZ,KAAEA,EAAIkK,MAAEA,GAAUwL,GAASR,QACrBzO,KAAKgS,IAAIhD,gBAAgBC,EAAOR,EAAU,CAC9ClV,KAAMM,EAAQN,aAEVyG,KAAKgS,IAAIzD,gBAAgBC,EAAOC,EAAU,CAC9CE,WAAY9U,EAAQ8U,WACpBpV,KAAMM,EAAQN,OAEtB,GAAIkK,EACA,MAAMA,EAEV,IAAKlK,EACD,KAAM,gCAEV,IAAIqV,EAAU,KACVsB,EAAO,KAUX,OATI3W,EAAKsX,eACLjC,EAAUrV,EACV2W,EAAOtB,EAAQsB,KACflQ,KAAKyS,aAAa7D,GAClB5O,KAAK0S,sBAAsB,cAE3BnZ,EAAKoZ,KACLzC,EAAO3W,GAEJ,CAAE2W,KAAAA,EAAMtB,QAAAA,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAE2O,KAAM,KAAMtB,QAAS,KAAMnL,MAAOlC,OAcvDqR,QAAOpE,MAAEA,EAAKS,MAAEA,EAAKR,SAAEA,EAAQgC,aAAEA,EAAYX,SAAEA,GAAYjW,EAAU,IACjE,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,GADAA,KAAKwS,iBACDhE,IAAUC,EAAU,CACpB,MAAMhL,MAAEA,SAAgBzD,KAAKgS,IAAI7C,mBAAmBX,EAAO,CACvDG,WAAY9U,EAAQ8U,aAExB,MAAO,CAAEuB,KAAM,KAAMtB,QAAS,KAAMnL,MAAAA,GAExC,GAAI+K,GAASC,EACT,OAAOzO,KAAK6S,mBAAmBrE,EAAOC,EAAU,CAC5CE,WAAY9U,EAAQ8U,aAG5B,GAAIM,IAAUR,EAAU,CACpB,MAAMhL,MAAEA,SAAgBzD,KAAKgS,IAAI5C,cAAcH,GAC/C,MAAO,CAAEiB,KAAM,KAAMtB,QAAS,KAAMnL,MAAAA,GAExC,GAAIwL,GAASR,EACT,OAAOzO,KAAK8S,mBAAmB7D,EAAOR,GAE1C,GAAIgC,EAAc,CAEd,MAAMhN,MAAEA,SAAgBzD,KAAK+S,kBAAkBtC,GAC/C,GAAIhN,EACA,MAAMA,EACV,MAAO,CACHyM,KAAMlQ,KAAK6R,YACXjD,QAAS5O,KAAK8R,eACdrO,MAAO,MAGf,GAAIqM,EACA,OAAO9P,KAAKgT,sBAAsBlD,EAAU,CACxCnB,WAAY9U,EAAQ8U,WACpBqB,OAAQnW,EAAQmW,SAGxB,MAAM,IAAIlV,MAAM,6EAEpB,MAAOyG,GACH,MAAO,CAAE2O,KAAM,KAAMtB,QAAS,KAAMnL,MAAOlC,OAUvD0R,WAAUhE,MAAEA,EAAKK,MAAEA,GAASzV,EAAU,IAClC,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACIA,KAAKwS,iBACL,MAAMjZ,KAAEA,EAAIkK,MAAEA,SAAgBzD,KAAKgS,IAAI3C,gBAAgBJ,EAAOK,EAAOzV,GACrE,GAAI4J,EACA,MAAMA,EAEV,IAAKlK,EACD,KAAM,2CAEV,IAAIqV,EAAU,KACVsB,EAAO,KAUX,OATI3W,EAAKsX,eACLjC,EAAUrV,EACV2W,EAAOtB,EAAQsB,KACflQ,KAAKyS,aAAa7D,GAClB5O,KAAK0S,sBAAsB,cAE3BnZ,EAAKoZ,KACLzC,EAAO3W,GAEJ,CAAE2W,KAAAA,EAAMtB,QAAAA,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAE2O,KAAM,KAAMtB,QAAS,KAAMnL,MAAOlC,OASvD2O,OACI,OAAOlQ,KAAK6R,YAKhBjD,UACI,OAAO5O,KAAK8R,eAKhBoB,iBACI,IAAI3H,EACJ,OAAO7B,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,KAAqC,QAA9BuL,EAAKvL,KAAK8R,sBAAmC,IAAPvG,OAAgB,EAASA,EAAGsF,cACrE,MAAM,IAAI/V,MAAM,kBAEpB,MAAM2I,MAAEA,SAAgBzD,KAAK+S,oBAC7B,GAAItP,EACA,MAAMA,EACV,MAAO,CAAElK,KAAMyG,KAAK8R,eAAgB5B,KAAMlQ,KAAK6R,YAAapO,MAAO,MAEvE,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAM2W,KAAM,KAAMzM,MAAOlC,OAOpDnF,OAAOgS,GACH,IAAI7C,EACJ,OAAO7B,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,KAAqC,QAA9BuL,EAAKvL,KAAK8R,sBAAmC,IAAPvG,OAAgB,EAASA,EAAGsF,cACrE,MAAM,IAAI/V,MAAM,kBACpB,MAAMoV,KAAEA,EAAIzM,MAAEA,SAAgBzD,KAAKgS,IAAI7B,WAAWnQ,KAAK8R,eAAejB,aAAczC,GACpF,GAAI3K,EACA,MAAMA,EACV,IAAKyM,EACD,MAAMpV,MAAM,sBAChB,MAAM8T,EAAUlY,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI0H,KAAK8R,gBAAiB,CAAE5B,KAAAA,IAGxE,OAFAlQ,KAAKyS,aAAa7D,GAClB5O,KAAK0S,sBAAsB,gBACpB,CAAEnZ,KAAM2W,EAAMA,KAAAA,EAAMzM,MAAO,MAEtC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAM2W,KAAM,KAAMzM,MAAOlC,OAQpD4R,WAAWzC,GACP,OAAOhH,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAK0Q,EACD,MAAM,IAAI5V,MAAM,uBAEpB,MAAMvB,KAAEA,EAAIkK,MAAEA,SAAgBzD,KAAKgS,IAAIxB,mBAAmBE,GAC1D,OAAIjN,EACO,CAAEmL,QAAS,KAAMnL,MAAOA,IAEnCzD,KAAKyS,aAAalZ,GAClByG,KAAK0S,sBAAsB,aACpB,CAAE9D,QAASrV,EAAMkK,MAAO,OAEnC,MAAOlC,GACH,MAAO,CAAEkC,MAAOlC,EAAGqN,QAAS,UAQxCwE,QAAQvC,GAEJ,OADA7Q,KAAK8R,eAAiBpb,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI0H,KAAK8R,gBAAiB,CAAEjB,aAAAA,EAAcwC,WAAY,SAAUnD,KAAM,OACjHlQ,KAAK8R,eAMhBM,kBAAkBvY,GACd,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAK0N,KACD,MAAM,IAAI5S,MAAM,wBACpB,MAAMqP,EAAoByD,GAAmB,qBAC7C,GAAIzD,EACA,MAAM,IAAIrP,MAAMqP,GACpB,MAAMmJ,EAAiB1F,GAAmB,kBACpCiD,EAAejD,GAAmB,gBACxC,IAAKiD,EACD,MAAM,IAAI/V,MAAM,6BACpB,MAAM+T,EAAajB,GAAmB,cACtC,IAAKiB,EACD,MAAM,IAAI/T,MAAM,2BACpB,MAAM4V,EAAgB9C,GAAmB,iBACzC,IAAK8C,EACD,MAAM,IAAI5V,MAAM,8BACpB,MAAMuY,EAAazF,GAAmB,cACtC,IAAKyF,EACD,MAAM,IAAIvY,MAAM,2BACpB,MACMgU,EADU3C,KAAKsB,MAAMhB,KAAKC,MAAQ,KACX6G,SAAS1E,IAChCqB,KAAEA,EAAIzM,MAAEA,SAAgBzD,KAAKgS,IAAI/B,QAAQY,GAC/C,GAAIpN,EACA,MAAMA,EACV,MAAMmL,EAAU,CACZ0E,eAAAA,EACAzC,aAAAA,EACAhC,WAAY0E,SAAS1E,GACrBC,WAAAA,EACA4B,cAAAA,EACA2C,WAAAA,EACAnD,KAAMA,GAEV,GAAIrW,MAAAA,OAAyC,EAASA,EAAQwY,aAAc,CACxErS,KAAKyS,aAAa7D,GAClB,MAAM4E,EAAe5F,GAAmB,QACxC5N,KAAK0S,sBAAsB,aACN,aAAjBc,GACAxT,KAAK0S,sBAAsB,qBAKnC,OADA/E,OAAO/F,SAAS6L,KAAO,GAChB,CAAEla,KAAMqV,EAASnL,MAAO,MAEnC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAUxCqO,UACI,IAAIrE,EACJ,OAAO7B,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,MAAM0T,EAA6C,QAA9BnI,EAAKvL,KAAK8R,sBAAmC,IAAPvG,OAAgB,EAASA,EAAGsF,aAGvF,GAFA7Q,KAAKwS,iBACLxS,KAAK0S,sBAAsB,cACvBgB,EAAa,CACb,MAAMjQ,MAAEA,SAAgBzD,KAAKgS,IAAIpC,QAAQ8D,GACzC,GAAIjQ,EACA,MAAO,CAAEA,MAAAA,GAEjB,MAAO,CAAEA,MAAO,SAOxBkQ,kBAAkBpc,GACd,IACI,MAAMob,EF5WP,uCAAuC3L,QAAQ,SAAS,SAAU9J,GACrE,MAAMD,EAAqB,GAAhBkP,KAAKyH,SAAiB,EACjC,OAD6C,KAAL1W,EAAWD,EAAS,EAAJA,EAAW,GAC1D2E,SAAS,OE2WRiS,EAAe,CACjBlB,GAAAA,EACApb,SAAAA,EACAO,YAAa,KACTkI,KAAK2R,oBAAoBpU,OAAOoV,KAIxC,OADA3S,KAAK2R,oBAAoBvN,IAAIuO,EAAIkB,GAC1B,CAAEta,KAAMsa,EAAcpQ,MAAO,MAExC,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,IAGpCsR,mBAAmBrE,EAAOC,EAAU5U,EAAU,IAC1C,IAAI0R,EAAIC,EACR,OAAO9B,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMzG,KAAEA,EAAIkK,MAAEA,SAAgBzD,KAAKgS,IAAIjD,gBAAgBP,EAAOC,EAAU,CACpEE,WAAY9U,EAAQ8U,aAExB,OAAIlL,IAAUlK,EACH,CAAEA,KAAM,KAAM2W,KAAM,KAAMtB,QAAS,KAAMnL,MAAAA,MACkB,QAAhE8H,EAAKhS,MAAAA,OAAmC,EAASA,EAAK2W,YAAyB,IAAP3E,OAAgB,EAASA,EAAGuI,gBAAmF,QAAhEtI,EAAKjS,MAAAA,OAAmC,EAASA,EAAK2W,YAAyB,IAAP1E,OAAgB,EAASA,EAAGuI,uBAC7N/T,KAAKyS,aAAalZ,GAClByG,KAAK0S,sBAAsB,cAExB,CAAEnZ,KAAAA,EAAM2W,KAAM3W,EAAK2W,KAAMtB,QAASrV,EAAMkK,MAAO,OAE1D,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAM2W,KAAM,KAAMtB,QAAS,KAAMnL,MAAOlC,OAInEuR,mBAAmB7D,EAAOR,GACtB,IAAIlD,EACJ,OAAO7B,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMzG,KAAEA,EAAIkK,MAAEA,SAAgBzD,KAAKgS,IAAI9C,gBAAgBD,EAAOR,GAC9D,OAAIhL,IAAUlK,EACH,CAAEA,KAAM,KAAM2W,KAAM,KAAMtB,QAAS,KAAMnL,MAAAA,KACiB,QAAhE8H,EAAKhS,MAAAA,OAAmC,EAASA,EAAK2W,YAAyB,IAAP3E,OAAgB,EAASA,EAAGyI,sBACrGhU,KAAKyS,aAAalZ,GAClByG,KAAK0S,sBAAsB,cAExB,CAAEnZ,KAAAA,EAAM2W,KAAM3W,EAAK2W,KAAMtB,QAASrV,EAAMkK,MAAO,OAE1D,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAM2W,KAAM,KAAMtB,QAAS,KAAMnL,MAAOlC,OAInEyR,sBAAsBlD,EAAUjW,EAAU,IACtC,MAAMyM,EAAMtG,KAAKgS,IAAInC,kBAAkBC,EAAU,CAC7CnB,WAAY9U,EAAQ8U,WACpBqB,OAAQnW,EAAQmW,SAEpB,IAKI,OAHItC,OACAC,OAAO/F,SAASiG,KAAOvH,GAEpB,CAAEwJ,SAAAA,EAAUxJ,IAAAA,EAAK/M,KAAM,KAAMqV,QAAS,KAAMsB,KAAM,KAAMzM,MAAO,MAE1E,MAAOlC,GAEH,OAAI+E,EACO,CAAEwJ,SAAAA,EAAUxJ,IAAAA,EAAK/M,KAAM,KAAMqV,QAAS,KAAMsB,KAAM,KAAMzM,MAAO,MACnE,CAAElK,KAAM,KAAM2W,KAAM,KAAMtB,QAAS,KAAMnL,MAAOlC,IAO/D0Q,kBACI,IAAI1G,EACJ,IACI,MAAM7F,EAAOgI,OAA6C,QAA5BnC,EAAKvL,KAAK+R,oBAAiC,IAAPxG,OAAgB,EAASA,EAAG0I,QAAQnJ,KACtG,IAAKpF,GAAwB,iBAATA,EAChB,OAAO,KAEX,MAAMnM,EAAOoM,KAAKC,MAAMF,IAClBoM,eAAEA,EAAcvE,UAAEA,GAAchU,EAElCgU,GADYpB,KAAKsB,MAAMhB,KAAKC,MAAQ,OACXoF,MAAAA,OAAuD,EAASA,EAAe5B,QACxGlQ,KAAKyS,aAAaX,GAClB9R,KAAK0S,sBAAsB,cAGnC,MAAOjP,GACH6O,QAAQ4B,IAAI,QAASzQ,IAO7ByO,qBACI,OAAOxI,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM0F,EAAOgI,aAAsB1N,KAAK+R,aAAakC,QAAQnJ,KAC7D,IAAKpF,EACD,OAAO,KAEX,MAAMnM,EAAOoM,KAAKC,MAAMF,IAClBoM,eAAEA,EAAcvE,UAAEA,GAAchU,EAEtC,GAAIgU,EADYpB,KAAKsB,MAAMhB,KAAKC,MAAQ,KAEpC,GAAI1M,KAAKsR,kBAAoBQ,EAAepB,cAAe,CACvD,MAAMjN,MAAEA,SAAgBzD,KAAK+S,kBAAkBjB,EAAepB,eAC1DjN,IACA6O,QAAQ4B,IAAIzQ,EAAMqE,eACZ9H,KAAKwS,uBAIfxS,KAAKwS,sBAGHV,GAAmBA,EAAe5B,MAOxClQ,KAAKyS,aAAaX,GAClB9R,KAAK0S,sBAAsB,eAP3BJ,QAAQ4B,IAAI,oCACZlU,KAAKwS,kBASb,MAAO3K,GAEH,OADAyK,QAAQ7O,MAAMoE,GACP,SAInBkL,kBAAkBrC,GACd,IAAInF,EAEJ,YADsB,IAAlBmF,IAA4BA,EAA+C,QAA9BnF,EAAKvL,KAAK8R,sBAAmC,IAAPvG,OAAgB,EAASA,EAAGmF,eAC5GhH,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAK0Q,EACD,MAAM,IAAI5V,MAAM,uBAEpB,MAAMvB,KAAEA,EAAIkK,MAAEA,SAAgBzD,KAAKgS,IAAIxB,mBAAmBE,GAC1D,GAAIjN,EACA,MAAMA,EACV,IAAKlK,EACD,MAAMuB,MAAM,yBAIhB,OAHAkF,KAAKyS,aAAalZ,GAClByG,KAAK0S,sBAAsB,mBAC3B1S,KAAK0S,sBAAsB,aACpB,CAAEnZ,KAAAA,EAAMkK,MAAO,MAE1B,MAAOlC,GACH,MAAO,CAAEhI,KAAM,KAAMkK,MAAOlC,OAIxCmR,sBAAsB/Y,GAClBqG,KAAK2R,oBAAoB7a,SAASqd,GAAMA,EAAE5c,SAASoC,EAAOqG,KAAK8R,kBAMnEW,aAAa7D,GACT5O,KAAK8R,eAAiBlD,EACtB5O,KAAK6R,YAAcjD,EAAQsB,KAC3B,MAAM3C,EAAYqB,EAAQE,WAC1B,GAAIvB,EAAW,CACX,MACMC,EAAYD,EADFpB,KAAKsB,MAAMhB,KAAKC,MAAQ,KAElC0H,EAA+B5G,EAAY,GAAK,GAAK,GAC3DxN,KAAKqU,uBAAoE,KAA5C7G,EAAY4G,IAIzCpU,KAAKuR,gBAAkB3C,EAAQE,YAC/B9O,KAAKsU,gBAAgBtU,KAAK8R,gBAGlCwC,gBAAgBxC,GACZ,MAAMvY,EAAO,CAAEuY,eAAAA,EAAgBvE,UAAWuE,EAAehD,YACzDpB,MAAe1N,KAAK+R,aAAawC,QAAQzJ,GAAanF,KAAKyE,UAAU7Q,IAEzEiZ,iBACI,OAAO9I,GAAU1J,UAAM,OAAQ,GAAQ,YACnCA,KAAK8R,eAAiB,KACtB9R,KAAK6R,YAAc,KACf7R,KAAKwU,mBACLC,aAAazU,KAAKwU,mBACtB9G,aAAsB1N,KAAK+R,aAAa2C,WAAW5J,QAO3DuJ,uBAAuBna,GACf8F,KAAKwU,mBACLC,aAAazU,KAAKwU,mBAClBta,GAAS,IAAM8F,KAAKsR,mBAExBtR,KAAKwU,kBAAoBG,YAAW,IAAM3U,KAAK+S,qBAAqB7Y,GACxB,mBAAjC8F,KAAKwU,kBAAkBI,OAC9B5U,KAAKwU,kBAAkBI,SAK/BzC,2BACI,IAAKnS,KAAKyR,WAAa/D,QAA4B,OAAXC,aAA8B,IAAXA,YAAoB,EAASA,OAAO7T,kBAE3F,OAAO,EAEX,IACe,OAAX6T,aAA8B,IAAXA,QAA6BA,OAAO7T,iBAAiB,WAAYyH,IAChF,IAAIgK,EACJ,GAAIhK,EAAEvG,MAAQ8P,GAAa,CACvB,MAAM+J,EAAalP,KAAKC,MAAM7D,OAAOR,EAAEuT,YAC0D,QAA5FvJ,EAAKsJ,MAAAA,OAA+C,EAASA,EAAW/C,sBAAmC,IAAPvG,OAAgB,EAASA,EAAGsF,eACjI7Q,KAAKkS,qBACLlS,KAAK0S,sBAAsB,eAG3B1S,KAAKwS,iBACLxS,KAAK0S,sBAAsB,mBAK3C,MAAOjP,GACH6O,QAAQ7O,MAAM,2BAA4BA,ME1lBlDuE,YAAYnO,GACRkb,MAAMlb,ICHd,IAAI6P,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YAI/D,MAAMyS,GACThN,YAAYiN,GACRjV,KAAKkV,oBAAqB,EAC1Bxe,OAAO4B,OAAO0H,KAAMiV,GACpBjV,KAAKgB,MAAQiU,EAAQjU,OAASuJ,EAQlC4K,eAEI,OADAnV,KAAKkV,oBAAqB,EACnBlV,KAEXpE,KAAKwZ,EAAaC,QAEa,IAAhBrV,KAAKsV,SAGP,CAAC,MAAO,QAAQC,SAASvV,KAAKoG,QACnCpG,KAAK4C,QAAQ,kBAAoB5C,KAAKsV,OAGtCtV,KAAK4C,QAAQ,mBAAqB5C,KAAKsV,QAEvB,QAAhBtV,KAAKoG,QAAoC,SAAhBpG,KAAKoG,SAC9BpG,KAAK4C,QAAQ,gBAAkB,oBAEnC,IAAIiK,EAAM7M,KAAKgB,MAAMhB,KAAKsG,IAAI1E,WAAY,CACtCwE,OAAQpG,KAAKoG,OACbxD,QAAS5C,KAAK4C,QACdK,KAAM0C,KAAKyE,UAAUpK,KAAKiD,MAC1BwD,OAAQzG,KAAKyG,SACd7K,MAAMiR,GAAQnD,GAAU1J,UAAM,OAAQ,GAAQ,YAC7C,IAAIuL,EAAIC,EAAIC,EACZ,IAAIhI,EAAQ,KACRlK,EAAO,KACPic,EAAQ,KACZ,GAAI3I,EAAIxF,GAAI,CACR,MAAMoO,EAAoD,QAAjClK,EAAKvL,KAAK4C,QAAgB,cAAsB,IAAP2I,OAAgB,EAASA,EAAGzE,MAAM,KAAKyO,SAAS,kBAClH,GAAoB,SAAhBvV,KAAKoG,SAAsBqP,EAAiB,CAC5C,MAAMnc,QAAauT,EAAIvT,OAClBA,IAIDC,EADgC,aAA3ByG,KAAK4C,QAAgB,OACnBtJ,EAGAqM,KAAKC,MAAMtM,IAG1B,MAAMoc,EAAgD,QAAjClK,EAAKxL,KAAK4C,QAAgB,cAAsB,IAAP4I,OAAgB,EAASA,EAAGmK,MAAM,mCAC1FC,EAA2D,QAA3CnK,EAAKoB,EAAIjK,QAAQ1H,IAAI,wBAAqC,IAAPuQ,OAAgB,EAASA,EAAG3E,MAAM,KACvG4O,GAAeE,GAAgBA,EAAazZ,OAAS,IACrDqZ,EAAQjC,SAASqC,EAAa,UAKlC,GADAnS,QAAcoJ,EAAInH,OACdjC,GAASzD,KAAKkV,mBACd,MAAMzR,EAWd,MAR0B,CACtBA,MAAAA,EACAlK,KAAAA,EACAic,MAAAA,EACApO,OAAQyF,EAAIzF,OACZE,WAAYuF,EAAIvF,WAChBrE,KAAM1J,QAmBd,OAfKyG,KAAKkV,qBACNrI,EAAMA,EAAIlC,OAAOkL,KACbpS,MAAO,CACHqE,QAAS,eAAe+N,EAAW/N,UACnCgO,QAAS,GACTC,KAAM,GACNC,KAAMH,EAAWG,MAAQ,IAE7Bzc,KAAM,KACN0J,KAAM,KACNuS,MAAO,KACPpO,OAAQ,IACRE,WAAY,mBAGbuF,EAAIjR,KAAKwZ,EAAaC,ICjGtB,MAAMY,WAAkCjB,GAMnDkB,OAAOC,EAAU,KAEb,IAAIC,GAAS,EACb,MAAMC,EAAiBF,EAClBrP,MAAM,IACN7I,KAAKf,GACF,KAAK8E,KAAK9E,KAAOkZ,EACV,IAED,MAANlZ,IACAkZ,GAAUA,GAEPlZ,KAENoI,KAAK,IAEV,OADAtF,KAAKsG,IAAIgQ,aAAalS,IAAI,SAAUiS,GAC7BrW,KAUXuW,MAAMC,GAAQC,UAAEA,GAAY,EAAIC,WAAEA,GAAa,EAAKC,aAAEA,GAAkB,IACpE,MAAM3b,OAA8B,IAAjB2b,EAA+B,QAAU,GAAGA,UACzDC,EAAgB5W,KAAKsG,IAAIgQ,aAAapb,IAAIF,GAEhD,OADAgF,KAAKsG,IAAIgQ,aAAalS,IAAIpJ,EAAK,GAAG4b,EAAgB,GAAGA,KAAmB,KAAKJ,KAAUC,EAAY,MAAQ,UAAUC,EAAa,aAAe,eAC1I1W,KAQX6W,MAAMrB,GAAOmB,aAAEA,GAAiB,IAC5B,MAAM3b,OAA8B,IAAjB2b,EAA+B,QAAU,GAAGA,UAE/D,OADA3W,KAAKsG,IAAIgQ,aAAalS,IAAIpJ,EAAK,GAAGwa,KAC3BxV,KASX8W,MAAMrX,EAAMsX,GAAIJ,aAAEA,GAAiB,IAC/B,MAAMK,OAAoC,IAAjBL,EAA+B,SAAW,GAAGA,WAChEM,OAAmC,IAAjBN,EAA+B,QAAU,GAAGA,UAIpE,OAHA3W,KAAKsG,IAAIgQ,aAAalS,IAAI4S,EAAW,GAAGvX,KAExCO,KAAKsG,IAAIgQ,aAAalS,IAAI6S,EAAU,IAAGF,EAAKtX,EAAO,IAC5CO,KAKXkX,YAAYzQ,GAER,OADAzG,KAAKyG,OAASA,EACPzG,KAMXmX,SAEI,OADAnX,KAAK4C,QAAgB,OAAI,oCAClB5C,KAOXoX,cACIpX,KAAK4C,QAAgB,OAAI,oCACzB,MAAMyU,EAAQ,IAAIpB,GAA0BjW,MAe5C,OAdAqX,EAAMzb,MAASwZ,EAAaC,IAAerV,KAAKpE,MAAMiR,IAClD,IAAItB,EAAIC,EACR,OAAgF,QAA3EA,EAA0B,QAApBD,EAAKsB,EAAIpJ,aAA0B,IAAP8H,OAAgB,EAASA,EAAGuK,eAA4B,IAAPtK,OAAgB,EAASA,EAAG+J,SAAS,2BAClHH,EAAY,CACf3R,MAAO,KACPlK,KAAM,KACNic,MAAO3I,EAAI2I,MACXpO,OAAQ,IACRE,WAAY,KACZrE,KAAM,OAGPmS,EAAYvI,KACpBwI,GACIgC,EAKXC,MAEI,OADAtX,KAAK4C,QAAgB,OAAI,WAClB5C,MC/GA,MAAMuX,WAA+BtB,GAChDjO,cACI+M,SAASyC,WAETxX,KAAKyX,GAAKzX,KAAK0X,SAEf1X,KAAK2X,GAAK3X,KAAK4X,YAEf5X,KAAK6X,GAAK7X,KAAK8X,QAEf9X,KAAK+X,GAAK/X,KAAKgY,QAEfhY,KAAKiY,IAAMjY,KAAKkY,SAEhBlY,KAAKmY,IAAMnY,KAAKoY,SAEhBpY,KAAKqY,IAAMrY,KAAKsY,cAEhBtY,KAAKuY,GAAKvY,KAAKwY,SASnBC,IAAIjC,EAAQkC,EAAUxe,GAElB,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOkC,KAAYxe,KACtD8F,KAQX2Y,GAAGC,GAASjC,aAAEA,GAAiB,IAC3B,MAAM3b,OAA8B,IAAjB2b,EAA+B,KAAO,GAAGA,OAE5D,OADA3W,KAAKsG,IAAIgQ,aAAa9d,OAAOwC,EAAK,IAAI4d,MAC/B5Y,KASX6Y,GAAGrC,EAAQtc,GAEP,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMtc,KACzC8F,KASX8Y,IAAItC,EAAQtc,GAER,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOtc,KAC1C8F,KASX+Y,GAAGvC,EAAQtc,GAEP,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMtc,KACzC8F,KASXgZ,IAAIxC,EAAQtc,GAER,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOtc,KAC1C8F,KASXiZ,GAAGzC,EAAQtc,GAEP,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMtc,KACzC8F,KASXkZ,IAAI1C,EAAQtc,GAER,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOtc,KAC1C8F,KASXmZ,KAAK3C,EAAQ4C,GAET,OADApZ,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,QAAQ4C,KAC3CpZ,KASXqZ,MAAM7C,EAAQ4C,GAEV,OADApZ,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,SAAS4C,KAC5CpZ,KASXsZ,GAAG9C,EAAQtc,GAEP,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMtc,KACzC8F,KASXuZ,GAAG/C,EAAQxQ,GACP,MAAMwT,EAAgBxT,EACjB/H,KAAKwb,GAGW,iBAANA,GAAkB,IAAI1L,OAAO,SAAS/L,KAAKyX,GAC3C,IAAIA,KAEJ,GAAGA,MAEbnU,KAAK,KAEV,OADAtF,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOgD,MAC1CxZ,KASX0X,SAASlB,EAAQtc,GAcb,MAbqB,iBAAVA,EAGP8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMtc,KAE3CsF,MAAMqD,QAAQ3I,GAEnB8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOtc,EAAMoL,KAAK,SAI5DtF,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAM7Q,KAAKyE,UAAUlQ,MAE5D8F,KASX4X,YAAYpB,EAAQtc,GAahB,MAZqB,iBAAVA,EAEP8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMtc,KAE3CsF,MAAMqD,QAAQ3I,GAEnB8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOtc,EAAMoL,KAAK,SAI5DtF,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAM7Q,KAAKyE,UAAUlQ,MAE5D8F,KASX8X,QAAQtB,EAAQM,GAEZ,OADA9W,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMM,KACzC9W,KASXgY,QAAQxB,EAAQM,GAEZ,OADA9W,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMM,KACzC9W,KASXkY,SAAS1B,EAAQM,GAEb,OADA9W,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOM,KAC1C9W,KASXoY,SAAS5B,EAAQM,GAEb,OADA9W,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOM,KAC1C9W,KASXsY,cAAc9B,EAAQM,GAElB,OADA9W,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOM,KAC1C9W,KASXwY,SAAShC,EAAQtc,GASb,MARqB,iBAAVA,EAEP8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMtc,KAIhD8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOtc,EAAMoL,KAAK,SAEzDtF,KAWX0Z,WAAWlD,EAAQmD,GAAOC,OAAEA,EAAM1Z,KAAEA,EAAO,MAAU,IACjD,IAAI2Z,EAAW,GACF,UAAT3Z,EACA2Z,EAAW,KAEG,WAAT3Z,EACL2Z,EAAW,KAEG,cAAT3Z,IACL2Z,EAAW,KAEf,MAAMC,OAAwBpX,IAAXkX,EAAuB,GAAK,IAAIA,KAEnD,OADA5Z,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,GAAGqD,OAAcC,KAAcH,KAClE3Z,KAYX+Z,IAAIvD,EAAQmD,GAAOC,OAAEA,GAAW,IAC5B,MAAME,OAA+B,IAAXF,EAAyB,GAAK,IAAIA,KAE5D,OADA5Z,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,MAAMsD,KAAcH,KACvD3Z,KAYXga,MAAMxD,EAAQmD,GAAOC,OAAEA,GAAW,IAC9B,MAAME,OAA+B,IAAXF,EAAyB,GAAK,IAAIA,KAE5D,OADA5Z,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,QAAQsD,KAAcH,KACzD3Z,KAYXia,MAAMzD,EAAQmD,GAAOC,OAAEA,GAAW,IAC9B,MAAME,OAA+B,IAAXF,EAAyB,GAAK,IAAIA,KAE5D,OADA5Z,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,QAAQsD,KAAcH,KACzD3Z,KAYXka,KAAK1D,EAAQmD,GAAOC,OAAEA,GAAW,IAC7B,MAAME,OAA+B,IAAXF,EAAyB,GAAK,IAAIA,KAE5D,OADA5Z,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,OAAOsD,KAAcH,KACxD3Z,KASX9B,OAAOsY,EAAQkC,EAAUxe,GAErB,OADA8F,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGge,IAAU,GAAGkC,KAAYxe,KAClD8F,KAQX2V,MAAMgE,GAIF,OAHAjjB,OAAOgK,KAAKiZ,GAAO7iB,SAASkE,IACxBgF,KAAKsG,IAAIgQ,aAAa9d,OAAO,GAAGwC,IAAO,MAAM2e,EAAM3e,SAEhDgF,MChYA,MAAMma,WAA8BnF,GAC/ChN,YAAY1B,GAAK1D,QAAEA,EAAU,GAAE0S,OAAEA,EAAMtU,MAAEA,GAAW,IAChD+T,MAAM,CAAE/T,MAAAA,IACRhB,KAAKsG,IAAM,IAAI8T,IAAI9T,GACnBtG,KAAK4C,QAAUlM,OAAO4B,OAAO,GAAIsK,GACjC5C,KAAKsV,OAASA,EASlBY,OAAOC,EAAU,KAAKkE,KAAEA,GAAO,EAAK7E,MAAEA,EAAQ,MAAU,IACpDxV,KAAKoG,OAAS,MAEd,IAAIgQ,GAAS,EACb,MAAMC,EAAiBF,EAClBrP,MAAM,IACN7I,KAAKf,GACF,KAAK8E,KAAK9E,KAAOkZ,EACV,IAED,MAANlZ,IACAkZ,GAAUA,GAEPlZ,KAENoI,KAAK,IAQV,OAPAtF,KAAKsG,IAAIgQ,aAAalS,IAAI,SAAUiS,GAChCb,IACAxV,KAAK4C,QAAgB,OAAI,SAAS4S,KAElC6E,IACAra,KAAKoG,OAAS,QAEX,IAAImR,GAAuBvX,MAEtCpH,OAAOoN,GAAQsU,OAAEA,GAAS,EAAKC,WAAEA,EAAUC,UAAEA,EAAY,iBAAgBhF,MAAEA,EAAQ,MAAU,IACzFxV,KAAKoG,OAAS,OACd,MAAMqU,EAAiB,CAAC,UAAUD,KAUlC,GATIF,GACAG,EAAe/iB,KAAK,+BACpB4iB,QAAyB5X,IAAf6X,GACVva,KAAKsG,IAAIgQ,aAAalS,IAAI,cAAemW,GAC7Cva,KAAKiD,KAAO+C,EACRwP,GACAiF,EAAe/iB,KAAK,SAAS8d,KAEjCxV,KAAK4C,QAAgB,OAAI6X,EAAenV,KAAK,KACzC9F,MAAMqD,QAAQmD,GAAS,CACvB,MAAMmQ,EAAUnQ,EAAO0U,QAAO,CAACC,EAAKxG,IAAMwG,EAAIC,OAAOlkB,OAAOgK,KAAKyT,KAAK,IACtE,GAAIgC,EAAQha,OAAS,EAAG,CACpB,MAAM0e,EAAgB,IAAI,IAAI5e,IAAIka,IAAUlY,KAAKuY,GAAW,IAAIA,OAChExW,KAAKsG,IAAIgQ,aAAalS,IAAI,UAAWyW,EAAcvV,KAAK,OAGhE,OAAO,IAAIiS,GAAuBvX,MAWtCsa,OAAOtU,GAAQuU,WAAEA,EAAUC,UAAEA,EAAY,iBAAgBhF,MAAEA,EAAQ,KAAIsF,iBAAEA,GAAmB,GAAW,IACnG9a,KAAKoG,OAAS,OACd,MAAMqU,EAAiB,CACnB,cAAcK,EAAmB,SAAW,qBAC5C,UAAUN,KASd,YAPmB9X,IAAf6X,GACAva,KAAKsG,IAAIgQ,aAAalS,IAAI,cAAemW,GAC7Cva,KAAKiD,KAAO+C,EACRwP,GACAiF,EAAe/iB,KAAK,SAAS8d,KAEjCxV,KAAK4C,QAAgB,OAAI6X,EAAenV,KAAK,KACtC,IAAIiS,GAAuBvX,MAStC5D,OAAO4J,GAAQwU,UAAEA,EAAY,iBAAgBhF,MAAEA,EAAQ,MAAU,IAC7DxV,KAAKoG,OAAS,QACd,MAAMqU,EAAiB,CAAC,UAAUD,KAMlC,OALAxa,KAAKiD,KAAO+C,EACRwP,GACAiF,EAAe/iB,KAAK,SAAS8d,KAEjCxV,KAAK4C,QAAgB,OAAI6X,EAAenV,KAAK,KACtC,IAAIiS,GAAuBvX,MAQtCzC,QAAOid,UAAEA,EAAY,iBAAgBhF,MAAEA,EAAQ,MAAU,IACrDxV,KAAKoG,OAAS,SACd,MAAMqU,EAAiB,CAAC,UAAUD,KAKlC,OAJIhF,GACAiF,EAAe/iB,KAAK,SAAS8d,KAEjCxV,KAAK4C,QAAgB,OAAI6X,EAAenV,KAAK,KACtC,IAAIiS,GAAuBvX,OClH3B,MAAM+a,WAA4B/F,GAC7ChN,YAAY1B,GAAK1D,QAAEA,EAAU,GAAE0S,OAAEA,EAAMtU,MAAEA,GAAW,IAChD+T,MAAM,CAAE/T,MAAAA,IACRhB,KAAKsG,IAAM,IAAI8T,IAAI9T,GACnBtG,KAAK4C,QAAUlM,OAAO4B,OAAO,GAAIsK,GACjC5C,KAAKsV,OAASA,EAKlB0F,IAAIxQ,GAAQ6P,KAAEA,GAAO,EAAK7E,MAAEA,EAAQ,MAAU,IAmB1C,OAlBI6E,GACAra,KAAKoG,OAAS,OACVoE,GACA9T,OAAOuP,QAAQuE,GAAQ1T,SAAQ,EAAEqC,EAAMe,MACnC8F,KAAKsG,IAAIgQ,aAAa9d,OAAOW,EAAMe,QAK3C8F,KAAKoG,OAAS,OACdpG,KAAKiD,KAAOuH,GAEZgL,SAC+B9S,IAA3B1C,KAAK4C,QAAgB,OACrB5C,KAAK4C,QAAgB,QAAK,UAAU4S,IAEpCxV,KAAK4C,QAAgB,OAAI,SAAS4S,KAEnC,IAAI+B,GAAuBvX,OC9BnC,MCAMW,GAAkB,CAAE,gBAAiB,uBCEnC,MAAMsa,GAQjBjT,YAAY1B,GAAK1D,QAAEA,EAAU,GAAE0S,OAAEA,EAAMtU,MAAEA,GAAW,IAChDhB,KAAKsG,IAAMA,EACXtG,KAAK4C,QAAUlM,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIqI,IAAkBiC,GACjE5C,KAAKsV,OAASA,EACdtV,KAAKgB,MAAQA,EAOjBka,KAAK5L,GAED,OADAtP,KAAK4C,QAAuB,cAAI,UAAU0M,IACnCtP,KAOXP,KAAK0b,GACD,MAAM7U,EAAM,GAAGtG,KAAKsG,OAAO6U,IAC3B,OAAO,IAAIhB,GAAsB7T,EAAK,CAClC1D,QAAS5C,KAAK4C,QACd0S,OAAQtV,KAAKsV,OACbtU,MAAOhB,KAAKgB,QAWpBga,IAAIxkB,EAAIgU,GAAQ6P,KAAEA,GAAO,EAAK7E,MAAEA,EAAQ,MAAU,IAC9C,MAAMlP,EAAM,GAAGtG,KAAKsG,WAAW9P,IAC/B,OAAO,IAAIukB,GAAoBzU,EAAK,CAChC1D,QAAS5C,KAAK4C,QACd0S,OAAQtV,KAAKsV,OACbtU,MAAOhB,KAAKgB,QACbga,IAAIxQ,EAAQ,CAAE6P,KAAAA,EAAM7E,MAAAA,KChDxB,IAAI4F,IACX,SAAWA,GACPA,EAAuB,QAAI,UAC3BA,EAAoB,KAAI,OACxBA,EAAoB,KAAI,OACxBA,EAAyB,UAAI,YAC7BA,EAAsB,OAAI,SAC1BA,EAAsB,OAAI,SAC1BA,EAAoB,KAAI,OACxBA,EAAoB,KAAI,OACxBA,EAAyB,UAAI,YAC7BA,EAAoB,KAAI,OACxBA,EAAyB,UAAI,YAC7BA,EAAoB,KAAI,OACxBA,EAAqB,MAAI,QACzBA,EAAqB,MAAI,QACzBA,EAAuB,QAAI,UAC3BA,EAAmB,IAAI,MACvBA,EAAuB,QAAI,UAC3BA,EAAoB,KAAI,OACxBA,EAAoB,KAAI,OACxBA,EAAyB,UAAI,YAC7BA,EAA2B,YAAI,cAC/BA,EAAsB,OAAI,SAC1BA,EAAuB,QAAI,UAC3BA,EAAyB,UAAI,YAxBjC,CAyBGA,KAAkBA,GAAgB,KAa9B,MAAMC,GAAoB,CAAClF,EAASmF,EAAQzhB,EAAU,MACzD,IAAI0R,EACJ,MAAMgQ,EAAyC,QAA5BhQ,EAAK1R,EAAQ0hB,iBAA8B,IAAPhQ,EAAgBA,EAAK,GAC5E,OAAO7U,OAAOgK,KAAK4a,GAAQZ,QAAO,CAACC,EAAKa,KACpCb,EAAIa,GAAWC,GAAcD,EAASrF,EAASmF,EAAQC,GAChDZ,IACR,KAgBMc,GAAgB,CAACC,EAAYvF,EAASmF,EAAQC,KACvD,MAAM/E,EAASL,EAAQwF,MAAMxH,GAAMA,EAAEhb,OAASuiB,IACxCE,EAAUpF,MAAAA,OAAuC,EAASA,EAAOtW,KACjEhG,EAAQohB,EAAOI,GACrB,OAAIE,IAAYL,EAAUhG,SAASqG,GACxBC,GAAYD,EAAS1hB,GAEzB5D,GAAK4D,IAeH2hB,GAAc,CAAC3b,EAAMhG,KAE9B,GAAuB,MAAnBgG,EAAK4b,OAAO,GAAY,CACxB,MAAMC,EAAW7b,EAAK3H,MAAM,EAAG2H,EAAK/D,QACpC,OAAO6f,GAAQ9hB,EAAO6hB,GAG1B,OAAQ7b,GACJ,KAAKkb,GAAca,KACf,OAAOC,GAAUhiB,GACrB,KAAKkhB,GAAce,OACnB,KAAKf,GAAcgB,OACnB,KAAKhB,GAAciB,KACnB,KAAKjB,GAAckB,KACnB,KAAKlB,GAAcmB,KACnB,KAAKnB,GAAcoB,QACnB,KAAKpB,GAAcqB,IACf,OAAOC,GAASxiB,GACpB,KAAKkhB,GAAc1V,KACnB,KAAK0V,GAAcuB,MACf,OAAOC,GAAO1iB,GAClB,KAAKkhB,GAAcyB,UACf,OAAOC,GAAkB5iB,GAC7B,KAAKkhB,GAAc2B,QACnB,KAAK3B,GAAc4B,KACnB,KAAK5B,GAAc6B,UACnB,KAAK7B,GAAc8B,UACnB,KAAK9B,GAAc+B,UACnB,KAAK/B,GAAcgC,MACnB,KAAKhC,GAAciC,QACnB,KAAKjC,GAAc9hB,KACnB,KAAK8hB,GAAckC,KACnB,KAAKlC,GAAcmC,YACnB,KAAKnC,GAAcoC,OACnB,KAAKpC,GAAcqC,QACnB,KAAKrC,GAAcsC,UAEnB,QAEI,OAAOpnB,GAAK4D,KAGlB5D,GAAQ4D,GACHA,EAEEgiB,GAAahiB,IACtB,OAAQA,GACJ,IAAK,IACD,OAAO,EACX,IAAK,IACD,OAAO,EACX,QACI,OAAOA,IAGNwiB,GAAYxiB,IACrB,GAAqB,iBAAVA,EAAoB,CAC3B,MAAMyjB,EAAcC,WAAW1jB,GAC/B,IAAK2jB,OAAO5R,MAAM0R,GACd,OAAOA,EAGf,OAAOzjB,GAEE0iB,GAAU1iB,IACnB,GAAqB,iBAAVA,EACP,IACI,OAAOyL,KAAKC,MAAM1L,GAEtB,MAAOuJ,GAEH,OADA6O,QAAQ4B,IAAI,qBAAqBzQ,KAC1BvJ,EAGf,OAAOA,GAYE8hB,GAAU,CAAC9hB,EAAOgG,KAC3B,GAAqB,iBAAVhG,EACP,OAAOA,EAEX,MAAM4jB,EAAU5jB,EAAMiC,OAAS,EACzB4hB,EAAa7jB,EAAM4jB,GAGzB,GAAkB,MAFA5jB,EAAM,IAEgB,MAAf6jB,EAAoB,CACzC,IAAIC,EACJ,MAAMC,EAAU/jB,EAAM3B,MAAM,EAAGulB,GAE/B,IACIE,EAAMrY,KAAKC,MAAM,IAAMqY,EAAU,KAErC,MAAOC,GAEHF,EAAMC,EAAUA,EAAQnX,MAAM,KAAO,GAEzC,OAAOkX,EAAI/f,KAAKyN,GAAQmQ,GAAY3b,EAAMwL,KAE9C,OAAOxR,GASE4iB,GAAqB5iB,GACT,iBAAVA,EACAA,EAAM8M,QAAQ,IAAK,KAEvB9M,EC/MEyG,GAAkB,CAAE,gBAAiB,qBAI3C,IAAIwd,GAOAC,GAQAC,GASAC,IAvBX,SAAWH,GACPA,EAAcA,EAA0B,WAAI,GAAK,aACjDA,EAAcA,EAAoB,KAAI,GAAK,OAC3CA,EAAcA,EAAuB,QAAI,GAAK,UAC9CA,EAAcA,EAAsB,OAAI,GAAK,SAJjD,CAKGA,KAAkBA,GAAgB,KAErC,SAAWC,GACPA,EAAuB,OAAI,SAC3BA,EAAwB,QAAI,UAC5BA,EAAuB,OAAI,SAC3BA,EAAwB,QAAI,UAC5BA,EAAwB,QAAI,UALhC,CAMGA,KAAmBA,GAAiB,KAEvC,SAAWC,GACPA,EAAsB,MAAI,YAC1BA,EAAsB,MAAI,YAC1BA,EAAqB,KAAI,WACzBA,EAAsB,MAAI,YAC1BA,EAAsB,MAAI,YAC1BA,EAA6B,aAAI,eANrC,CAOGA,KAAmBA,GAAiB,KAEvC,SAAWC,GACPA,EAAsB,UAAI,YAD9B,CAEGA,KAAeA,GAAa,KCpBhB,MAAMC,GACjBvW,YAAYzQ,EAAUinB,GAClBxe,KAAKzI,SAAWA,EAChByI,KAAKwe,UAAYA,EACjBxe,KAAKye,WAAQ/b,EACb1C,KAAK0e,MAAQ,EACb1e,KAAKzI,SAAWA,EAChByI,KAAKwe,UAAYA,EAErBG,QACI3e,KAAK0e,MAAQ,EACbjK,aAAazU,KAAKye,OAGtBG,kBACInK,aAAazU,KAAKye,OAClBze,KAAKye,MAAQ9J,YAAW,KACpB3U,KAAK0e,MAAQ1e,KAAK0e,MAAQ,EAC1B1e,KAAKzI,aACNyI,KAAKwe,UAAUxe,KAAK0e,MAAQ,KC9BxB,MAAMG,GASjB7W,YAAY8W,EAASnlB,EAAOolB,EAAU,GAAIC,EFPf,KEQvBhf,KAAK8e,QAAUA,EACf9e,KAAKrG,MAAQA,EACbqG,KAAK+e,QAAUA,EACf/e,KAAKgf,QAAUA,EACfhf,KAAKif,MAAO,EACZjf,KAAKkf,kBAAexc,EACpB1C,KAAKmf,IAAM,GACXnf,KAAKof,aAAe,KACpBpf,KAAKqf,SAAW,GAChBrf,KAAKsf,SAAW,KAEpBC,OAAOP,GACHhf,KAAKgf,QAAUA,EACfhf,KAAKwf,kBACLxf,KAAKmf,IAAM,GACXnf,KAAKsf,SAAW,KAChBtf,KAAKof,aAAe,KACpBpf,KAAKif,MAAO,EACZjf,KAAKqJ,OAETA,OACQrJ,KAAKyf,aAAa,aAGtBzf,KAAK0f,eACL1f,KAAKif,MAAO,EACZjf,KAAK8e,QAAQa,OAAOjoB,KAAK,CACrBkoB,MAAO5f,KAAK8e,QAAQc,MACpBjmB,MAAOqG,KAAKrG,MACZolB,QAAS/e,KAAK+e,QACdI,IAAKnf,KAAKmf,OAGlBU,QAAQzY,EAAQ7P,GACZ,IAAIgU,EAKJ,OAJIvL,KAAKyf,aAAarY,IAClB7P,EAAsC,QAA5BgU,EAAKvL,KAAKof,oBAAiC,IAAP7T,OAAgB,EAASA,EAAG/D,UAE9ExH,KAAKqf,SAAS3nB,KAAK,CAAE0P,OAAAA,EAAQ7P,SAAAA,IACtByI,KAEX0f,eACQ1f,KAAKkf,eAGTlf,KAAKmf,IAAMnf,KAAK8e,QAAQa,OAAOG,UAC/B9f,KAAKsf,SAAWtf,KAAK8e,QAAQiB,eAAe/f,KAAKmf,KACjDnf,KAAK8e,QAAQkB,GAAGhgB,KAAKsf,UAAWP,IAC5B/e,KAAKwf,kBACLxf,KAAKigB,iBACLjgB,KAAKof,aAAeL,EACpB/e,KAAKkgB,cAAcnB,MAEvB/e,KAAKkf,aAAevK,YAAW,KAC3B3U,KAAKmgB,QAAQ,UAAW,MACzBngB,KAAKgf,UAEZmB,QAAQ/Y,EAAQI,GACRxH,KAAKsf,UACLtf,KAAK8e,QAAQqB,QAAQngB,KAAKsf,SAAU,CAAElY,OAAAA,EAAQI,SAAAA,IAEtD4Y,UACIpgB,KAAKwf,kBACLxf,KAAKigB,iBAETT,kBACSxf,KAAKsf,UAGVtf,KAAK8e,QAAQuB,IAAIrgB,KAAKsf,UAE1BW,iBACIxL,aAAazU,KAAKkf,cAClBlf,KAAKkf,kBAAexc,EAExBwd,eAAc9Y,OAAEA,EAAMI,SAAEA,IACpBxH,KAAKqf,SACAnhB,QAAQoiB,GAAMA,EAAElZ,SAAWA,IAC3BtQ,SAASwpB,GAAMA,EAAE/oB,SAASiQ,KAEnCiY,aAAarY,GACT,OAAOpH,KAAKof,cAAgBpf,KAAKof,aAAahY,SAAWA,GCzFlD,MAAMmZ,GACjBvY,YAAY4X,EAAOpV,EAAS,GAAImV,GAC5B3f,KAAK4f,MAAQA,EACb5f,KAAKwK,OAASA,EACdxK,KAAK2f,OAASA,EACd3f,KAAKwgB,SAAW,GAChBxgB,KAAKygB,MAAQrC,GAAesC,OAC5B1gB,KAAK2gB,YAAa,EAClB3gB,KAAK4gB,WAAa,GAClB5gB,KAAKgf,QAAUhf,KAAK2f,OAAOX,QAC3Bhf,KAAK6gB,SAAW,IAAIhC,GAAK7e,KAAMqe,GAAe/Y,KAAMtF,KAAKwK,OAAQxK,KAAKgf,SACtEhf,KAAK8gB,YAAc,IAAIvC,IAAM,IAAMve,KAAK+gB,wBAAwB/gB,KAAK2f,OAAOqB,kBAC5EhhB,KAAK6gB,SAAShB,QAAQ,MAAM,KACxB7f,KAAKygB,MAAQrC,GAAe6C,OAC5BjhB,KAAK8gB,YAAYnC,QACjB3e,KAAK4gB,WAAW9pB,SAASoqB,GAAcA,EAAU7X,SACjDrJ,KAAK4gB,WAAa,MAEtB5gB,KAAKmhB,SAAQ,KACTnhB,KAAK8gB,YAAYnC,QACjB3e,KAAK2f,OAAOzL,IAAI,UAAW,SAASlU,KAAK4f,SAAS5f,KAAKohB,aACvDphB,KAAKygB,MAAQrC,GAAesC,OAC5B1gB,KAAK2f,OAAOpP,OAAOvQ,SAEvBA,KAAKqhB,SAASC,IACNthB,KAAKuhB,aAAevhB,KAAKwhB,aAG7BxhB,KAAK2f,OAAOzL,IAAI,UAAW,SAASlU,KAAK4f,QAAS0B,GAClDthB,KAAKygB,MAAQrC,GAAeqD,QAC5BzhB,KAAK8gB,YAAYlC,sBAErB5e,KAAK6gB,SAAShB,QAAQ,WAAW,KACxB7f,KAAK0hB,cAGV1hB,KAAK2f,OAAOzL,IAAI,UAAW,WAAWlU,KAAK4f,QAAS5f,KAAK6gB,SAAS7B,SAClEhf,KAAKygB,MAAQrC,GAAeqD,QAC5BzhB,KAAK8gB,YAAYlC,sBAErB5e,KAAKggB,GAAG3B,GAAesD,OAAO,CAAC5C,EAASI,KACpCnf,KAAKmgB,QAAQngB,KAAK+f,eAAeZ,GAAMJ,MAG/CgC,uBACI/gB,KAAK8gB,YAAYlC,kBACb5e,KAAK2f,OAAOiC,eACZ5hB,KAAK6hB,SAGbhqB,UAAUmnB,EAAUhf,KAAKgf,SACrB,GAAIhf,KAAK2gB,WACL,KAAM,uGAKN,OAFA3gB,KAAK2gB,YAAa,EAClB3gB,KAAK6hB,OAAO7C,GACLhf,KAAK6gB,SAGpBM,QAAQ5pB,GACJyI,KAAKggB,GAAG3B,GAAeyD,MAAOvqB,GAElC8pB,QAAQ9pB,GACJyI,KAAKggB,GAAG3B,GAAe5a,OAAQ6d,GAAW/pB,EAAS+pB,KAEvDtB,GAAGrmB,EAAOpC,GACNyI,KAAKwgB,SAAS9oB,KAAK,CAAEiC,MAAAA,EAAOpC,SAAAA,IAEhC8oB,IAAI1mB,GACAqG,KAAKwgB,SAAWxgB,KAAKwgB,SAAStiB,QAAQ6jB,GAASA,EAAKpoB,QAAUA,IAElEqoB,UACI,OAAOhiB,KAAK2f,OAAOiC,eAAiB5hB,KAAKiiB,WAE7CvqB,KAAKiC,EAAOolB,EAASC,EAAUhf,KAAKgf,SAChC,IAAKhf,KAAK2gB,WACN,KAAM,kBAAkBhnB,UAAcqG,KAAK4f,uEAE/C,IAAIsB,EAAY,IAAIrC,GAAK7e,KAAMrG,EAAOolB,EAASC,GAQ/C,OAPIhf,KAAKgiB,UACLd,EAAU7X,QAGV6X,EAAUxB,eACV1f,KAAK4gB,WAAWlpB,KAAKwpB,IAElBA,EAWXppB,YAAYknB,EAAUhf,KAAKgf,SACvBhf,KAAKygB,MAAQrC,GAAe8D,QAC5B,IAAIf,EAAU,KACVnhB,KAAK2f,OAAOzL,IAAI,UAAW,SAASlU,KAAK4f,SACzC5f,KAAKmgB,QAAQ9B,GAAeyD,MAAO,QAAS9hB,KAAKohB,YAGrDphB,KAAK6gB,SAAST,UACd,IAAI+B,EAAY,IAAItD,GAAK7e,KAAMqe,GAAe+D,MAAO,GAAIpD,GAMzD,OALAmD,EAAUtC,QAAQ,MAAM,IAAMsB,MAAWtB,QAAQ,WAAW,IAAMsB,MAClEgB,EAAU9Y,OACLrJ,KAAKgiB,WACNG,EAAUhC,QAAQ,KAAM,IAErBgC,EAQXE,UAAU1oB,EAAOolB,EAASI,GACtB,OAAOJ,EAEXuD,SAAS1C,GACL,OAAO5f,KAAK4f,QAAUA,EAE1BwB,UACI,OAAOphB,KAAK6gB,SAAS1B,IAEzBoD,SAASvD,GACLhf,KAAKygB,MAAQrC,GAAeoE,QAC5BxiB,KAAK6gB,SAAStB,OAAOP,GAEzB6C,OAAO7C,EAAUhf,KAAKgf,SACdhf,KAAKuhB,aAGTvhB,KAAKuiB,SAASvD,GAElBmB,QAAQxmB,EAAOolB,EAASI,GACpB,IAAI2C,MAAEA,EAAKre,MAAEA,EAAK2e,MAAEA,EAAK9c,KAAEA,GAAS+Y,GAEpC,GAAIc,GADS,CAAC2C,EAAOre,EAAO2e,EAAO9c,GACjBlF,QAAQzG,IAAU,GAAKwlB,IAAQnf,KAAKohB,UAClD,OAEJ,IAAIqB,EAAiBziB,KAAKqiB,UAAU1oB,EAAOolB,EAASI,GACpD,GAAIJ,IAAY0D,EACZ,KAAM,8EAEVziB,KAAKwgB,SACAtiB,QAAQ6jB,GAEU,MAAfA,EAAKpoB,MACEA,KAAWolB,MAAAA,OAAyC,EAASA,EAAQ7e,MAGrE6hB,EAAKpoB,QAAUA,IAGzBsE,KAAK8jB,GAASA,EAAKxqB,SAASkrB,EAAgBtD,KAErDY,eAAeZ,GACX,MAAO,cAAcA,IAEzBqC,WACI,OAAOxhB,KAAKygB,QAAUrC,GAAesC,OAEzCgC,YACI,OAAO1iB,KAAKygB,QAAUrC,GAAeqD,QAEzCQ,WACI,OAAOjiB,KAAKygB,QAAUrC,GAAe6C,OAEzCS,YACI,OAAO1hB,KAAKygB,QAAUrC,GAAeoE,QAEzCjB,YACI,OAAOvhB,KAAKygB,QAAUrC,GAAe8D,SCpL7C,ICAIS,GDAAC,GAAgB,WACnB,GAAoB,iBAAT/hB,MAAqBA,KAAM,OAAOA,KAC7C,GAAsB,iBAAX8M,QAAuBA,OAAQ,OAAOA,OACjD,MAAM,IAAI7S,MAAM,uCAGA,WAChB,GAAIkF,KAAM,OAAOA,KAKjB,GAA0B,iBAAfiR,YAA2BA,WAAY,OAAOA,WAKzD,IACCva,OAAO6S,eAAe7S,OAAOwK,UAAW,aAAc,CACrDhG,IAAK,WAAc,OAAO8E,MAC1BkR,cAAc,IAEd,MAAOzN,GAGR,OAAOmf,KAER,IAEC,OAAKC,YAAmBD,oBAGjBlsB,OAAOwK,UAAU2hB,YA1BT,eCLjB,GAA0B,iBAAf5R,WACV0R,GAAc1R,gBAEd,IACC0R,GAAcG,GACb,MAAOrf,YAGR,GADKkf,IAAiC,oBAAXhV,SAA0BgV,GAAchV,SAC9DgV,GAAe,MAAM,IAAI7nB,MAAM,mCAItC,IAAIioB,GAAkBJ,GAAYK,WAAaL,GAAYM,aAO3D,SAASC,GAAaC,EAAKC,GAiB1B,OAdIA,EACe,IAAIL,GAAgBI,EAAKC,GAGzB,IAAIL,GAAgBI,GAYpCJ,IACH,CAAC,aAAc,OAAQ,UAAW,UAAUjsB,SAAQ,SAASusB,GAC5D3sB,OAAO6S,eAAe2Z,GAAcG,EAAM,CACzCnoB,IAAK,WAAa,OAAO6nB,GAAgBM,SAQ5C,OAAiB,CACbC,aAAiBP,GAAkBG,GAAe,KAClDK,QAAiBC,IClDN,MAAMC,GACjBzb,cACIhI,KAAK0jB,cAAgB,EAEzBje,OAAOke,EAAYpsB,GACf,OAAIosB,EAAW3b,cAAgBtG,YACpBnK,EAASyI,KAAK4jB,cAAcD,IAG5BpsB,EADe,iBAAfosB,EACShe,KAAKC,MAAM+d,GAEf,IAEpBC,cAAcvf,GACV,MAAMJ,EAAO,IAAIc,SAASV,GACpBwf,EAAU,IAAIC,YACpB,OAAO9jB,KAAK+jB,iBAAiB1f,EAAQJ,EAAM4f,GAE/CE,iBAAiB1f,EAAQJ,EAAM4f,GAC3B,MAAMG,EAAY/f,EAAKggB,SAAS,GAC1BC,EAAYjgB,EAAKggB,SAAS,GAChC,IAAIE,EAASnkB,KAAK0jB,cAAgB,EAClC,MAAM9D,EAAQiE,EAAQpe,OAAOpB,EAAO9L,MAAM4rB,EAAQA,EAASH,IAC3DG,GAAkBH,EAClB,MAAMrqB,EAAQkqB,EAAQpe,OAAOpB,EAAO9L,MAAM4rB,EAAQA,EAASD,IAC3DC,GAAkBD,EAElB,MAAO,CAAE/E,IAAK,KAAMS,MAAOA,EAAOjmB,MAAOA,EAAOolB,QADnCpZ,KAAKC,MAAMie,EAAQpe,OAAOpB,EAAO9L,MAAM4rB,EAAQ9f,EAAOF,gBC5B3E,IAAIuF,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YAQtE,MAAMjM,GAAO,OACE,MAAM8tB,GAgBjBpc,YAAYqc,EAAUxqB,GAClBmG,KAAK0T,YAAc,KACnB1T,KAAKskB,SAAW,GAChBtkB,KAAKqkB,SAAW,GAChBrkB,KAAK4C,QAAUjC,GACfX,KAAKwK,OAAS,GACdxK,KAAKgf,QPlCkB,IOmCvBhf,KAAKukB,UAAYvB,gBACjBhjB,KAAKwkB,oBAAsB,IAC3BxkB,KAAKykB,kBAAoB,IACzBzkB,KAAK0kB,oBAAiBhiB,EACtB1C,KAAK2kB,oBAAsB,KAC3B3kB,KAAKmf,IAAM,EACXnf,KAAK4kB,OAAStuB,GACd0J,KAAK6kB,KAAO,KACZ7kB,KAAK8kB,WAAa,GAClB9kB,KAAK+kB,WAAa,IAAItB,GACtBzjB,KAAKglB,qBAAuB,CACxBjc,KAAM,GACN+Y,MAAO,GACPre,MAAO,GACPqE,QAAS,IAEb9H,KAAKqkB,SAAW,GAAGA,KAAY/F,GAAW2G,aACtCprB,MAAAA,OAAyC,EAASA,EAAQ2Q,UAC1DxK,KAAKwK,OAAS3Q,EAAQ2Q,SACtB3Q,MAAAA,OAAyC,EAASA,EAAQ+I,WAC1D5C,KAAK4C,QAAUlM,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI0H,KAAK4C,SAAU/I,EAAQ+I,WACtE/I,MAAAA,OAAyC,EAASA,EAAQmlB,WAC1Dhf,KAAKgf,QAAUnlB,EAAQmlB,UACvBnlB,MAAAA,OAAyC,EAASA,EAAQ+qB,UAC1D5kB,KAAK4kB,OAAS/qB,EAAQ+qB,SACtB/qB,MAAAA,OAAyC,EAASA,EAAQ0qB,aAC1DvkB,KAAKukB,UAAY1qB,EAAQ0qB,YACzB1qB,MAAAA,OAAyC,EAASA,EAAQ2qB,uBAC1DxkB,KAAKwkB,oBAAsB3qB,EAAQ2qB,sBACnC3qB,MAAAA,OAAyC,EAASA,EAAQ4qB,qBAC1DzkB,KAAKykB,kBAAoB5qB,EAAQ4qB,mBACrCzkB,KAAKghB,kBAAoBnnB,MAAAA,OAAyC,EAASA,EAAQmnB,kBAC7EnnB,EAAQmnB,iBACPtC,GACQ,CAAC,IAAM,IAAM,IAAM,KAAOA,EAAQ,IAAM,IAEvD1e,KAAKklB,QAAUrrB,MAAAA,OAAyC,EAASA,EAAQqrB,QACnErrB,EAAQqrB,OACR,CAACnG,EAASxnB,IACDA,EAASoO,KAAKyE,UAAU2U,IAEvC/e,KAAKyF,QAAU5L,MAAAA,OAAyC,EAASA,EAAQ4L,QACnE5L,EAAQ4L,OACRzF,KAAK+kB,WAAWtf,OAAOsc,KAAK/hB,KAAK+kB,YACvC/kB,KAAKmlB,eAAiB,IAAI5G,IAAM,IAAM7U,GAAU1J,UAAM,OAAQ,GAAQ,kBAC5DA,KAAKolB,aACXplB,KAAKqlB,cACLrlB,KAAKghB,kBAKbqE,UACQrlB,KAAK6kB,OAGT7kB,KAAK6kB,KAAO,IAAI7kB,KAAKukB,UAAUvkB,KAAKslB,cAAe,GAAI,KAAMtlB,KAAK4C,SAC9D5C,KAAK6kB,OAEL7kB,KAAK6kB,KAAKU,WAAa,cACvBvlB,KAAK6kB,KAAKW,OAAS,IAAMxlB,KAAKylB,cAC9BzlB,KAAK6kB,KAAKrhB,QAAWC,GAAUzD,KAAK0lB,aAAajiB,GACjDzD,KAAK6kB,KAAKc,UAAahsB,GAAUqG,KAAK4lB,cAAcjsB,GACpDqG,KAAK6kB,KAAKgB,QAAWlsB,GAAUqG,KAAK8lB,aAAansB,KASzDyrB,WAAWpP,EAAMsL,GACb,OAAO,IAAI9lB,SAAQ,CAACC,EAASsqB,KACzB,IACQ/lB,KAAK6kB,OACL7kB,KAAK6kB,KAAKgB,QAAU,aAChB7P,EACAhW,KAAK6kB,KAAK/C,MAAM9L,EAAMsL,GAAU,IAGhCthB,KAAK6kB,KAAK/C,QAEd9hB,KAAK6kB,KAAO,KAEZ7kB,KAAK0kB,gBAAkBsB,cAAchmB,KAAK0kB,gBAC1C1kB,KAAKmlB,eAAexG,SAExBljB,EAAQ,CAAEgI,MAAO,KAAMlK,MAAM,IAEjC,MAAOkK,GACHhI,EAAQ,CAAEgI,MAAOA,EAAOlK,MAAM,QAO1C2a,IAAI+R,EAAM/b,EAAK3Q,GACXyG,KAAK4kB,OAAOqB,EAAM/b,EAAK3Q,GAS3B2sB,OAAO3uB,GACHyI,KAAKglB,qBAAqBjc,KAAKrR,KAAKH,GASxC4pB,QAAQ5pB,GACJyI,KAAKglB,qBAAqBlD,MAAMpqB,KAAKH,GASzC8pB,QAAQ9pB,GACJyI,KAAKglB,qBAAqBvhB,MAAM/L,KAAKH,GASzC8qB,UAAU9qB,GACNyI,KAAKglB,qBAAqBld,QAAQpQ,KAAKH,GAK3C4uB,kBACI,OAAQnmB,KAAK6kB,MAAQ7kB,KAAK6kB,KAAKzb,YAC3B,KAAK+U,GAAciI,WACf,MAAO,aACX,KAAKjI,GAAcpV,KACf,MAAO,OACX,KAAKoV,GAAckI,QACf,MAAO,UACX,QACI,MAAO,UAMnBzE,cACI,MAAkC,SAA3B5hB,KAAKmmB,kBAOhB5V,OAAOuO,GACH9e,KAAKskB,SAAWtkB,KAAKskB,SAASpmB,QAAQhB,GAAMA,EAAEkkB,YAActC,EAAQsC,YAExEtC,QAAQc,EAAO0G,EAAa,IACxB,IAAIC,EAAO,IAAIhG,GAAqBX,EAAO0G,EAAYtmB,MAEvD,OADAA,KAAKskB,SAAS5sB,KAAK6uB,GACZA,EAEX7uB,KAAK6B,GACD,IAAIqmB,MAAEA,EAAKjmB,MAAEA,EAAKolB,QAAEA,EAAOI,IAAEA,GAAQ5lB,EACjChC,EAAW,KACXyI,KAAKklB,OAAO3rB,GAAOgK,IACf,IAAIgI,EACiB,QAApBA,EAAKvL,KAAK6kB,YAAyB,IAAPtZ,GAAyBA,EAAGlC,KAAK9F,OAGtEvD,KAAKkU,IAAI,OAAQ,GAAG0L,KAASjmB,MAAUwlB,KAAQJ,GAC3C/e,KAAK4hB,cACLrqB,IAGAyI,KAAK8kB,WAAWptB,KAAKH,GAG7BquB,cAAcY,GACVxmB,KAAKyF,OAAO+gB,EAAWjtB,MAAO2Q,IAC1B,IAAI0V,MAAEA,EAAKjmB,MAAEA,EAAKolB,QAAEA,EAAOI,IAAEA,GAAQjV,EACjCiV,GAAOA,IAAQnf,KAAK2kB,oBACpB3kB,KAAK2kB,oBAAsB,KAEtBhrB,KAAWolB,MAAAA,OAAyC,EAASA,EAAQ7e,OAC1EF,KAAKymB,kBAETzmB,KAAKkU,IAAI,UAAW,GAAG6K,EAAQ3X,QAAU,MAAMwY,KAASjmB,KAAUwlB,GAAO,IAAMA,EAAM,KAAQ,KAAMJ,GACnG/e,KAAKskB,SACApmB,QAAQ4gB,GAAYA,EAAQwD,SAAS1C,KACrC9oB,SAASgoB,GAAYA,EAAQqB,QAAQxmB,EAAOolB,EAASI,KAC1Dnf,KAAKglB,qBAAqBld,QAAQhR,SAASS,GAAaA,EAAS2S,QAMzEob,cACI,OAAOtlB,KAAK0mB,cAAc1mB,KAAKqkB,SAAU3tB,OAAO4B,OAAO,GAAI0H,KAAKwK,OAAQ,CAAEmc,IPvP/D,WO4Pf7G,UACI,IAAI8G,EAAS5mB,KAAKmf,IAAM,EAOxB,OANIyH,IAAW5mB,KAAKmf,IAChBnf,KAAKmf,IAAM,EAGXnf,KAAKmf,IAAMyH,EAER5mB,KAAKmf,IAAIvd,WAOpBwR,QAAQ9D,GACJtP,KAAK0T,YAAcpE,EACnB,IACItP,KAAKskB,SAASxtB,SAASgoB,GAAYA,EAAQ6B,YACvC7B,EAAQmD,YACRnD,EAAQpnB,KAAK2mB,GAAexN,aAAc,CACtCA,aAAcvB,MAG1B,MAAO7L,GACH6O,QAAQ4B,IAAI,QAASzQ,GACrB6O,QAAQ4B,IAAI,QAASzQ,GACrB6O,QAAQ4B,IAAI,QAASzQ,IAG7BgiB,cACIzlB,KAAKkU,IAAI,YAAa,gBAAgBlU,KAAKslB,iBAC3CtlB,KAAK6mB,mBACL7mB,KAAKmlB,eAAexG,QACpB3e,KAAKymB,kBACLzmB,KAAKglB,qBAAqBjc,KAAKjS,SAASS,GAAaA,MAEzDuuB,aAAansB,GACTqG,KAAKkU,IAAI,YAAa,QAASva,GAC/BqG,KAAK8mB,oBACL9mB,KAAK0kB,gBAAkBsB,cAAchmB,KAAK0kB,gBAC1C1kB,KAAKmlB,eAAevG,kBACpB5e,KAAKglB,qBAAqBlD,MAAMhrB,SAASS,GAAaA,EAASoC,KAEnE+rB,aAAajiB,GACTzD,KAAKkU,IAAI,YAAazQ,EAAMqE,SAC5B9H,KAAK8mB,oBACL9mB,KAAKglB,qBAAqBvhB,MAAM3M,SAASS,GAAaA,EAASkM,KAEnEqjB,oBACI9mB,KAAKskB,SAASxtB,SAASgoB,GAAYA,EAAQqB,QAAQ9B,GAAe5a,SAEtEijB,cAAcpgB,EAAKkE,GACf,GAAmC,IAA/B9T,OAAOgK,KAAK8J,GAAQrO,OACpB,OAAOmK,EAEX,MAAMygB,EAASzgB,EAAIqP,MAAM,MAAQ,IAAM,IAEvC,MAAO,GAAGrP,IAAMygB,IADF,IAAIjiB,gBAAgB0F,KAGtCqc,mBACQ7mB,KAAK4hB,eAAiB5hB,KAAK8kB,WAAW3oB,OAAS,IAC/C6D,KAAK8kB,WAAWhuB,SAASS,GAAaA,MACtCyI,KAAK8kB,WAAa,IAG1B2B,kBACIzmB,KAAK2kB,oBAAsB,KAC3B3kB,KAAK0kB,gBAAkBsB,cAAchmB,KAAK0kB,gBAC1C1kB,KAAK0kB,eAAiBsC,aAAY,IAAMhnB,KAAKinB,kBAAkBjnB,KAAKwkB,qBAExEyC,iBACI,IAAI1b,EACJ,GAAKvL,KAAK4hB,cAAV,CAGA,GAAI5hB,KAAK2kB,oBAIL,OAHA3kB,KAAK2kB,oBAAsB,KAC3B3kB,KAAKkU,IAAI,YAAa,iEACD,QAApB3I,EAAKvL,KAAK6kB,YAAyB,IAAPtZ,GAAyBA,EAAGuW,MPzUtC,IOyU6D,qBAGpF9hB,KAAK2kB,oBAAsB3kB,KAAK8f,UAChC9f,KAAKoT,QAAQpT,KAAK0T,eChVnB,MAAMwT,GACTlf,YAAY2X,EAAQ/c,EAAS0S,EAAQ6R,GACjC,MAAMb,EAAa,GACb1G,EAAsB,MAAduH,EAAoB,YAAY7R,IAAW,YAAYA,KAAU6R,IACzEC,EAAYxkB,EAAuB,cAAEkE,MAAM,KAAK,GAClDsgB,IACAd,EAAuB,WAAIc,GAE/BpnB,KAAK6T,aAAe8L,EAAOb,QAAQc,EAAO0G,GAE9Ce,kBAAkBtI,GACd,MAAMuI,EAAU,CACZC,IAAK,GACLC,IAAK,IAQT,MANqB,WAAjBzI,EAAQ7e,MAAsC,WAAjB6e,EAAQ7e,OACrConB,EAAQC,IAAME,GAA+B1I,EAAQ5I,QAAS4I,EAAQzD,SAErD,WAAjByD,EAAQ7e,MAAsC,WAAjB6e,EAAQ7e,OACrConB,EAAQE,IAAMC,GAA+B1I,EAAQ5I,QAAS4I,EAAQ2I,aAEnEJ,EAQXtH,GAAGrmB,EAAOpC,GAaN,OAZAyI,KAAK6T,aAAamM,GAAGrmB,GAAQolB,IACzB,IAAI4I,EAAkB,CAClBrS,OAAQyJ,EAAQzJ,OAChB6F,MAAO4D,EAAQ5D,MACfyM,iBAAkB7I,EAAQ6I,iBAC1BC,UAAW9I,EAAQ7e,KACnBqnB,IAAK,GACLC,IAAK,IAETG,EAAkBjxB,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIqvB,GAAkB3nB,KAAKqnB,kBAAkBtI,IAC3FxnB,EAASowB,MAEN3nB,KAKXnI,UAAUN,EAAW,UAQjB,OAPAyI,KAAK6T,aAAawN,SAAS9f,GAAMhK,EAAS,qBAAsBgK,KAChEvB,KAAK6T,aAAasN,SAAQ,IAAM5pB,EAAS,YACzCyI,KAAK6T,aACAhc,YACAgoB,QAAQ,MAAM,IAAMtoB,EAAS,gBAC7BsoB,QAAQ,SAAUte,GAAMhK,EAAS,qBAAsBgK,KACvDse,QAAQ,WAAW,IAAMtoB,EAAS,4BAChCyI,KAAK6T,cCtDb,MAAMiU,WAA6B3N,GACtCnS,YAAY1B,GAAK1D,QAAEA,EAAU,GAAE0S,OAAEA,EAAMyS,SAAEA,EAAQ5M,MAAEA,EAAKna,MAAEA,IACtD+T,MAAMzO,EAAK,CAAE1D,QAAAA,EAAS0S,OAAAA,EAAQtU,MAAAA,IAC9BhB,KAAKgoB,cAAgB,IAAId,GAAuBa,EAAUnlB,EAAS0S,EAAQ6F,GAC3Enb,KAAKioB,UAAYF,EAOrB/H,GAAGrmB,EAAOpC,GAIN,OAHKyI,KAAKioB,UAAUrG,eAChB5hB,KAAKioB,UAAU5C,UAEZrlB,KAAKgoB,cAAchI,GAAGrmB,EAAOpC,ICjB5C,IAAImS,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YAItE,MAAM0H,GAAoBpC,GAAQA,EAAIqC,KAAOrC,EAAIC,SAAWD,EAAIsC,mBAAqBtC,EAAIpE,OAASkC,KAAKyE,UAAUvC,GAqBjH,SAASwC,GAAeC,EAAUC,EAAYnE,EAAQE,EAAKzM,EAASquB,EAAYjlB,GAC5E,OAAOyG,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIxE,SAAQ,CAACC,EAAS0H,KACzBmH,EAAQhE,EAZM,EAACF,EAAQvM,EAASquB,EAAYjlB,KACpD,MAAMuH,EAAS,CAAEpE,OAAAA,EAAQxD,SAAU/I,MAAAA,OAAyC,EAASA,EAAQ+I,UAAY,IACzG,MAAe,QAAXwD,EACOoE,GAEXA,EAAO5H,QAAUlM,OAAO4B,OAAO,CAAE,eAAgB,oBAAsBuB,MAAAA,OAAyC,EAASA,EAAQ+I,SACjI4H,EAAOvH,KAAO0C,KAAKyE,UAAUnH,GACtBvM,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIkS,GAAS0d,KAK3Bzd,CAAkBrE,EAAQvM,EAASquB,EAAYjlB,IACvDrH,MAAM2H,IACP,IAAKA,EAAO8D,GACR,MAAM9D,EACV,OAAI1J,MAAAA,OAAyC,EAASA,EAAQ6Q,eACnDjP,EAAQ8H,GACZA,EAAOmC,UAEb9J,MAAMrC,GAASkC,EAAQlC,KACvBoR,OAAOlH,GAhCJ,EAACA,EAAON,KACxB,GAA0B,mBAAfM,EAAMiC,KACb,OAAOvC,EAAOM,GAElBA,EAAMiC,OAAO9J,MAAMiM,GACR1E,EAAO,CACV2E,QAASmC,GAAiBpC,GAC1BT,QAAS3D,MAAAA,OAAqC,EAASA,EAAM2D,SAAW,SAyBlDwD,CAAYnH,EAAON,WAI9C,SAASjI,GAAIoP,EAAShE,EAAKzM,EAASquB,GACvC,OAAOxe,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,MAAOhE,EAAKzM,EAASquB,MAGrD,SAASrd,GAAKP,EAAShE,EAAKrD,EAAMpJ,EAASquB,GAC9C,OAAOxe,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,OAAQhE,EAAKzM,EAASquB,EAAYjlB,MAQlE,SAASsN,GAAOjG,EAAShE,EAAKrD,EAAMpJ,EAASquB,GAChD,OAAOxe,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,SAAUhE,EAAKzM,EAASquB,EAAYjlB,MC/DpE,MCAMtC,GAAkB,CAAE,gBAAiB,oBCDlD,IAAI+I,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YCNtE,IAAImH,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YAKtE,MAAM4lB,GAAyB,CAC3BtR,MAAO,IACPsN,OAAQ,EACRiE,OAAQ,CACJ5R,OAAQ,OACRD,MAAO,QAGT8R,GAAuB,CACzBC,aAAc,OACdC,YAAa,2BACbjO,QAAQ,GAEL,MAAMkO,GACTxgB,YAAY1B,EAAK1D,EAAU,GAAI6lB,EAAUznB,GACrChB,KAAKsG,IAAMA,EACXtG,KAAK4C,QAAUA,EACf5C,KAAKyoB,SAAWA,EAChBzoB,KAAKgB,MAAQA,EAajB0nB,eAAetiB,EAAQ8E,EAAMyd,EAAUC,GACnC,OAAOlf,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,IAAIiD,EACJ,MAAMpJ,EAAUnD,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI+vB,IAAuBO,GACjEhmB,EAAUlM,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI0H,KAAK4C,SAAsB,SAAXwD,GAAqB,CAAE,WAAYrE,OAAOlI,EAAQygB,UAC9F,oBAAThZ,MAAwBqnB,aAAoBrnB,MACnD2B,EAAO,IAAI2B,SACX3B,EAAKzK,OAAO,eAAgBqB,EAAQyuB,cACpCrlB,EAAKzK,OAAO,GAAImwB,IAES,oBAAb/jB,UAA4B+jB,aAAoB/jB,UAC5D3B,EAAO0lB,EACP1lB,EAAKzK,OAAO,eAAgBqB,EAAQyuB,gBAGpCrlB,EAAO0lB,EACP/lB,EAAQ,iBAAmB,WAAW/I,EAAQyuB,eAC9C1lB,EAAQ,gBAAkB/I,EAAQ0uB,aAEtC,MAAMM,EAAQ7oB,KAAK8oB,cAAc5d,GAC3B2B,QAAY7L,EAAM,GAAGhB,KAAKsG,cAAcuiB,IAAS,CACnDziB,OAAAA,EACAnD,KAAMA,EACNL,QAAAA,IAEJ,GAAIiK,EAAIxF,GAGJ,MAAO,CAAE9N,KAAM,CAAEwvB,IAAKF,GAASplB,MAAO,MAItC,MAAO,CAAElK,KAAM,KAAMkK,YADDoJ,EAAInH,QAIhC,MAAOjC,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OAcjCulB,OAAO9d,EAAMyd,EAAUC,GACnB,OAAOlf,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK0oB,eAAe,OAAQxd,EAAMyd,EAAUC,MAa3DxsB,OAAO8O,EAAMyd,EAAUC,GACnB,OAAOlf,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK0oB,eAAe,MAAOxd,EAAMyd,EAAUC,MAS1DK,KAAKC,EAAUC,GACX,OAAOzf,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,MAAO,CAAEzG,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,kBAAmB,CAAEmiB,SAAUzoB,KAAKyoB,SAAUW,UAAWF,EAAUG,eAAgBF,GAAU,CAAEvmB,QAAS5C,KAAK4C,UAC1Ia,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OAUjC6lB,gBAAgBpe,EAAMsC,GAClB,OAAO9D,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM6oB,EAAQ7oB,KAAK8oB,cAAc5d,GACjC,IAAI3R,QAAasR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,mBAAmBuiB,IAAS,CAAErb,UAAAA,GAAa,CAAE5K,QAAS5C,KAAK4C,UACrG,MAAM2mB,EAAY,GAAGvpB,KAAKsG,MAAM/M,EAAKgwB,YAErC,OADAhwB,EAAO,CAAEgwB,UAAAA,GACF,CAAEhwB,KAAAA,EAAMkK,MAAO,KAAM8lB,UAAAA,GAEhC,MAAO9lB,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,EAAO8lB,UAAW,UASnDC,SAASte,GACL,OAAOxB,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAM6oB,EAAQ7oB,KAAK8oB,cAAc5d,GAC3B2B,QAAY3R,GAAI8E,KAAKgB,MAAO,GAAGhB,KAAKsG,cAAcuiB,IAAS,CAC7DjmB,QAAS5C,KAAK4C,QACd8H,eAAe,IAGnB,MAAO,CAAEnR,WADUsT,EAAIlJ,OACRF,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OASjCgmB,aAAave,GACT,IACI,MAAM2d,EAAQ7oB,KAAK8oB,cAAc5d,GAC3Bwe,EAAY,GAAG1pB,KAAKsG,qBAAqBuiB,IAE/C,MAAO,CAAEtvB,KADI,CAAEmwB,UAAAA,GACAjmB,MAAO,KAAMimB,UAAAA,GAEhC,MAAOjmB,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,EAAOimB,UAAW,OAQ/CnZ,OAAOoZ,GACH,OAAOjgB,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,MAAO,CAAEzG,WADUgX,GAAOvQ,KAAKgB,MAAO,GAAGhB,KAAKsG,cAActG,KAAKyoB,WAAY,CAAEmB,SAAUD,GAAS,CAAE/mB,QAAS5C,KAAK4C,UACnGa,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OAsCjComB,KAAK3e,EAAMrR,EAASquB,GAChB,OAAOxe,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMiD,EAAOvM,OAAO4B,OAAO5B,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI6vB,IAAyBtuB,GAAU,CAAEktB,OAAQ7b,GAAQ,KAEhH,MAAO,CAAE3R,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,mBAAmBtG,KAAKyoB,WAAYxlB,EAAM,CAAEL,QAAS5C,KAAK4C,SAAWslB,GAClGzkB,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OAIjCqlB,cAAc5d,GACV,MAAO,GAAGlL,KAAKyoB,YAAYvd,KCzP5B,MAAM4e,WFUN,MACH9hB,YAAY1B,EAAK1D,EAAU,GAAI5B,GAC3BhB,KAAKsG,IAAMA,EACXtG,KAAK4C,QAAUlM,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIqI,IAAkBiC,GACjE5C,KAAKgB,MAAQA,EAKjB+oB,cACI,OAAOrgB,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,MAAO,CAAEzG,WADU2B,GAAI8E,KAAKgB,MAAO,GAAGhB,KAAKsG,aAAc,CAAE1D,QAAS5C,KAAK4C,UAC1Da,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OASjCumB,UAAUrX,GACN,OAAOjJ,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,MAAO,CAAEzG,WADU2B,GAAI8E,KAAKgB,MAAO,GAAGhB,KAAKsG,cAAcqM,IAAM,CAAE/P,QAAS5C,KAAK4C,UAChEa,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OAUjCwmB,aAAatX,EAAI9Y,EAAU,CAAEqwB,QAAQ,IACjC,OAAOxgB,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,MAAO,CAAEzG,YADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,aAAc,CAAEqM,GAAAA,EAAIxZ,KAAMwZ,EAAIuX,OAAQrwB,EAAQqwB,QAAU,CAAEtnB,QAAS5C,KAAK4C,WAChGzJ,KAAMsK,MAAO,MAErC,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OASjC0mB,aAAaxX,EAAI9Y,GACb,OAAO6P,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IACI,MAAMzG,QHff,SAAa+Q,EAAShE,EAAKrD,EAAMpJ,EAASquB,GAC7C,OAAOxe,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,OAAOqK,GAAeC,EAAS,MAAOhE,EAAKzM,EAASquB,EAAYjlB,MGarCmN,CAAIpQ,KAAKgB,MAAO,GAAGhB,KAAKsG,cAAcqM,IAAM,CAAEA,GAAAA,EAAIxZ,KAAMwZ,EAAIuX,OAAQrwB,EAAQqwB,QAAU,CAAEtnB,QAAS5C,KAAK4C,UACzH,MAAO,CAAErJ,KAAAA,EAAMkK,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OASjC2mB,YAAYzX,GACR,OAAOjJ,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,MAAO,CAAEzG,WADUsR,GAAK7K,KAAKgB,MAAO,GAAGhB,KAAKsG,cAAcqM,UAAY,GAAI,CAAE/P,QAAS5C,KAAK4C,UAC3Ea,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,OAUjC4mB,aAAa1X,GACT,OAAOjJ,GAAU1J,UAAM,OAAQ,GAAQ,YACnC,IAEI,MAAO,CAAEzG,WADUgX,GAAOvQ,KAAKgB,MAAO,GAAGhB,KAAKsG,cAAcqM,IAAM,GAAI,CAAE/P,QAAS5C,KAAK4C,UACvEa,MAAO,MAE1B,MAAOA,GACH,MAAO,CAAElK,KAAM,KAAMkK,MAAAA,SE3GjCuE,YAAY1B,EAAK1D,EAAU,GAAI5B,GAC3B+T,MAAMzO,EAAK1D,EAAS5B,GAOxBvB,KAAKkT,GACD,OAAO,IAAI6V,GAAexoB,KAAKsG,IAAKtG,KAAK4C,QAAS+P,EAAI3S,KAAKgB,QCXnE,IAAI0I,GAAwC,SAAU3D,EAAS4D,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIpO,WAAU,SAAUC,EAAS0H,GAC/C,SAAS2G,EAAU5P,GAAS,IAAM6P,EAAKF,EAAUtH,KAAKrI,IAAW,MAAOqH,GAAK4B,EAAO5B,IACpF,SAAS0D,EAAS/K,GAAS,IAAM6P,EAAKF,EAAiB,MAAE3P,IAAW,MAAOqH,GAAK4B,EAAO5B,IACvF,SAASwI,EAAKxG,GAJlB,IAAerJ,EAIaqJ,EAAOd,KAAOhH,EAAQ8H,EAAOrJ,QAJ1CA,EAIyDqJ,EAAOrJ,MAJhDA,aAAiB0P,EAAI1P,EAAQ,IAAI0P,GAAE,SAAUnO,GAAWA,EAAQvB,OAIT0B,KAAKkO,EAAW7E,GAClG8E,GAAMF,EAAYA,EAAUG,MAAMjE,EAAS4D,GAAc,KAAKpH,YAUtE,MAAM8O,GAAkB,CACpBiE,OAAQ,SACRhE,kBAAkB,EAClBC,gBAAgB,EAChBC,oBAAoB,EACpB5O,QAASjC,GAOE,MAAM2pB,GAajBtiB,YAAYuiB,EAAaC,EAAa3wB,GAGlC,GAFAmG,KAAKuqB,YAAcA,EACnBvqB,KAAKwqB,YAAcA,GACdD,EACD,MAAM,IAAIzvB,MAAM,4BACpB,IAAK0vB,EACD,MAAM,IAAI1vB,MAAM,4BACpByvB,EAAiCA,ECxC1BvjB,QAAQ,MAAO,IDyCtB,MAAM4K,EAAWlb,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAI+Y,IAAkBxX,GACnEmG,KAAKyqB,QAAU,GAAGF,YAClBvqB,KAAK0qB,YAAc,GAAGH,gBAA0BvjB,QAAQ,OAAQ,MAChEhH,KAAK2qB,QAAU,GAAGJ,YAClBvqB,KAAK4qB,WAAa,GAAGL,eACrBvqB,KAAKsV,OAAS1D,EAAS0D,OACvBtV,KAAKgB,MAAQ4Q,EAAS5Q,MACtBhB,KAAK4C,QAAUlM,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIqI,GAAkB9G,MAAAA,OAAyC,EAASA,EAAQ+I,SAC3H5C,KAAKkb,KAAOlb,KAAK6qB,wBAAwBjZ,GACzC5R,KAAK+nB,SAAW/nB,KAAK8qB,oBAAoBp0B,OAAO4B,OAAO,CAAEsK,QAAS5C,KAAK4C,SAAWgP,EAASmW,WAS3FgD,cACA,OAAO,IAAIjB,GAAsB9pB,KAAK4qB,WAAY5qB,KAAKgrB,kBAAmBhrB,KAAKgB,OAOnFvB,KAAK0b,GACD,MAAM7U,EAAM,GAAGtG,KAAKyqB,WAAWtP,IAC/B,OAAO,IAAI2M,GAAqBxhB,EAAK,CACjC1D,QAAS5C,KAAKgrB,kBACd1V,OAAQtV,KAAKsV,OACbyS,SAAU/nB,KAAK+nB,SACf5M,MAAAA,EACAna,MAAOhB,KAAKgB,QAYpBga,IAAIxkB,EAAIgU,GAAQ6P,KAAEA,GAAO,EAAK7E,MAAEA,EAAQ,MAAU,IAE9C,OADaxV,KAAKirB,uBACNjQ,IAAIxkB,EAAIgU,EAAQ,CAAE6P,KAAAA,EAAM7E,MAAAA,IAOxC0V,mBAAmBrX,GACf,OAAO,IAAIrY,SAASC,GAAYiO,GAAU1J,UAAM,OAAQ,GAAQ,YAC5D,UACUA,KAAKmrB,mBAAmBtX,GAC9B,MAAMuX,EAAoBprB,KAAKqrB,mBAAmBlvB,OAClD,IAAKivB,EAAmB,CACpB,MAAM3nB,MAAEA,SAAgBzD,KAAK+nB,SAAS3C,aACtC,GAAI3hB,EACA,OAAOhI,EAAQ,CAAEgI,MAAAA,IAEzB,OAAOhI,EAAQ,CAAEgI,MAAO,KAAMlK,KAAM,CAAE6xB,kBAAAA,KAE1C,MAAO3nB,GACH,OAAOhI,EAAQ,CAAEgI,MAAAA,UAI7B0nB,mBAAmBtX,GACf,OAAOnK,GAAU1J,UAAM,OAAQ,GAAQ,YAC9B6T,EAAa2N,mBACRxhB,KAAKsrB,cAAczX,OAOrCwX,mBACI,OAAOrrB,KAAK+nB,SAASzD,SAEzBuG,yBAAwBvZ,iBAAEA,EAAgBC,eAAEA,EAAcC,mBAAEA,EAAkBO,aAAEA,EAAYnP,QAAEA,EAAO5B,MAAEA,IACnG,MAAMuqB,EAAc,CAChBC,cAAe,UAAUxrB,KAAKwqB,cAC9BiB,OAAQ,GAAGzrB,KAAKwqB,eAEpB,OAAO,IAAI9Y,GAAmB,CAC1BpL,IAAKtG,KAAK2qB,QACV/nB,QAASlM,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIsK,GAAU2oB,GACnDja,iBAAAA,EACAC,eAAAA,EACAC,mBAAAA,EACAO,aAAAA,EACA/Q,MAAAA,IAGR8pB,oBAAoBjxB,GAChB,OAAO,IAAIuqB,GAAepkB,KAAK0qB,YAAah0B,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIuB,GAAU,CAAE2Q,OAAQ9T,OAAO4B,OAAO5B,OAAO4B,OAAO,GAAIuB,MAAAA,OAAyC,EAASA,EAAQ2Q,QAAS,CAAEihB,OAAQzrB,KAAKwqB,iBAEtNS,uBACI,OAAO,IAAIhQ,GAAgBjb,KAAKyqB,QAAS,CACrC7nB,QAAS5C,KAAKgrB,kBACd1V,OAAQtV,KAAKsV,OACbtU,MAAOhB,KAAKgB,QAGpBgqB,kBACI,IAAIzf,EAAIC,EACR,MAAM5I,EAAU5C,KAAK4C,QACf8oB,EAAwG,QAA1FlgB,EAAoC,QAA9BD,EAAKvL,KAAKkb,KAAKtM,iBAA8B,IAAPrD,OAAgB,EAASA,EAAGsF,oBAAiC,IAAPrF,EAAgBA,EAAKxL,KAAKwqB,YAGhJ,OAFA5nB,EAAgB,OAAI5C,KAAKwqB,YACzB5nB,EAAuB,cAAI,UAAU8oB,IAC9B9oB,EAEX0oB,cAAczX,GACV,OAAO,IAAIrY,SAAQ,CAACC,EAAS0H,KACzB0Q,EACK/b,cACA+nB,QAAQ,MAAM,KACf7f,KAAK+nB,SAASxX,OAAOsD,GACdpY,GAAQ,MAEdokB,QAAQ,SAAUte,GAAM4B,EAAO5B,SExKhD,MCHMoqB,GAAmB,GAgBzB,SAASC,GAAS1xB,EAAO2xB,EAAQv1B,GAC7B,IAAIw1B,EACJ,MAAMC,EAAc,IAAI9vB,IACxB,SAASmI,EAAI4nB,GACT,GAAI/0B,EAAeiD,EAAO8xB,KACtB9xB,EAAQ8xB,EACJF,GAAM,CACN,MAAMG,GAAaN,GAAiBxvB,OACpC,IAAK,MAAM+vB,KAAcH,EACrBG,EAAW,KACXP,GAAiBj0B,KAAKw0B,EAAYhyB,GAEtC,GAAI+xB,EAAW,CACX,IAAK,IAAI/vB,EAAI,EAAGA,EAAIyvB,GAAiBxvB,OAAQD,GAAK,EAC9CyvB,GAAiBzvB,GAAG,GAAGyvB,GAAiBzvB,EAAI,IAEhDyvB,GAAiBxvB,OAAS,IAuB1C,MAAO,CAAEiI,IAAAA,EAAKhI,OAlBd,SAAgB5F,GACZ4N,EAAI5N,EAAG0D,KAiBWrC,UAftB,SAAmBtB,EAAK41B,EAAa71B,GACjC,MAAM41B,EAAa,CAAC31B,EAAK41B,GAMzB,OALAJ,EAAYxvB,IAAI2vB,GACS,IAArBH,EAAYK,OACZN,EAAOD,EAAMznB,IAAQ9N,GAEzBC,EAAI2D,GACG,KACH6xB,EAAYxuB,OAAO2uB,GACM,IAArBH,EAAYK,OACZN,IACAA,EAAO,SCnDvB,MAGMO,GFAe,EAAC9B,EAAaC,EAAa3wB,IACrC,IAAIywB,GAAeC,EAAaC,EAAa3wB,GEDvCyyB,mMAGXC,GAAYX,GAASS,GAASnR,KAAKrJ,aAEzCwa,GAASnR,KAAKvH,mBAAkB,CAACha,EAAOiV,KACzB,aAATjV,EACF4yB,GAAUnoB,IAAIwK,EAAQsB,MACJ,cAATvW,GACT4yB,GAAUnoB,IAAI,gBAIH,CACV8L,WACH,OAAOqc,IAEJF,eACH,OAAOA,IAERG,UAAU7Z,GACT,MAAM1P,KAACA,EAAIQ,MAAEA,SAAe4oB,GACzB5sB,KAAK,YACLyW,OAAO,uBACP2C,GAAG,KAAMlG,GACTwE,SAEH,GAAI1T,EACH,MAAMA,EAEP,OAAOR,GAERupB,iBAAiBhe,GACjB,MAAMvL,KAACA,EAAIQ,MAAEA,SAAe4oB,GAC1B5sB,KAAK,YACLyW,OAAO,uBACP2C,GAAG,QAASrK,GACZ2I,SAED,GAAI1T,EACH,MAAMA,EAEP,OAAOR,GAERwpB,cAAa,IACLJ,GAASnR,KAAKtI,OAAO,CAC3B9C,SAAU,YAGZF,QAAO,IACCyc,GAASnR,KAAKtL,WCxDqD,SAAShT,GAAE2E,EAAErK,GAAE,GAAI,OAAOqK,EAAEA,EAAEhJ,MAAMgJ,EAAEmrB,WAAW,MAAM,EAAE,EAAEnrB,EAAE0L,SAAS,OAAO,OAAE,IAAUyf,WAAW,OAAOnrB,EAAE,IAAIA,GAAO,MAAJA,IAAUA,EAAE,IAAIrK,IAAIqK,EAAE0L,SAAS,OAAO1L,GAAG,KAAKA,EAAiT,SAAS4S,GAAE5S,EAAErK,EAAE+F,GAAG,GAAO,KAAJA,EAAO,OAAOsE,EAAE,GAAU,MAAPtE,EAAE,GAAS,OAAOA,EAAE,IAAI0vB,EAAElvB,GAAGA,EAAEqJ,MAAM,KAAK5I,QAAOub,GAAO,KAAJA,IAAQmT,EAAED,EAAEprB,GAAe,MAAM,KAAhBrK,EAAEy1B,EAAEz1B,GAAG,IAAe+G,KAAI,CAACR,EAAEgc,IAAImT,EAAEnT,KAAInU,KAAK,KAAK,IAAIrI,EAAE,SAASc,GAAEwD,EAAErK,EAAE+F,EAAE0vB,GAAG,IAAIC,EAAE,CAAC11B,EAAE,QAAQA,GAAGwjB,QAAO,CAACxd,EAAEO,KAAK,IAAIgc,EAAElY,EAAEnH,aAAaqD,GAAG,OAAOR,GAAGsE,EAAEpH,gBAAgBsD,GAAO,OAAJgc,EAASvc,EAAEuc,KAAG,GAAI,OAAOkT,GAAO,KAAJC,IAAUA,GAAGD,IAAG,GAAG,SAASE,GAAEtrB,GAAG,IAAIrK,EAAEqK,EAAEuF,MAAM,KAAK7I,KAAIhB,GAAGA,EAAE6J,MAAM,OAAM4T,QAAO,CAACzd,EAAE0vB,KAAK,IAAIC,EAAED,EAAE,GAAG,IAAIC,EAAE,OAAO3vB,EAAE,IAAIC,IAAEyvB,EAAExwB,OAAO,IAAEwwB,EAAEA,EAAExwB,OAAO,GAAM,MAAiB,iBAAHe,GAAaA,EAAEqY,SAAS,OAAOrY,EAAEA,EAAE4J,MAAM,WAAa,IAAP7J,EAAE2vB,GAAY3vB,EAAE2vB,GAAG,CAAC1vB,GAAGD,EAAE2vB,GAAGl1B,KAAKwF,GAAGD,IAAG,IAAI,OAAOvG,OAAOuP,QAAQ/O,GAAGwjB,QAAO,CAACzd,EAAE0vB,KAAK1vB,EAAE0vB,EAAE,IAAIA,EAAE,GAAGxwB,OAAO,EAAEwwB,EAAE,GAAGA,EAAE,GAAG,GAAG1vB,IAAG,IAAyI,SAAS6vB,GAAEvrB,EAAErK,GAAG,OAAOqK,EAAErK,EAAEqK,EAAE,GAAG,SAASlJ,GAAEkJ,GAAG,MAAM,IAAIzG,MAAM,WAAWyG,GAAG,IAAoOwrB,GAAEC,GAAEC,GAApO/wB,GAAE,CAACgxB,QAAQ,EAAEC,KAAK,EAAEC,OAAO,EAAEC,IAAI,EAAE92B,IAAIgL,EAAErK,EAAE+F,EAAE0vB,GAAG,OAAOprB,IAAIvB,KAAKktB,QAAQh2B,GAAGA,IAAIqK,IAAIvB,KAAKmtB,KAAKlwB,GAAGA,IAAI0vB,GAAGA,KAAKW,aAAa,OAAO3f,QAAmC,WAA3BA,OAAO/F,SAAS2lB,SAAgCvtB,KAAKktB,QAAjBltB,KAAKotB,SAAqDj2B,GAAE,GAAGyI,GAAM,WAAa,IAAqB1I,EAAjBqK,EAAErF,GAAEoxB,aAAiEX,EAAElvB,GAAGvG,GAAGA,EAAEs2B,GAAEjsB,IAAIqrB,EAAEnvB,IAAIA,IAAI8D,EAAE9D,GAAzEkQ,OAAO8f,aAAa9f,OAAO+f,WAAWX,GAAE,KAAwCxrB,IAAIrF,GAAEmxB,KAAKnxB,GAAE3F,IAAIgL,GAAEkY,GAAG9L,OAAO+f,WAAWf,IAAElT,GAAG9L,OAAO8f,aAAad,KAAIA,KAAKzvB,EAAEO,IAAI,IAAIgc,EAAE/iB,OAAO4B,OAAOk1B,GAAEjsB,GAAG9D,GAAG,OAAOgc,EAAEvO,KAAK4hB,GAAzrB,SAAWvrB,GAAG,OAAO7K,OAAOuP,QAAQ1E,GAAGtD,KAAI,EAAE/G,EAAE+F,KAAKA,GAAM,IAAJA,EAAO/F,EAAE,GAAGA,KAAKsI,MAAMqD,QAAQ5F,GAAGA,EAAEqI,KAAK,KAAKrI,IAAI,OAAMiB,QAAOhH,GAAGA,IAAGoO,KAAK,KAA2jBqoB,CAAElU,EAAEE,OAAO,KAAKmT,GAAErT,EAAEhG,KAAK,MAAM,MAAM,CAACjN,KAAKomB,EAAE1xB,IAAIuC,GAAG+vB,GAAEjsB,GAAGqsB,GAAGnwB,EAAEgc,IAAgI,SAAWlY,EAAErK,EAAE+F,IAAIA,IAAI+vB,GAAEC,IAAG,IAAIN,EAAEC,GAAGiB,SAAW5wB,EAAE,UAAU,QAAf,SAA8B,GAAG,GAAG2vB,GAAG1wB,GAAE3F,IAAIgL,GAAEqrB,GAAGD,EAAEx1B,GAAED,KAAG01B,GAAGD,EAAE,IAAIz1B,OAAK01B,GAAGG,GAAE71B,KAAtP42B,CAAEvsB,EAAE9D,EAAEgc,GAAGkT,KAAKd,MAAMpuB,GAAGvG,EAAEuG,EAAEmvB,KAAKd,OAAO50B,EAAE,KAAK01B,EAAE1wB,GAAEmxB,MAAMjpB,IAAI3G,GAAGuC,KAAK4tB,GAAG1wB,EAAEO,IAAIA,EAAEyN,OAAOhF,UAAU,OAAsa,SAAW3E,GAAG,IAAIrK,EAAE,IAAIqK,EAAErG,MAAMye,MAAM1c,EAAEQ,GAAG8D,EAAE6C,IAAI,CAACuV,MAAMlc,IAAIkvB,EAAElvB,GAAGR,EAAEQ,EAAEvG,MAAyBgG,EAAEO,GAAG8D,EAAE6C,IAAI,CAACqP,KAAKhW,IAAI,MAAM,CAACgW,KAAK,CAACvY,IAAnD,IAAIqG,EAAErG,MAAMuY,KAA6CrP,IAAIlH,EAAEV,MAAM,IAAIU,EAAE,KAAKyc,MAAM,CAAC3S,QAAQ/J,EAAET,MAAM,IAAIS,EAAE,IAAI/B,IAAIuC,GAAUA,EAAEvG,IAAIuG,GAAGvG,IAAKkN,IAAI3G,EAAEgc,GAAGkT,GAAErM,IAAIA,EAAE7iB,GAAGgc,EAAE6G,MAAK/iB,OAAOE,GAAGkvB,GAAElT,IAAIA,EAAEhc,WAAWgc,EAAEhc,GAAGgc,QAAtrByE,CAAEle,OAAO+tB,KAAKtwB,GAAGtG,GAAEsG,GAApbuwB,GAAmjB,SAASR,GAAEjsB,GAAG,IAAIrK,EAAEyW,OAAO/F,SAAS3K,EAAEf,GAAE3F,IAAIgL,GAAEqrB,IAAIz1B,GAAED,EAAEq2B,SAASvmB,QAAQ7P,GAAE,IAAID,EAAEq2B,UAAUr2B,EAAE+2B,OAAO/2B,EAAEuc,OAAKmZ,GAAG7qB,OAAO7K,EAAEuc,KAAKlb,MAAM,IAAI,OAAKq0B,GAAGG,IAAG,MAAKJ,EAAE1vB,EAAE0Y,MAAM,uCAAuC,OAAOsX,GAAEhwB,EAAE,CAACqJ,IAAIrJ,EAAEwC,KAAKutB,GAAE9hB,KAAKyhB,EAAE,IAAI,GAAGhT,MAAMkT,GAAEF,EAAE,IAAI,IAAIlZ,KAAKkZ,EAAE,IAAI,IAAkS,IAAIuB,GAAM,WAAa,IAAIr2B,UAAU0J,GAAGR,GAAEnB,GAAE1E,OAAMhE,IAAI0I,GAAEisB,MAAM30B,GAAG,IAAI+F,EAA4hB,SAAWsE,GAAG,IAAIrK,EAAE+F,IAAI,IAAI0vB,EAAE1vB,EAAExE,OAAO01B,QAAQ,WAAWvB,EAAED,GAAG5uB,GAAE4uB,EAAE,UAAS,EAAG,SAASzvB,EAAEyvB,GAAG5uB,GAAE4uB,EAAE,gBAAgBlvB,EAAER,EAAEmxB,SAASnxB,EAAEoxB,SAASpxB,EAAEqxB,QAAQrxB,EAAEsxB,SAAS,GAAM,SAAH3B,IAAa1vB,IAAIO,GAAGkvB,EAAE,CAAC,IAAIlT,EAAEkT,EAAEvyB,aAAa,QAAQ4M,QAAQ,OAAO,IAAI,oBAAoBhF,KAAKyX,KAAKxc,EAAEuxB,iBAAiBjtB,EAAEkY,EAAEiT,WAAW,KAAKjT,EAAEkT,EAAE9e,KAAK7G,QAAQ2G,OAAO/F,SAAS6mB,OAAO,QAAQ,OAAO30B,iBAAiB,QAAQ5C,GAAG,IAAI6C,oBAAoB,QAAQ7C,GAA17B0S,CAAEhK,GAAEguB,IAAI,MAAM,KAAKhuB,GAAEksB,OAAO7uB,QAAO,MAAM,CAACpF,UAAU0J,EAAEmtB,KAAK9uB,GAAEguB,GAAGpjB,OAAOmkB,GAAEC,KAAKC,GAAEC,kBAAkB53B,GAAG0I,GAAE4G,KAAKtP,EAAEgF,GAAEixB,KAAKjxB,GAAEgxB,SAAS1mB,KAAK,CAACiN,KAAK,IAAI7T,GAAE4G,KAAKtK,GAAEixB,MAAMU,QAAQ,IAAIjuB,GAAE4G,KAAKtK,GAAEgxB,SAAS6B,OAAO,IAAInvB,GAAE4G,KAAKtK,GAAEkxB,SAASW,KAAKnuB,GAAEmuB,KAAKnmB,SAAShI,GAAEsG,WAAjT8oB,GAA8/B,SAASL,KAAI,OAAOM,EAAE,SAASL,KAAKpkB,OAA0I,IAAI0kB,GAAE,QAAQC,GAAEC,GAAE,CAAChW,QAAQ,GAAGiW,SAAQ,IAAK,SAASC,GAAE/tB,GAAG,IAAIrK,EAAEq4B,EAAEL,KAAIC,IAAGj4B,EAAEs4B,OAAOt4B,EAAEu4B,WAAWp3B,GAAE,GAAGkJ,EAAEkuB,SAAS,mBAAmB,gBAAgBluB,EAAE2J,6BAA6BhU,EAAEu4B,SAAS,mBAAmB,gBAAgBv4B,EAAEgU,MAAM,2BAA2B,IAAIjO,EAAEsE,EAAEkuB,SAAS,YAAY,SAAS9C,EAAE+C,GAAE,IAAI9C,EAAEwC,GAAE,CAACK,SAASluB,EAAEkuB,SAASE,OAAOz4B,EAAEkF,OAAOc,GAAG0vB,EAAE4C,OAAOtyB,EAAEgO,KAAK+B,SAAS,MAAM2f,EAAExT,QAAQxc,GAAE,GAAGgwB,EAAE+C,OAAOvW,SAAS,KAAKlc,EAAEgO,QAAQ0hB,EAAEllB,SAASxK,EAAEwK,SAASklB,EAAEgD,WAAW1yB,EAAE0yB,WAAWhD,EAAEiD,WAAW3yB,EAAE2yB,WAAWjD,EAAEjX,SAASma,SAAS,KAAKlD,EAAE+C,OAAO1yB,GAAGV,IAAIqwB,GAAGJ,UAAUI,EAAE+C,OAAO1yB,GAAGM,OAAOqvB,GAAGA,EAAE+C,OAAOI,aAAaxyB,OAAOqvB,GAAGA,EAAEoD,OAAOC,IAAIrD,EAAEoD,OAAOC,KAAKrD,EAAE+C,OAAOha,UAAUua,KAAK,KAAK3uB,EAAE4uB,UAAUvD,EAAE6C,UAAU7C,EAAE+C,OAAOI,aAAaxzB,IAAIqwB,IAAIwD,KAAK,KAAK7uB,EAAE8uB,SAASzD,EAAE+C,OAAOI,aAAaxyB,OAAOqvB,IAAIjX,MAAM6W,UAAUI,EAAEyC,SAAQ,EAAG,IAAInkB,KAAKhO,EAAEoJ,IAAI7I,EAAEgC,KAAKga,EAAEE,MAAM2G,GAAGsM,EAAEoD,OAAOpoB,SAAS0oB,EAAj9I,SAAW/uB,EAAErK,GAAGqK,EAAE3E,GAAE2E,GAAE,GAAIrK,EAAE0F,GAAE1F,GAAE,GAAI,IAAI+F,EAAE,GAAG0vB,EAAE,GAAGC,GAAE,EAAG1vB,EAAEqE,EAAEuF,MAAM,KAAK7I,KAAIwb,GAAGA,EAAEiT,WAAW,MAAMzvB,EAAEvF,KAAK+hB,EAAElhB,MAAM,IAAI,aAAakhB,IAAGnU,KAAK,OAAO7H,EAAEvG,EAAEye,MAAM,IAAI5H,OAAO,IAAI7Q,OAAO,OAAOO,IAAImvB,GAAE,EAAGnvB,EAAEvG,EAAEye,MAAM,IAAI5H,OAAO,IAAI7Q,OAAOO,GAAGR,EAAEnG,SAAQ,CAAC2iB,EAAE6G,IAAIqM,EAAElT,GAAGhc,EAAE6iB,EAAE,KAAI,CAACkP,MAAM5C,EAAEpiB,OAAOmiB,EAAE4D,KAAK9yB,EAAE,GAAGlF,MAAM,GAAG,KAAK,KAAyqImF,CAAEkvB,EAAExT,QAAQlc,GAAG,IAAI0vB,EAAE6C,UAAUa,GAAG1D,EAAEllB,YAAYklB,EAAE4C,OAAO5C,EAAE4C,OAAOc,EAAEd,OAAO,CAAC,IAAIgB,EAAErc,GAAEjX,EAAE0vB,EAAE+C,OAAOvW,QAAQwT,EAAEllB,UAAU,OAAOwmB,GAAEQ,KAAK8B,GAAE,GAAI5D,EAAEgC,KAAK0B,GAAG,CAAC7wB,KAAKga,EAAEnT,IAAI7I,EAAEkc,MAAM2G,EAAE3K,MAAM2a,EAAEC,KAAKnX,QAAQwT,EAAExT,QAAQqX,YAAY7D,EAAE+C,OAAOf,MAAMhC,EAAE+C,OAAOf,KAAK6B,YAAYl4B,SAAS,GAAGiS,OAAO8lB,EAAE9lB,OAAO3S,UAAU80B,EAAE90B,WAAW+0B,EAAEiD,YAAYjD,EAAEgC,MAAMhC,EAAEgC,KAAK6B,YAAY/4B,KAAK,CAACyB,KAAKyzB,EAAEiD,WAAW3kB,KAAKolB,EAAEC,OAAO5D,EAAEvoB,IAAIwoB,EAAEgC,OAAM0B,GAAI1D,EAAE6C,aAAY7C,EAAE4C,OAAO5C,EAAE4C,OAAOc,EAAEd,QAAU5C,EAAE+C,OAAOC,YAAahD,EAAE+C,OAAON,QAAyDzC,EAAEwD,QAAjD7uB,EAAEmvB,OAAO9D,EAAEgC,MAAMhC,EAAE+C,OAAON,SAAQ,EAAGzC,EAAEsD,QAAiBI,GAAG1D,EAAE+D,mBAAmB,O3Cs8BnuK31B,E2Ct8B4uKk0B,G3Cs8BvuKj0B,E2Ct8ByuK2xB,E3Cu8B9vK/xB,IAAwBrD,GAAGyD,QAAQmJ,IAAIpJ,EAAKC,GAxBhD,SAAiBzE,GACbqE,IAAwBrD,GAAGsG,SAASpG,KAAKlB,G2Ch7BwtKo6B,EAAE,IAAIhE,EAAEkD,aAAYlD,E3Cs8BzxK,IAAoB5xB,EAAKC,E2Ct8BkwK,SAAS4zB,KAAI,O3C+8BpxK7zB,E2C/8B6xKk0B,G3Cg9BtyKr0B,IAAwBrD,GAAGyD,QAAQqB,IAAItB,G2Ch9BkwKu0B,EAAEL,IAAGN,KAAKv2B,GAAE,yE3C+8Bh0K,IAAoB2C,E2C/8Bq3K,SAASo0B,GAAE7tB,GAAG,IAAIrK,EAAE,CAAC84B,OAAO,GAAGR,OAAM,EAAGpW,QAAQ,KAAKwV,KAAK,KAAKe,OAAO,KAAKF,UAAS,EAAG/nB,UAAS,EAAGkoB,YAAW,EAAGC,WAAW,KAAKR,SAAQ,EAAGwB,OAAO,IAAI50B,IAAI8zB,aAAa,IAAI9zB,IAAI60B,UAAU,IAAI70B,IAAIuwB,sBAAsB,IAAIxsB,KAAKyvB,iB3C2+BtmL9zB,IACOJ,G2C5+BonLyE,KAAK6wB,OAAOzE,KAAK,GAA2B,GAAxBpsB,KAAK+vB,aAAa3D,MAA2B,GAAlBpsB,KAAK6wB,OAAOzE,MAASpsB,KAAK8wB,UAAU1E,KAAK,GAAG,CAAC,IAAInvB,EAAE+C,KAAK,KAAuB,GAAlB/C,EAAE6zB,UAAU1E,MAAS,GAAGnvB,EAAEA,EAAE0yB,QAAQ1yB,EAAE,OAAOA,GAAGA,EAAE6zB,UAAUh6B,SAAQ61B,IAAI,GAAGA,EAAEjlB,SAAS,CAAC,IAAIklB,EAAEzY,GAAE,IAAIwY,EAAEgD,OAAOvW,QAAQuT,EAAEjlB,UAAUwmB,GAAEQ,KAAK9B,GAAE,QAASD,EAAEuD,YAAWrE,QAAQ7rB,KAAKgwB,OAAOC,KAAKjwB,KAAKgwB,OAAOC,GAAG/B,GAAEr2B,WAAUoF,IAAI+C,KAAKgwB,OAAOpoB,SAAS3K,EAAiB,OAAf+C,KAAKoZ,SAAgBpZ,KAAK2V,aAAYA,QAAQ3V,KAAK2wB,kBAAkB,OAAOj6B,OAAO4B,OAAOpB,EAAEqK,GAAGrK,EAAE20B,QAAQ30B,kH3CiElkM,SAAqBc,EAAYC,EAAKC,EAAS1B,GAC3C,GAAIwB,EAAY,CACZ,MAAM+4B,EAAWh5B,EAAiBC,EAAYC,EAAKC,EAAS1B,GAC5D,OAAOwB,EAAW,GAAG+4B,4FA0B7B,SAA0BC,EAAMC,EAAiBh5B,EAAKC,EAASg5B,EAAcC,GACzE,GAAID,EAAc,CACd,MAAME,EAAer5B,EAAiBk5B,EAAiBh5B,EAAKC,EAASi5B,GACrEH,EAAKp0B,EAAEw0B,EAAcF,kBArB7B,SAA0Bl5B,EAAYE,EAASyE,EAAOnG,GAClD,GAAIwB,EAAW,IAAMxB,EAAI,CACrB,MAAM66B,EAAOr5B,EAAW,GAAGxB,EAAGmG,IAC9B,QAAsB+F,IAAlBxK,EAAQyE,MACR,OAAO00B,EAEX,GAAoB,iBAATA,EAAmB,CAC1B,MAAMC,EAAS,GACTC,EAAMplB,KAAKqlB,IAAIt5B,EAAQyE,MAAMR,OAAQk1B,EAAKl1B,QAChD,IAAK,IAAID,EAAI,EAAGA,EAAIq1B,EAAKr1B,GAAK,EAC1Bo1B,EAAOp1B,GAAKhE,EAAQyE,MAAMT,GAAKm1B,EAAKn1B,GAExC,OAAOo1B,EAEX,OAAOp5B,EAAQyE,MAAQ00B,EAE3B,OAAOn5B,EAAQyE,oBAYnB,SAAkCzE,GAC9B,GAAIA,EAAQD,IAAIkE,OAAS,GAAI,CACzB,MAAMQ,EAAQ,GACRR,EAASjE,EAAQD,IAAIkE,OAAS,GACpC,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQD,IACxBS,EAAMT,IAAM,EAEhB,OAAOS,EAEX,OAAQ,iG4CjFP1E,kC5CwXMqB,EAAK,gD4CxXXrB,oOA5BUiT,EAAO,kBACPukB,GAAW,eACX/nB,GAAW,iBACXkoB,GAAa,iBACbC,EAAa,QAEpB4B,GAAc,EACdjnB,KACAokB,WAEE8C,EAAQC,IACVlC,SAAAA,EACAU,aAASsB,GAAY,IACrBpB,aAASoB,GAAY,IACrBf,OAAOkB,OACHhD,EAAKgD,OACLpnB,EAASokB,EAAKpkB,0QAInBknB,EAAMt1B,QACL8O,KAAAA,EACAxD,SAAAA,EACAkoB,WAAAA,EACAC,WAAAA,wkBCpBRj3B,SACCJ,cAGAA,OACCA,cACAA,6GACCq5B,GAAKpF,4QC+DDx0B,6FAQCA,4TAaWA,ycAxBnBW,SACCJ,OACCA,cACAA,qBACAA,cAKDA,OACCA,OACCA,qBACAA,cAGDA,OACCA,cACAA,cAEAA,cACAA,WAAgCP,aAChCO,cACAA,WAAiCP,aACjCO,cACAA,wHArBIP,eAQCA,qBAS2BA,UAAAA,wBAECA,UAAAA,gBAEjBA,6EAxFduW,EAAQ,GACRsjB,EAAQ,GAER5hB,EAAO2hB,GAAK3hB,2BAEf2hB,GAAK32B,IAAI62B,EAAMpf,IAAI/W,MAAMrC,QACxBiV,EAAQjV,EAAKiV,WACbsjB,EAAQv4B,EAAKy4B,iBAKXC,EAAU,GACVC,EAAS,GACTC,EAAe,kBACJC,QACVC,EAAalmB,KAAKsB,MAAM8F,SAAS2e,QAChCG,GAAcA,EAAa,IA3BV7jB,CAAAA,GACfzM,OAAOyM,GACZtM,cACAyT,MACD,yJAuBqC2c,CAAcL,OACnDE,EAAe,yCAKXI,QAAoBV,GAAKW,WAAWP,GACpCQ,EAAiBF,EAAYP,SAAWK,EAExCK,QAAmBb,GAAK32B,IAAI62B,EAAMpf,IAClCggB,EAAgBD,EAAWV,SAAWK,KACtCM,EAAgB,kBACnBR,EAAe,iCAGZI,EAAY5f,IAAM+f,EAAW/f,QAChCwf,EAAe,2CAGRS,SAAaf,GAAKxF,SACxB5sB,KAAK,YACLrD,QAAQ41B,SAAUS,IAClB9c,OAAOnH,MAAOyjB,QACRY,SAAahB,GAAKxF,SACxB5sB,KAAK,YACLrD,QAAQ41B,SAAUW,IAClBhd,OAAOhD,GAAIof,EAAMpf,WAEXmgB,SAAejB,GAAKxF,SAC1B5sB,KAAK,gBACLrD,QACE22B,OAAQL,EAAW/f,GAAIsf,QAASM,EAAY5f,GAAWuf,OAAAA,IAEzDvc,OAAOhD,GAAI,QAEbmf,EAAQa,EAAc/wB,kBACdoxB,GACR1gB,QAAQ4B,IAAI8e,OACZb,EAAe,8EAcfN,GAAKjiB,sBAe2BqiB,gCAECC,6BACRE,o3BC9EZ,wIAVXn6B,yfAHAiY,EAAO2hB,GAAK3hB,8CCLL,kEAAQ,CACnBzX,OAAQW,SAAS6J"}